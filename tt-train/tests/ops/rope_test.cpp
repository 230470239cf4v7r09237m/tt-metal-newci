// SPDX-FileCopyrightText: (c) 2025 Tenstorrent AI ULC
//
// SPDX-License-Identifier: Apache-2.0
#include <gtest/gtest.h>

#include <core/ttnn_all_includes.hpp>

#include "autograd/tensor.hpp"
#include "core/tt_tensor_utils.hpp"
#include "core/xtensor_utils.hpp"
#include "modules/positional_embeddings.hpp"
#include "modules/rotary_embedding.hpp"

namespace ttml::modules::tests {

class RoPETest : public ::testing::Test {
protected:
    void SetUp() override {
        ttml::autograd::ctx().open_device();
    }

    void TearDown() override {
        ttml::autograd::ctx().close_device();
    }
};

TEST_F(RoPETest, MatchesMetaImpl) {
    // Head dim must be a multiple of TILE_WIDTH
    // Head dim must be <= 256

    // Input query tensor
    xt::xarray<float> xq = {
        {{{1.92692F,  1.48728F,  0.90072F,  -2.10552F, 0.67842F,  -1.23454F, -0.04307F, -1.60467F,
           -0.75214F, 1.64872F,  -0.39248F, -1.40361F, -0.72788F, -0.55943F, -0.76884F, 0.76245F,
           1.64232F,  -0.15960F, -0.49740F, 0.43959F,  -0.75813F, 1.07832F,  0.80080F,  1.68062F,
           1.27912F,  1.29642F,  0.61047F,  1.33474F,  -0.23162F, 0.04176F,  -0.25158F, 0.85986F},
          {-1.38467F, -0.87124F, -0.22337F, 1.71736F,  0.31888F,  -0.42452F, 0.30572F,  -0.77459F,
           -1.55757F, 0.99564F,  -0.87979F, -0.60114F, -1.27415F, 2.12279F,  -1.23465F, -0.48791F,
           -0.91382F, -0.65814F, 0.07802F,  0.52581F,  -0.48799F, 1.19137F,  -0.81401F, -0.73599F,
           -1.40325F, 0.03600F,  -0.06348F, 0.67561F,  -0.09781F, 1.84459F,  -1.18454F, 1.38355F},
          {1.44513F,  0.85641F,  2.21808F,  0.52317F,  0.34665F,  -0.19733F, -1.05459F, 1.27800F,
           -0.17219F, 0.52379F,  0.05662F,  0.42630F,  0.57501F,  -0.64172F, -2.20640F, -0.75080F,
           0.01087F,  -0.33874F, -1.34068F, -0.58537F, 0.53619F,  0.52462F,  1.14120F,  0.05164F,
           0.74395F,  -0.48158F, -1.04947F, 0.60390F,  -1.72230F, -0.82777F, 1.33470F,  0.48354F},
          {-2.50954F, 0.48800F,  0.78459F,  0.02865F, 0.64076F, 0.58325F, 1.06693F,  -0.45015F,
           -0.18527F, 0.75276F,  0.40476F,  0.17847F, 0.26491F, 1.27317F, -0.00131F, -0.30360F,
           -1.45703F, -0.10234F, -0.59915F, 0.47706F, 0.72618F, 0.09115F, -0.38907F, 0.52792F,
           -0.01269F, 0.24084F,  0.13254F,  0.76424F, 1.09501F, 0.33989F, 0.71997F,  0.41141F},
          {1.93116F,  1.01186F, -1.43641F, -1.12986F, -0.13603F, 1.63541F,  0.65474F,  0.57600F,
           1.14151F,  0.01856F, -1.80581F, 0.92543F,  -0.37534F, 1.03309F,  -0.68665F, 0.63681F,
           -0.97267F, 0.95846F, 1.61920F,  1.45061F,  0.26948F,  -0.21038F, -0.73280F, 0.10430F,
           0.34875F,  0.96759F, -0.46569F, 1.60480F,  -2.48012F, -0.41754F, -1.19545F, 0.81234F}},
         {{-1.90055F, 0.22858F,  0.02486F,  -0.34595F, 0.28683F,  -0.73084F, 0.17482F,  -1.09393F,
           -1.60216F, 1.35290F,  1.28883F,  0.05230F,  -1.54685F, 0.75671F,  0.77552F,  2.02654F,
           0.03582F,  0.12059F,  -0.80566F, -0.20758F, -0.93195F, -1.59097F, -1.13598F, -0.52260F,
           -0.51877F, -1.50128F, -1.92665F, 0.12785F,  1.02291F,  -0.55579F, 0.70427F,  0.70988F},
          {1.77439F,  -0.92155F, 0.96245F,  -0.33702F, -1.17533F, 0.35806F,  0.47877F,  1.35370F,
           0.52606F,  2.11204F,  -0.52076F, -0.93201F, 0.18516F,  1.06869F,  1.30653F,  0.45983F,
           -0.81463F, -1.02124F, -0.49492F, -0.59225F, 0.15432F,  0.44077F,  -0.14829F, -2.31844F,
           -0.39800F, 1.08049F,  -1.78086F, 1.50805F,  0.30943F,  -0.50031F, 1.03500F,  1.68965F},
          {-0.00451F, 1.66679F,  0.15392F,  -1.06025F, -0.57266F, 0.08357F,  0.39991F,  1.98921F,
           -0.07199F, -0.90609F, -2.04871F, -1.08106F, 0.01762F,  0.07823F,  0.19316F,  0.40967F,
           -0.92913F, 0.27619F,  -0.53888F, 0.46258F,  -0.87189F, -0.02712F, -0.35325F, 1.46386F,
           1.25543F,  -0.71496F, 0.85392F,  0.51299F,  0.53973F,  0.56551F,  0.50579F,  0.22245F},
          {-0.68548F, 0.56356F,  -1.50718F, -1.61067F, -1.47905F, 0.43227F,  -0.12503F, 0.78212F,
           -1.59877F, -0.10913F, 0.71520F,  0.03914F,  1.30586F,  0.24659F,  -1.97759F, 0.01790F,
           -1.37930F, 0.62580F,  -2.58495F, -0.02400F, -0.12219F, -0.74700F, 1.70931F,  0.05792F,
           1.19298F,  1.93729F,  0.72871F,  0.98089F,  0.41459F,  1.15656F,  0.26905F,  -0.03663F},
          {0.97329F, -1.01508F, -0.54192F, -0.44102F, -0.31362F, -0.12925F, -0.71496F, -0.04756F,
           2.02074F, 0.25392F,  0.93644F,  0.71224F,  -0.03177F, 0.10164F,  1.34330F,  0.71327F,
           0.40380F, -0.71398F, 0.83373F,  -0.95855F, 0.45363F,  1.24609F,  -2.30651F, -1.28689F,
           0.17989F, -2.12676F, -0.13408F, -1.04077F, -0.76472F, -0.05528F, 1.20485F,  -0.98247F}}}};

    // Input key tensor
    xt::xarray<float> xk = {
        {{{0.43344F, -0.71719F, 1.05537F,  -1.45340F, 0.46515F, 0.37139F,  -0.00466F, 0.07955F,
           0.37818F, 0.70511F,  -1.72370F, -0.84348F, 0.43514F, 0.26589F,  -0.58710F, 0.08269F,
           0.88538F, 0.18244F,  0.78638F,  -0.05792F, 0.56667F, -0.70976F, -0.48751F, 0.05010F,
           0.60841F, 1.63087F,  -0.08472F, 1.08441F,  0.94777F, -0.67663F, -0.57302F, -0.33032F},
          {-0.79394F, 0.37523F,  0.08791F,  -1.24148F, -0.32025F, -0.84438F, -0.55135F, 1.98896F,
           1.90031F,  1.69508F,  0.02809F,  -0.17537F, -1.77350F, -0.70464F, -0.39465F, 1.88681F,
           -0.21844F, 0.16630F,  2.14417F,  1.70457F,  0.34590F,  0.64248F,  -0.20395F, 0.68537F,
           -0.13969F, -1.18075F, -1.28293F, 0.44849F,  -0.59074F, 0.85406F,  -0.49007F, -0.35946F},
          {0.66637F,  -0.07427F, -0.20960F, 0.16632F,  1.47030F,  -0.93909F, -0.60132F, -0.09964F,
           -0.98515F, -2.48846F, -0.33132F, 0.84358F,  0.98745F,  -0.33197F, -0.80762F, 0.82436F,
           0.02470F,  -1.06415F, -0.76019F, -0.40751F, 0.96236F,  -0.14264F, 0.15271F,  -0.03880F,
           0.94461F,  -1.58241F, 0.98713F,  1.14567F,  -0.14181F, -0.27634F, -0.19321F, 0.77678F},
          {0.68388F,  -1.32459F, -0.51608F, 0.60018F,  -0.47022F, -0.60864F, -0.04619F, -1.64574F,
           -0.48333F, -0.74029F, 0.31428F,  0.14156F,  1.03482F,  -0.62644F, -0.51509F, 0.69029F,
           -0.49400F, 1.13661F,  -0.46184F, 1.41998F,  0.84852F,  -0.04789F, 0.66856F,  1.04298F,
           0.68990F,  -1.31293F, 0.03780F,  -1.17021F, -0.10319F, 1.18947F,  0.76069F,  -0.74630F},
          {-1.38388F, 0.48687F,  -1.00203F, 0.03295F,  -0.42920F, -0.98180F, -0.64206F, 0.82659F,
           1.59140F,  -0.12081F, -0.48302F, 0.11330F,  0.07715F,  -0.92281F, -1.26200F, 1.08605F,
           1.09664F,  -0.68369F, 0.06604F,  -0.00077F, 0.16206F,  1.19596F,  -1.30615F, -1.40397F,
           -1.05972F, 0.30573F,  0.41506F,  -0.71741F, 2.83397F,  1.95347F,  2.04868F,  -1.08804F}},
         {{1.62169F,  0.85127F,  -0.40047F, -0.60883F, -0.50810F, -0.61849F, -1.64704F, -1.03621F,
           -0.45031F, -0.07297F, -0.54795F, -1.14255F, -0.44875F, -0.03045F, 0.38303F,  -0.04477F,
           1.17994F,  -0.33143F, 0.64950F,  0.09496F,  -0.75259F, -0.64723F, -1.28226F, 1.96529F,
           -0.96385F, -2.56679F, 0.70961F,  0.81984F,  0.62145F,  0.42319F,  -0.33890F, 0.51797F},
          {-1.36377F, 0.19296F,  -0.61033F, 0.16323F,  1.51017F,  0.21230F,  -0.72520F, -0.95277F,
           0.52169F,  -0.46387F, 0.18238F,  -0.38666F, -1.79068F, 0.09329F,  -1.91526F, -0.64218F,
           1.34385F,  -1.29223F, 0.76624F,  0.64540F,  0.35332F,  -2.64749F, -1.45754F, -0.97124F,
           0.25403F,  -0.17906F, 1.19928F,  -0.42922F, 1.01028F,  0.61104F,  1.22084F,  -0.60764F},
          {-1.73760F, -0.12535F, -1.36581F, 1.11175F, -0.62280F, -0.78918F, -0.16782F, 1.64331F,
           2.00709F,  -1.25310F, 1.11887F,  1.77328F, -2.07166F, -0.41253F, -0.97696F, -0.03363F,
           1.85950F,  2.62215F,  0.36905F,  0.38030F, 0.19898F,  -0.23609F, 0.30341F,  -0.45008F,
           0.47390F,  0.65034F,  1.16624F,  0.01694F, 0.53259F,  -0.60354F, -0.17426F, 0.60921F},
          {-0.80322F, -1.12090F, 0.19564F, -0.78152F, -1.78988F, -0.26157F, -0.44025F, 2.18483F,
           -0.48010F, -1.28717F, 0.73888F, 0.03389F,  -0.31229F, -0.25418F, -1.20554F, -0.95421F,
           0.06128F,  0.08526F,  0.74813F, -0.16356F, -0.90856F, 0.31300F,  0.80505F,  -1.11336F,
           0.49816F,  -1.19996F, 0.12711F, 0.44037F,  0.63777F,  0.15979F,  1.76980F,  0.62682F},
          {-1.87365F, 2.32591F,  -0.92039F, 0.66611F,  -0.44026F, -2.31796F, 1.29458F, 0.22267F,
           -0.84834F, 1.64894F,  1.60057F,  -0.07859F, 0.43105F,  0.36835F,  0.76380F, 1.17922F,
           -0.41379F, 0.51841F,  -0.70154F, -0.43234F, 0.14148F,  0.07110F,  0.56335F, -0.57864F,
           -1.08381F, -0.38893F, 0.81261F,  1.49812F,  0.04390F,  1.44432F,  0.23203F, 0.50650F}}}};

    // Expected output tensors from Python implementation
    xt::xarray<float> expected_xq_out = {
        {{{{1.92692F, 1.48728F},
           {0.90072F, -2.10552F},
           {0.67842F, -1.23454F},
           {-0.04307F, -1.60467F},
           {-0.75214F, 1.64872F},
           {-0.39248F, -1.40361F},
           {-0.72788F, -0.55943F},
           {-0.76884F, 0.76245F},
           {1.64232F, -0.15960F},
           {-0.49740F, 0.43959F},
           {-0.75813F, 1.07832F},
           {0.80080F, 1.68062F},
           {1.27912F, 1.29642F},
           {0.61047F, 1.33474F},
           {-0.23162F, 0.04176F},
           {-0.25158F, 0.85986F}},
          {{-0.01502F, -1.63589F},
           {-1.10461F, 1.33381F},
           {0.43509F, -0.30430F},
           {0.43792F, -0.70830F},
           {-1.64919F, 0.83516F},
           {-0.84461F, -0.64964F},
           {-1.34063F, 2.08144F},
           {-1.22578F, -0.50979F},
           {-0.90720F, -0.66724F},
           {0.07507F, 0.52624F},
           {-0.49176F, 1.18982F},
           {-0.81270F, -0.73744F},
           {-1.40328F, 0.03460F},
           {-0.06386F, 0.67558F},
           {-0.09839F, 1.84456F},
           {-1.18478F, 1.38334F}},
          {{-1.38012F, 0.95766F},
           {0.48505F, 2.22672F},
           {0.39625F, 0.04575F},
           {-1.43360F, 0.83080F},
           {-0.27282F, 0.47914F},
           {0.00842F, 0.42996F},
           {0.61441F, -0.60410F},
           {-2.17831F, -0.82878F},
           {0.01764F, -0.33846F},
           {-1.33401F, -0.60041F},
           {0.53286F, 0.52800F},
           {1.14101F, 0.05570F},
           {0.74491F, -0.48010F},
           {-1.05014F, 0.60272F},
           {-1.72177F, -0.82886F},
           {1.33453F, 0.48401F}},
          {{2.41556F, -0.83726F},
           {-0.11944F, 0.77597F},
           {-0.10057F, 0.86060F},
           {1.14759F, 0.15497F},
           {-0.39945F, 0.66439F},
           {0.36905F, 0.24389F},
           {0.14312F, 1.29254F},
           {0.01488F, -0.30324F},
           {-1.45330F, -0.14599F},
           {-0.60712F, 0.46688F},
           {0.72528F, 0.09804F},
           {-0.39188F, 0.52583F},
           {-0.01341F, 0.24080F},
           {0.13125F, 0.76446F},
           {1.09469F, 0.34093F},
           {0.71975F, 0.41179F}},
          {{-0.49651F, -2.12291F},
           {1.78117F, -0.40901F},
           {-1.60046F, 0.36276F},
           {0.11994F, 0.86376F},
           {1.04417F, 0.46162F},
           {-1.96673F, 0.49935F},
           {-0.50267F, 0.97748F},
           {-0.73017F, 0.58640F},
           {-1.01022F, 0.91879F},
           {1.58616F, 1.48666F},
           {0.27212F, -0.20695F},
           {-0.73353F, 0.09908F},
           {0.34488F, 0.96898F},
           {-0.46930F, 1.60375F},
           {-2.47959F, -0.42068F},
           {-1.19603F, 0.81149F}}},
         {{{-1.90055F, 0.22858F},
           {0.02486F, -0.34595F},
           {0.28683F, -0.73084F},
           {0.17482F, -1.09393F},
           {-1.60216F, 1.35290F},
           {1.28883F, 0.05230F},
           {-1.54685F, 0.75671F},
           {0.77552F, 2.02654F},
           {0.03582F, 0.12059F},
           {-0.80566F, -0.20758F},
           {-0.93195F, -1.59097F},
           {-1.13598F, -0.52260F},
           {-0.51877F, -1.50128F},
           {-1.92665F, 0.12785F},
           {1.02291F, -0.55579F},
           {0.70427F, 0.70988F}},
          {{1.73416F, 0.99518F},
           {0.99393F, 0.22803F},
           {-1.22840F, -0.02521F},
           {0.23176F, 1.41704F},
           {0.31258F, 2.15401F},
           {-0.46755F, -0.95980F},
           {0.15128F, 1.07401F},
           {1.29815F, 0.48299F},
           {-0.80437F, -1.02933F},
           {-0.49159F, -0.59503F},
           {0.15292F, 0.44125F},
           {-0.14417F, -2.31870F},
           {-0.39908F, 1.08009F},
           {-1.78171F, 1.50704F},
           {0.30959F, -0.50021F},
           {1.03470F, 1.68983F}},
          {{-1.51374F, -0.69773F},
           {1.02290F, -0.31860F},
           {-0.51129F, -0.27111F},
           {-0.31777F, 2.00397F},
           {0.10946F, -0.90233F},
           {-1.91444F, -1.30415F},
           {0.01264F, 0.07918F},
           {0.17847F, 0.41628F},
           {-0.93447F, 0.25755F},
           {-0.54404F, 0.45649F},
           {-0.87170F, -0.03263F},
           {-0.35845F, 1.46259F},
           {1.25686F, -0.71244F},
           {0.85334F, 0.51395F},
           {0.53937F, 0.56585F},
           {0.50571F, 0.22263F}},
          {{0.59909F, -0.65465F},
           {1.77458F, -1.31022F},
           {-1.21321F, -0.95004F},
           {-0.50539F, 0.60986F},
           {-1.49511F, -0.57672F},
           {0.69847F, 0.15867F},
           {1.27663F, 0.36918F},
           {-1.97573F, -0.08758F},
           {-1.39745F, 0.58415F},
           {-2.58418F, -0.06760F},
           {-0.11510F, -0.74812F},
           {1.70898F, 0.06704F},
           {1.18716F, 1.94086F},
           {0.72706F, 0.98212F},
           {0.41349F, 1.15696F},
           {0.26907F, -0.03649F}},
          {{-1.40440F, -0.07309F},
           {0.68348F, -0.14505F},
           {0.02881F, -0.33798F},
           {-0.51054F, -0.50278F},
           {1.76235F, 1.02079F},
           {0.75399F, 0.90316F},
           {-0.04433F, 0.09682F},
           {1.28921F, 0.80694F},
           {0.43203F, -0.69726F},
           {0.85508F, -0.93955F},
           {0.43784F, 1.25173F},
           {-2.29730F, -1.30327F},
           {0.18839F, -2.12603F},
           {-0.13174F, -1.04107F},
           {-0.76465F, -0.05625F},
           {1.20555F, -0.98162F}}}}};
    xt::xarray<float> expected_xk_out = {
        {{{{0.43344F, -0.71719F},
           {1.05537F, -1.45340F},
           {0.46515F, 0.37139F},
           {-0.00466F, 0.07955F},
           {0.37818F, 0.70511F},
           {-1.72370F, -0.84348F},
           {0.43514F, 0.26589F},
           {-0.58710F, 0.08269F},
           {0.88538F, 0.18244F},
           {0.78638F, -0.05792F},
           {0.56667F, -0.70976F},
           {-0.48751F, 0.05010F},
           {0.60841F, 1.63087F},
           {-0.08472F, 1.08441F},
           {0.94777F, -0.67663F},
           {-0.57302F, -0.33032F}},
          {{-0.74472F, -0.46534F},
           {0.73629F, -1.00344F},
           {-0.04179F, -0.90210F},
           {-0.89448F, 1.86007F},
           {1.72159F, 1.87633F},
           {0.03790F, -0.17351F},
           {-1.75033F, -0.76036F},
           {-0.42814F, 1.87950F},
           {-0.22010F, 0.16411F},
           {2.13455F, 1.71660F},
           {0.34387F, 0.64357F},
           {-0.20517F, 0.68500F},
           {-0.13851F, -1.18089F},
           {-1.28318F, 0.44776F},
           {-0.59101F, 0.85388F},
           {-0.49000F, -0.35954F}},
          {{-0.20978F, 0.63684F},
           {-0.24048F, -0.11733F},
           {1.74103F, 0.11169F},
           {-0.52899F, -0.30279F},
           {-0.47113F, -2.63458F},
           {-0.42390F, 0.80107F},
           {1.00646F, -0.26890F},
           {-0.83642F, 0.79513F},
           {0.04598F, -1.06344F},
           {-0.75556F, -0.41603F},
           {0.96325F, -0.13655F},
           {0.15285F, -0.03826F},
           {0.94777F, -1.58051F},
           {0.98584F, 1.14678F},
           {-0.14164F, -0.27643F},
           {-0.19349F, 0.77671F}},
          {{-0.49011F, 1.40784F},
           {-0.53629F, -0.58220F},
           {0.22059F, -0.73681F},
           {0.79714F, -1.44054F},
           {-0.24297F, -0.85006F},
           {0.28605F, 0.19231F},
           {1.08950F, -0.52560F},
           {-0.55117F, 0.66184F},
           {-0.52787F, 1.12128F},
           {-0.48573F, 1.41199F},
           {0.84894F, -0.03984F},
           {0.66299F, 1.04653F},
           {0.69384F, -1.31086F},
           {0.03978F, -1.17015F},
           {-0.10431F, 1.18938F},
           {0.76109F, -0.74590F}},
          {{1.27303F, 0.72909F},
           {0.60330F, -0.80073F},
           {0.80698F, -0.70493F},
           {-1.02598F, 0.20699F},
           {1.51282F, 0.50844F},
           {-0.49612F, 0.00271F},
           {0.19295F, -0.90571F},
           {-1.33599F, 0.99362F},
           {1.12310F, -0.63929F},
           {0.06604F, 0.00071F},
           {0.14692F, 1.19791F},
           {-1.29613F, -1.41323F},
           {-1.06093F, 0.30149F},
           {0.41667F, -0.71648F},
           {2.83149F, 1.95706F},
           {2.04945F, -1.08658F}}},
         {{{1.62169F, 0.85127F},
           {-0.40047F, -0.60883F},
           {-0.50810F, -0.61849F},
           {-1.64704F, -1.03621F},
           {-0.45031F, -0.07297F},
           {-0.54795F, -1.14255F},
           {-0.44875F, -0.03045F},
           {0.38303F, -0.04477F},
           {1.17994F, -0.33143F},
           {0.64950F, 0.09496F},
           {-0.75259F, -0.64723F},
           {-1.28226F, 1.96529F},
           {-0.96385F, -2.56679F},
           {0.70961F, 0.81984F},
           {0.62145F, 0.42319F},
           {-0.33890F, 0.51797F}},
          {{-0.89922F, -1.04332F},
           {-0.60338F, -0.18731F},
           {1.36927F, 0.67142F},
           {-0.54523F, -1.06603F},
           {0.56540F, -0.40947F},
           {0.20382F, -0.37580F},
           {-1.79273F, 0.03663F},
           {-1.90353F, -0.67613F},
           {1.35671F, -1.27873F},
           {0.76260F, 0.64970F},
           {0.36169F, -2.64636F},
           {-1.45581F, -0.97383F},
           {0.25421F, -0.17880F},
           {1.19953F, -0.42854F},
           {1.01009F, 0.61136F},
           {1.22095F, -0.60743F}},
          {{0.83708F, -1.52783F},
           {-1.59224F, -0.75247F},
           {-0.03583F, -1.00469F},
           {-0.72953F, 1.48204F},
           {2.21603F, -0.82938F},
           {0.91278F, 1.88765F},
           {-2.04145F, -0.54264F},
           {-0.97514F, -0.06835F},
           {1.80669F, 2.65881F},
           {0.36475F, 0.38442F},
           {0.20047F, -0.23483F},
           {0.30501F, -0.44899F},
           {0.47260F, 0.65128F},
           {1.16622F, 0.01825F},
           {0.53297F, -0.60320F},
           {-0.17448F, 0.60914F}},
          {{0.95336F, 0.99633F},
           {0.75356F, 0.28495F},
           {-0.83049F, -1.60698F},
           {-1.49014F, 1.65734F},
           {-0.07827F, -1.37156F},
           {0.72270F, 0.15747F},
           {-0.28681F, -0.28261F},
           {-1.15294F, -1.01714F},
           {0.05869F, 0.08706F},
           {0.75078F, -0.15092F},
           {-0.91149F, 0.30436F},
           {0.81098F, -1.10905F},
           {0.50176F, -1.19846F},
           {0.12637F, 0.44058F},
           {0.63762F, 0.16039F},
           {1.76946F, 0.62776F}},
          {{2.98495F, -0.10233F},
           {0.05916F, -1.13461F},
           {2.07778F, -1.11785F},
           {0.83529F, 1.01382F},
           {-1.42350F, 1.18842F},
           {1.57778F, 0.28039F},
           {0.38113F, 0.41979F},
           {0.67806F, 1.23052F},
           {-0.43419F, 0.50145F},
           {-0.69164F, -0.44801F},
           {0.14057F, 0.07289F},
           {0.56745F, -0.57461F},
           {-1.08225F, -0.39326F},
           {0.80924F, 1.49994F},
           {0.04207F, 1.44438F},
           {0.23167F, 0.50666F}}}}};

    auto device = &ttml::autograd::ctx().get_device();

    // Call the RoPE function
    auto rope_params = RotaryEmbedding::build_params(
        /*sequence_length=*/5,
        /*embedding_dim=*/32);
    auto rope_mod = RotaryEmbedding(rope_params);
    auto xq_tensor = autograd::create_tensor(core::from_xtensor(xq, device));
    auto xk_tensor = autograd::create_tensor(core::from_xtensor(xk, device));
    auto actual_xq_out = rope_mod(xq_tensor);
    auto actual_xk_out = rope_mod(xk_tensor);

    auto actual_xq_out_xt = core::to_xtensor(actual_xq_out->get_value());
    auto actual_xk_out_xt = core::to_xtensor(actual_xk_out->get_value());

    // Check that outputs match the expected values
    EXPECT_TRUE(xt::allclose(actual_xq_out_xt, expected_xq_out, 1e-4));
    EXPECT_TRUE(xt::allclose(actual_xk_out_xt, expected_xk_out, 1e-4));
}

}  // namespace ttml::modules::tests
