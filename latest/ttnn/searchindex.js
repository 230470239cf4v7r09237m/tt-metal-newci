Search.setIndex({"docnames": ["index", "resources/contributing", "resources/support", "tt_metal_models/get_performance", "tt_metal_models/get_started", "ttnn/about", "ttnn/adding_new_ttnn_operation", "ttnn/api", "ttnn/api/ttnn.GetDefaultDevice", "ttnn/api/ttnn.SetDefaultDevice", "ttnn/api/ttnn.abs", "ttnn/api/ttnn.abs_bw", "ttnn/api/ttnn.acos", "ttnn/api/ttnn.acos_bw", "ttnn/api/ttnn.acosh", "ttnn/api/ttnn.acosh_bw", "ttnn/api/ttnn.add", "ttnn/api/ttnn.add_bw", "ttnn/api/ttnn.addalpha", "ttnn/api/ttnn.addalpha_bw", "ttnn/api/ttnn.addcdiv", "ttnn/api/ttnn.addcdiv_bw", "ttnn/api/ttnn.addcmul", "ttnn/api/ttnn.addcmul_bw", "ttnn/api/ttnn.all_gather", "ttnn/api/ttnn.angle", "ttnn/api/ttnn.angle_bw", "ttnn/api/ttnn.arange", "ttnn/api/ttnn.argmax", "ttnn/api/ttnn.as_tensor", "ttnn/api/ttnn.asin", "ttnn/api/ttnn.asin_bw", "ttnn/api/ttnn.asinh", "ttnn/api/ttnn.asinh_bw", "ttnn/api/ttnn.assign_bw", "ttnn/api/ttnn.atan", "ttnn/api/ttnn.atan2", "ttnn/api/ttnn.atan2_bw", "ttnn/api/ttnn.atan_bw", "ttnn/api/ttnn.atanh", "ttnn/api/ttnn.atanh_bw", "ttnn/api/ttnn.batch_norm", "ttnn/api/ttnn.bias_gelu_bw", "ttnn/api/ttnn.bitwise_and", "ttnn/api/ttnn.bitwise_left_shift", "ttnn/api/ttnn.bitwise_not", "ttnn/api/ttnn.bitwise_or", "ttnn/api/ttnn.bitwise_right_shift", "ttnn/api/ttnn.bitwise_xor", "ttnn/api/ttnn.cbrt", "ttnn/api/ttnn.ceil", "ttnn/api/ttnn.ceil_bw", "ttnn/api/ttnn.celu", "ttnn/api/ttnn.celu_bw", "ttnn/api/ttnn.clamp", "ttnn/api/ttnn.clamp_bw", "ttnn/api/ttnn.clip", "ttnn/api/ttnn.clip_bw", "ttnn/api/ttnn.clone", "ttnn/api/ttnn.close_device", "ttnn/api/ttnn.concat", "ttnn/api/ttnn.concat_bw", "ttnn/api/ttnn.conj", "ttnn/api/ttnn.conj_bw", "ttnn/api/ttnn.cos", "ttnn/api/ttnn.cos_bw", "ttnn/api/ttnn.cosh", "ttnn/api/ttnn.cosh_bw", "ttnn/api/ttnn.create_sharded_memory_config", "ttnn/api/ttnn.deallocate", "ttnn/api/ttnn.deg2rad", "ttnn/api/ttnn.deg2rad_bw", "ttnn/api/ttnn.digamma", "ttnn/api/ttnn.digamma_bw", "ttnn/api/ttnn.div", "ttnn/api/ttnn.div_bw", "ttnn/api/ttnn.div_no_nan", "ttnn/api/ttnn.div_no_nan_bw", "ttnn/api/ttnn.downsample", "ttnn/api/ttnn.dump_tensor", "ttnn/api/ttnn.elu", "ttnn/api/ttnn.elu_bw", "ttnn/api/ttnn.embedding", "ttnn/api/ttnn.embedding_bw", "ttnn/api/ttnn.empty", "ttnn/api/ttnn.empty_like", "ttnn/api/ttnn.eq", "ttnn/api/ttnn.eq_", "ttnn/api/ttnn.eqz", "ttnn/api/ttnn.erf", "ttnn/api/ttnn.erf_bw", "ttnn/api/ttnn.erfc", "ttnn/api/ttnn.erfc_bw", "ttnn/api/ttnn.erfinv", "ttnn/api/ttnn.erfinv_bw", "ttnn/api/ttnn.exp", "ttnn/api/ttnn.exp2", "ttnn/api/ttnn.exp2_bw", "ttnn/api/ttnn.exp_bw", "ttnn/api/ttnn.experimental.all_reduce", "ttnn/api/ttnn.experimental.dropout", "ttnn/api/ttnn.experimental.gelu_bw", "ttnn/api/ttnn.experimental.rotary_embedding", "ttnn/api/ttnn.experimental.sort", "ttnn/api/ttnn.expm1", "ttnn/api/ttnn.expm1_bw", "ttnn/api/ttnn.fill", "ttnn/api/ttnn.fill_bw", "ttnn/api/ttnn.fill_ones_rm", "ttnn/api/ttnn.fill_rm", "ttnn/api/ttnn.fill_zero_bw", "ttnn/api/ttnn.floor", "ttnn/api/ttnn.floor_bw", "ttnn/api/ttnn.floor_div", "ttnn/api/ttnn.fmod", "ttnn/api/ttnn.fmod_bw", "ttnn/api/ttnn.format_input_tensor", "ttnn/api/ttnn.format_output_tensor", "ttnn/api/ttnn.frac", "ttnn/api/ttnn.frac_bw", "ttnn/api/ttnn.from_device", "ttnn/api/ttnn.from_torch", "ttnn/api/ttnn.full", "ttnn/api/ttnn.full_like", "ttnn/api/ttnn.gcd", "ttnn/api/ttnn.ge", "ttnn/api/ttnn.ge_", "ttnn/api/ttnn.geglu", "ttnn/api/ttnn.gelu", "ttnn/api/ttnn.gelu_bw", "ttnn/api/ttnn.gez", "ttnn/api/ttnn.global_avg_pool2d", "ttnn/api/ttnn.glu", "ttnn/api/ttnn.group_norm", "ttnn/api/ttnn.gt", "ttnn/api/ttnn.gt_", "ttnn/api/ttnn.gtz", "ttnn/api/ttnn.hardshrink", "ttnn/api/ttnn.hardshrink_bw", "ttnn/api/ttnn.hardsigmoid", "ttnn/api/ttnn.hardsigmoid_bw", "ttnn/api/ttnn.hardswish", "ttnn/api/ttnn.hardswish_bw", "ttnn/api/ttnn.hardtanh", "ttnn/api/ttnn.hardtanh_bw", "ttnn/api/ttnn.heaviside", "ttnn/api/ttnn.hypot", "ttnn/api/ttnn.hypot_bw", "ttnn/api/ttnn.i0", "ttnn/api/ttnn.i0_bw", "ttnn/api/ttnn.identity", "ttnn/api/ttnn.imag", "ttnn/api/ttnn.imag_bw", "ttnn/api/ttnn.indexed_fill", "ttnn/api/ttnn.is_imag", "ttnn/api/ttnn.is_real", "ttnn/api/ttnn.isclose", "ttnn/api/ttnn.isfinite", "ttnn/api/ttnn.isinf", "ttnn/api/ttnn.isnan", "ttnn/api/ttnn.isneginf", "ttnn/api/ttnn.isposinf", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_", "ttnn/api/ttnn.kv_cache.update_cache_for_token_", "ttnn/api/ttnn.l1_loss", "ttnn/api/ttnn.layer_norm", "ttnn/api/ttnn.lcm", "ttnn/api/ttnn.ldexp", "ttnn/api/ttnn.ldexp_bw", "ttnn/api/ttnn.le", "ttnn/api/ttnn.le_", "ttnn/api/ttnn.leaky_relu", "ttnn/api/ttnn.leaky_relu_bw", "ttnn/api/ttnn.lerp", "ttnn/api/ttnn.lerp_bw", "ttnn/api/ttnn.lez", "ttnn/api/ttnn.lgamma", "ttnn/api/ttnn.lgamma_bw", "ttnn/api/ttnn.linear", "ttnn/api/ttnn.load_tensor", "ttnn/api/ttnn.log", "ttnn/api/ttnn.log10", "ttnn/api/ttnn.log10_bw", "ttnn/api/ttnn.log1p", "ttnn/api/ttnn.log1p_bw", "ttnn/api/ttnn.log2", "ttnn/api/ttnn.log2_bw", "ttnn/api/ttnn.log_bw", "ttnn/api/ttnn.log_sigmoid", "ttnn/api/ttnn.log_sigmoid_bw", "ttnn/api/ttnn.logaddexp", "ttnn/api/ttnn.logaddexp2", "ttnn/api/ttnn.logaddexp2_bw", "ttnn/api/ttnn.logaddexp_bw", "ttnn/api/ttnn.logical_and", "ttnn/api/ttnn.logical_and_", "ttnn/api/ttnn.logical_not", "ttnn/api/ttnn.logical_not_", "ttnn/api/ttnn.logical_or", "ttnn/api/ttnn.logical_or_", "ttnn/api/ttnn.logical_xor", "ttnn/api/ttnn.logical_xor_", "ttnn/api/ttnn.logit", "ttnn/api/ttnn.logit_bw", "ttnn/api/ttnn.logiteps_bw", "ttnn/api/ttnn.lt", "ttnn/api/ttnn.lt_", "ttnn/api/ttnn.ltz", "ttnn/api/ttnn.mac", "ttnn/api/ttnn.manage_device", "ttnn/api/ttnn.matmul", "ttnn/api/ttnn.max", "ttnn/api/ttnn.max_bw", "ttnn/api/ttnn.max_pool2d", "ttnn/api/ttnn.maximum", "ttnn/api/ttnn.mean", "ttnn/api/ttnn.min", "ttnn/api/ttnn.min_bw", "ttnn/api/ttnn.minimum", "ttnn/api/ttnn.mish", "ttnn/api/ttnn.model_preprocessing.preprocess_model", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters", "ttnn/api/ttnn.moreh_sum", "ttnn/api/ttnn.mse_loss", "ttnn/api/ttnn.mul_bw", "ttnn/api/ttnn.multigammaln", "ttnn/api/ttnn.multigammaln_bw", "ttnn/api/ttnn.multiply", "ttnn/api/ttnn.ne", "ttnn/api/ttnn.ne_", "ttnn/api/ttnn.neg", "ttnn/api/ttnn.neg_bw", "ttnn/api/ttnn.nextafter", "ttnn/api/ttnn.nez", "ttnn/api/ttnn.nonzero", "ttnn/api/ttnn.normalize_global", "ttnn/api/ttnn.normalize_hw", "ttnn/api/ttnn.ones", "ttnn/api/ttnn.ones_like", "ttnn/api/ttnn.open_device", "ttnn/api/ttnn.outer", "ttnn/api/ttnn.pad", "ttnn/api/ttnn.pad_to_tile_shape", "ttnn/api/ttnn.permute", "ttnn/api/ttnn.polar", "ttnn/api/ttnn.polar_bw", "ttnn/api/ttnn.polygamma", "ttnn/api/ttnn.polygamma_bw", "ttnn/api/ttnn.polyval", "ttnn/api/ttnn.pow", "ttnn/api/ttnn.pow_bw", "ttnn/api/ttnn.prelu", "ttnn/api/ttnn.prod", "ttnn/api/ttnn.prod_bw", "ttnn/api/ttnn.rad2deg", "ttnn/api/ttnn.rad2deg_bw", "ttnn/api/ttnn.rdiv", "ttnn/api/ttnn.rdiv_bw", "ttnn/api/ttnn.real", "ttnn/api/ttnn.real_bw", "ttnn/api/ttnn.reallocate", "ttnn/api/ttnn.reciprocal", "ttnn/api/ttnn.reciprocal_bw", "ttnn/api/ttnn.reduce_scatter", "ttnn/api/ttnn.register_post_operation_hook", "ttnn/api/ttnn.register_pre_operation_hook", "ttnn/api/ttnn.reglu", "ttnn/api/ttnn.relu", "ttnn/api/ttnn.relu6", "ttnn/api/ttnn.relu6_bw", "ttnn/api/ttnn.relu_bw", "ttnn/api/ttnn.relu_max", "ttnn/api/ttnn.relu_min", "ttnn/api/ttnn.remainder", "ttnn/api/ttnn.remainder_bw", "ttnn/api/ttnn.repeat", "ttnn/api/ttnn.repeat_bw", "ttnn/api/ttnn.repeat_interleave", "ttnn/api/ttnn.reshape", "ttnn/api/ttnn.rms_norm", "ttnn/api/ttnn.round", "ttnn/api/ttnn.round_bw", "ttnn/api/ttnn.rpow", "ttnn/api/ttnn.rpow_bw", "ttnn/api/ttnn.rsqrt", "ttnn/api/ttnn.rsqrt_bw", "ttnn/api/ttnn.rsub", "ttnn/api/ttnn.rsub_bw", "ttnn/api/ttnn.scatter", "ttnn/api/ttnn.selu", "ttnn/api/ttnn.selu_bw", "ttnn/api/ttnn.set_printoptions", "ttnn/api/ttnn.sigmoid", "ttnn/api/ttnn.sigmoid_accurate", "ttnn/api/ttnn.sigmoid_bw", "ttnn/api/ttnn.sign", "ttnn/api/ttnn.sign_bw", "ttnn/api/ttnn.signbit", "ttnn/api/ttnn.silu", "ttnn/api/ttnn.silu_bw", "ttnn/api/ttnn.sin", "ttnn/api/ttnn.sin_bw", "ttnn/api/ttnn.sinh", "ttnn/api/ttnn.sinh_bw", "ttnn/api/ttnn.slice", "ttnn/api/ttnn.softmax", "ttnn/api/ttnn.softplus", "ttnn/api/ttnn.softplus_bw", "ttnn/api/ttnn.softshrink", "ttnn/api/ttnn.softshrink_bw", "ttnn/api/ttnn.softsign", "ttnn/api/ttnn.softsign_bw", "ttnn/api/ttnn.sqrt", "ttnn/api/ttnn.sqrt_bw", "ttnn/api/ttnn.square", "ttnn/api/ttnn.square_bw", "ttnn/api/ttnn.squared_difference", "ttnn/api/ttnn.squared_difference_bw", "ttnn/api/ttnn.std", "ttnn/api/ttnn.sub_bw", "ttnn/api/ttnn.subalpha", "ttnn/api/ttnn.subalpha_bw", "ttnn/api/ttnn.subtract", "ttnn/api/ttnn.sum", "ttnn/api/ttnn.swiglu", "ttnn/api/ttnn.swish", "ttnn/api/ttnn.synchronize_device", "ttnn/api/ttnn.tan", "ttnn/api/ttnn.tan_bw", "ttnn/api/ttnn.tanh", "ttnn/api/ttnn.tanh_bw", "ttnn/api/ttnn.tanhshrink", "ttnn/api/ttnn.tanhshrink_bw", "ttnn/api/ttnn.threshold", "ttnn/api/ttnn.threshold_bw", "ttnn/api/ttnn.tilize", "ttnn/api/ttnn.tilize_with_val_padding", "ttnn/api/ttnn.to_device", "ttnn/api/ttnn.to_layout", "ttnn/api/ttnn.to_memory_config", "ttnn/api/ttnn.to_torch", "ttnn/api/ttnn.topk", "ttnn/api/ttnn.transformer.attention_softmax", "ttnn/api/ttnn.transformer.attention_softmax_", "ttnn/api/ttnn.transformer.concatenate_heads", "ttnn/api/ttnn.transformer.scaled_dot_product_attention", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads", "ttnn/api/ttnn.tril", "ttnn/api/ttnn.triu", "ttnn/api/ttnn.trunc", "ttnn/api/ttnn.trunc_bw", "ttnn/api/ttnn.unary_chain", "ttnn/api/ttnn.untilize", "ttnn/api/ttnn.untilize_with_unpadding", "ttnn/api/ttnn.upsample", "ttnn/api/ttnn.var", "ttnn/api/ttnn.where", "ttnn/api/ttnn.where_bw", "ttnn/api/ttnn.xlogy", "ttnn/api/ttnn.xlogy_bw", "ttnn/api/ttnn.zeros", "ttnn/api/ttnn.zeros_like", "ttnn/converting_torch_model_to_ttnn", "ttnn/demos", "ttnn/dependencies/examples", "ttnn/dependencies/index", "ttnn/dependencies/tensor", "ttnn/dependencies/tt_lib", "ttnn/get_started", "ttnn/installing", "ttnn/onboarding", "ttnn/profiling_ttnn_operations", "ttnn/tensor", "ttnn/tutorials", "ttnn/tutorials/graphing_torch_dit", "ttnn/tutorials/matmul", "ttnn/tutorials/multihead-attention", "ttnn/tutorials/profiling", "ttnn/tutorials/resnet-basic-block", "ttnn/tutorials/tensor_and_add_operation", "ttnn/tutorials/ttnn-tracer", "ttnn/tutorials/ttnn_tutorials/001", "ttnn/tutorials/ttnn_tutorials/002", "ttnn/tutorials/ttnn_tutorials/003", "ttnn/tutorials/ttnn_tutorials/004", "ttnn/tutorials/ttnn_tutorials/005", "ttnn/tutorials/ttnn_tutorials/006", "ttnn/tutorials/ttnn_tutorials/007", "ttnn/usage"], "filenames": ["index.rst", "resources/contributing.rst", "resources/support.rst", "tt_metal_models/get_performance.rst", "tt_metal_models/get_started.rst", "ttnn/about.rst", "ttnn/adding_new_ttnn_operation.rst", "ttnn/api.rst", "ttnn/api/ttnn.GetDefaultDevice.rst", "ttnn/api/ttnn.SetDefaultDevice.rst", "ttnn/api/ttnn.abs.rst", "ttnn/api/ttnn.abs_bw.rst", "ttnn/api/ttnn.acos.rst", "ttnn/api/ttnn.acos_bw.rst", "ttnn/api/ttnn.acosh.rst", "ttnn/api/ttnn.acosh_bw.rst", "ttnn/api/ttnn.add.rst", "ttnn/api/ttnn.add_bw.rst", "ttnn/api/ttnn.addalpha.rst", "ttnn/api/ttnn.addalpha_bw.rst", "ttnn/api/ttnn.addcdiv.rst", "ttnn/api/ttnn.addcdiv_bw.rst", "ttnn/api/ttnn.addcmul.rst", "ttnn/api/ttnn.addcmul_bw.rst", "ttnn/api/ttnn.all_gather.rst", "ttnn/api/ttnn.angle.rst", "ttnn/api/ttnn.angle_bw.rst", "ttnn/api/ttnn.arange.rst", "ttnn/api/ttnn.argmax.rst", "ttnn/api/ttnn.as_tensor.rst", "ttnn/api/ttnn.asin.rst", "ttnn/api/ttnn.asin_bw.rst", "ttnn/api/ttnn.asinh.rst", "ttnn/api/ttnn.asinh_bw.rst", "ttnn/api/ttnn.assign_bw.rst", "ttnn/api/ttnn.atan.rst", "ttnn/api/ttnn.atan2.rst", "ttnn/api/ttnn.atan2_bw.rst", "ttnn/api/ttnn.atan_bw.rst", "ttnn/api/ttnn.atanh.rst", "ttnn/api/ttnn.atanh_bw.rst", "ttnn/api/ttnn.batch_norm.rst", "ttnn/api/ttnn.bias_gelu_bw.rst", "ttnn/api/ttnn.bitwise_and.rst", "ttnn/api/ttnn.bitwise_left_shift.rst", "ttnn/api/ttnn.bitwise_not.rst", "ttnn/api/ttnn.bitwise_or.rst", "ttnn/api/ttnn.bitwise_right_shift.rst", "ttnn/api/ttnn.bitwise_xor.rst", "ttnn/api/ttnn.cbrt.rst", "ttnn/api/ttnn.ceil.rst", "ttnn/api/ttnn.ceil_bw.rst", "ttnn/api/ttnn.celu.rst", "ttnn/api/ttnn.celu_bw.rst", "ttnn/api/ttnn.clamp.rst", "ttnn/api/ttnn.clamp_bw.rst", "ttnn/api/ttnn.clip.rst", "ttnn/api/ttnn.clip_bw.rst", "ttnn/api/ttnn.clone.rst", "ttnn/api/ttnn.close_device.rst", "ttnn/api/ttnn.concat.rst", "ttnn/api/ttnn.concat_bw.rst", "ttnn/api/ttnn.conj.rst", "ttnn/api/ttnn.conj_bw.rst", "ttnn/api/ttnn.cos.rst", "ttnn/api/ttnn.cos_bw.rst", "ttnn/api/ttnn.cosh.rst", "ttnn/api/ttnn.cosh_bw.rst", "ttnn/api/ttnn.create_sharded_memory_config.rst", "ttnn/api/ttnn.deallocate.rst", "ttnn/api/ttnn.deg2rad.rst", "ttnn/api/ttnn.deg2rad_bw.rst", "ttnn/api/ttnn.digamma.rst", "ttnn/api/ttnn.digamma_bw.rst", "ttnn/api/ttnn.div.rst", "ttnn/api/ttnn.div_bw.rst", "ttnn/api/ttnn.div_no_nan.rst", "ttnn/api/ttnn.div_no_nan_bw.rst", "ttnn/api/ttnn.downsample.rst", "ttnn/api/ttnn.dump_tensor.rst", "ttnn/api/ttnn.elu.rst", "ttnn/api/ttnn.elu_bw.rst", "ttnn/api/ttnn.embedding.rst", "ttnn/api/ttnn.embedding_bw.rst", "ttnn/api/ttnn.empty.rst", "ttnn/api/ttnn.empty_like.rst", "ttnn/api/ttnn.eq.rst", "ttnn/api/ttnn.eq_.rst", "ttnn/api/ttnn.eqz.rst", "ttnn/api/ttnn.erf.rst", "ttnn/api/ttnn.erf_bw.rst", "ttnn/api/ttnn.erfc.rst", "ttnn/api/ttnn.erfc_bw.rst", "ttnn/api/ttnn.erfinv.rst", "ttnn/api/ttnn.erfinv_bw.rst", "ttnn/api/ttnn.exp.rst", "ttnn/api/ttnn.exp2.rst", "ttnn/api/ttnn.exp2_bw.rst", "ttnn/api/ttnn.exp_bw.rst", "ttnn/api/ttnn.experimental.all_reduce.rst", "ttnn/api/ttnn.experimental.dropout.rst", "ttnn/api/ttnn.experimental.gelu_bw.rst", "ttnn/api/ttnn.experimental.rotary_embedding.rst", "ttnn/api/ttnn.experimental.sort.rst", "ttnn/api/ttnn.expm1.rst", "ttnn/api/ttnn.expm1_bw.rst", "ttnn/api/ttnn.fill.rst", "ttnn/api/ttnn.fill_bw.rst", "ttnn/api/ttnn.fill_ones_rm.rst", "ttnn/api/ttnn.fill_rm.rst", "ttnn/api/ttnn.fill_zero_bw.rst", "ttnn/api/ttnn.floor.rst", "ttnn/api/ttnn.floor_bw.rst", "ttnn/api/ttnn.floor_div.rst", "ttnn/api/ttnn.fmod.rst", "ttnn/api/ttnn.fmod_bw.rst", "ttnn/api/ttnn.format_input_tensor.rst", "ttnn/api/ttnn.format_output_tensor.rst", "ttnn/api/ttnn.frac.rst", "ttnn/api/ttnn.frac_bw.rst", "ttnn/api/ttnn.from_device.rst", "ttnn/api/ttnn.from_torch.rst", "ttnn/api/ttnn.full.rst", "ttnn/api/ttnn.full_like.rst", "ttnn/api/ttnn.gcd.rst", "ttnn/api/ttnn.ge.rst", "ttnn/api/ttnn.ge_.rst", "ttnn/api/ttnn.geglu.rst", "ttnn/api/ttnn.gelu.rst", "ttnn/api/ttnn.gelu_bw.rst", "ttnn/api/ttnn.gez.rst", "ttnn/api/ttnn.global_avg_pool2d.rst", "ttnn/api/ttnn.glu.rst", "ttnn/api/ttnn.group_norm.rst", "ttnn/api/ttnn.gt.rst", "ttnn/api/ttnn.gt_.rst", "ttnn/api/ttnn.gtz.rst", "ttnn/api/ttnn.hardshrink.rst", "ttnn/api/ttnn.hardshrink_bw.rst", "ttnn/api/ttnn.hardsigmoid.rst", "ttnn/api/ttnn.hardsigmoid_bw.rst", "ttnn/api/ttnn.hardswish.rst", "ttnn/api/ttnn.hardswish_bw.rst", "ttnn/api/ttnn.hardtanh.rst", "ttnn/api/ttnn.hardtanh_bw.rst", "ttnn/api/ttnn.heaviside.rst", "ttnn/api/ttnn.hypot.rst", "ttnn/api/ttnn.hypot_bw.rst", "ttnn/api/ttnn.i0.rst", "ttnn/api/ttnn.i0_bw.rst", "ttnn/api/ttnn.identity.rst", "ttnn/api/ttnn.imag.rst", "ttnn/api/ttnn.imag_bw.rst", "ttnn/api/ttnn.indexed_fill.rst", "ttnn/api/ttnn.is_imag.rst", "ttnn/api/ttnn.is_real.rst", "ttnn/api/ttnn.isclose.rst", "ttnn/api/ttnn.isfinite.rst", "ttnn/api/ttnn.isinf.rst", "ttnn/api/ttnn.isnan.rst", "ttnn/api/ttnn.isneginf.rst", "ttnn/api/ttnn.isposinf.rst", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_.rst", "ttnn/api/ttnn.kv_cache.update_cache_for_token_.rst", "ttnn/api/ttnn.l1_loss.rst", "ttnn/api/ttnn.layer_norm.rst", "ttnn/api/ttnn.lcm.rst", "ttnn/api/ttnn.ldexp.rst", "ttnn/api/ttnn.ldexp_bw.rst", "ttnn/api/ttnn.le.rst", "ttnn/api/ttnn.le_.rst", "ttnn/api/ttnn.leaky_relu.rst", "ttnn/api/ttnn.leaky_relu_bw.rst", "ttnn/api/ttnn.lerp.rst", "ttnn/api/ttnn.lerp_bw.rst", "ttnn/api/ttnn.lez.rst", "ttnn/api/ttnn.lgamma.rst", "ttnn/api/ttnn.lgamma_bw.rst", "ttnn/api/ttnn.linear.rst", "ttnn/api/ttnn.load_tensor.rst", "ttnn/api/ttnn.log.rst", "ttnn/api/ttnn.log10.rst", "ttnn/api/ttnn.log10_bw.rst", "ttnn/api/ttnn.log1p.rst", "ttnn/api/ttnn.log1p_bw.rst", "ttnn/api/ttnn.log2.rst", "ttnn/api/ttnn.log2_bw.rst", "ttnn/api/ttnn.log_bw.rst", "ttnn/api/ttnn.log_sigmoid.rst", "ttnn/api/ttnn.log_sigmoid_bw.rst", "ttnn/api/ttnn.logaddexp.rst", "ttnn/api/ttnn.logaddexp2.rst", "ttnn/api/ttnn.logaddexp2_bw.rst", "ttnn/api/ttnn.logaddexp_bw.rst", "ttnn/api/ttnn.logical_and.rst", "ttnn/api/ttnn.logical_and_.rst", "ttnn/api/ttnn.logical_not.rst", "ttnn/api/ttnn.logical_not_.rst", "ttnn/api/ttnn.logical_or.rst", "ttnn/api/ttnn.logical_or_.rst", "ttnn/api/ttnn.logical_xor.rst", "ttnn/api/ttnn.logical_xor_.rst", "ttnn/api/ttnn.logit.rst", "ttnn/api/ttnn.logit_bw.rst", "ttnn/api/ttnn.logiteps_bw.rst", "ttnn/api/ttnn.lt.rst", "ttnn/api/ttnn.lt_.rst", "ttnn/api/ttnn.ltz.rst", "ttnn/api/ttnn.mac.rst", "ttnn/api/ttnn.manage_device.rst", "ttnn/api/ttnn.matmul.rst", "ttnn/api/ttnn.max.rst", "ttnn/api/ttnn.max_bw.rst", "ttnn/api/ttnn.max_pool2d.rst", "ttnn/api/ttnn.maximum.rst", "ttnn/api/ttnn.mean.rst", "ttnn/api/ttnn.min.rst", "ttnn/api/ttnn.min_bw.rst", "ttnn/api/ttnn.minimum.rst", "ttnn/api/ttnn.mish.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters.rst", "ttnn/api/ttnn.moreh_sum.rst", "ttnn/api/ttnn.mse_loss.rst", "ttnn/api/ttnn.mul_bw.rst", "ttnn/api/ttnn.multigammaln.rst", "ttnn/api/ttnn.multigammaln_bw.rst", "ttnn/api/ttnn.multiply.rst", "ttnn/api/ttnn.ne.rst", "ttnn/api/ttnn.ne_.rst", "ttnn/api/ttnn.neg.rst", "ttnn/api/ttnn.neg_bw.rst", "ttnn/api/ttnn.nextafter.rst", "ttnn/api/ttnn.nez.rst", "ttnn/api/ttnn.nonzero.rst", "ttnn/api/ttnn.normalize_global.rst", "ttnn/api/ttnn.normalize_hw.rst", "ttnn/api/ttnn.ones.rst", "ttnn/api/ttnn.ones_like.rst", "ttnn/api/ttnn.open_device.rst", "ttnn/api/ttnn.outer.rst", "ttnn/api/ttnn.pad.rst", "ttnn/api/ttnn.pad_to_tile_shape.rst", "ttnn/api/ttnn.permute.rst", "ttnn/api/ttnn.polar.rst", "ttnn/api/ttnn.polar_bw.rst", "ttnn/api/ttnn.polygamma.rst", "ttnn/api/ttnn.polygamma_bw.rst", "ttnn/api/ttnn.polyval.rst", "ttnn/api/ttnn.pow.rst", "ttnn/api/ttnn.pow_bw.rst", "ttnn/api/ttnn.prelu.rst", "ttnn/api/ttnn.prod.rst", "ttnn/api/ttnn.prod_bw.rst", "ttnn/api/ttnn.rad2deg.rst", "ttnn/api/ttnn.rad2deg_bw.rst", "ttnn/api/ttnn.rdiv.rst", "ttnn/api/ttnn.rdiv_bw.rst", "ttnn/api/ttnn.real.rst", "ttnn/api/ttnn.real_bw.rst", "ttnn/api/ttnn.reallocate.rst", "ttnn/api/ttnn.reciprocal.rst", "ttnn/api/ttnn.reciprocal_bw.rst", "ttnn/api/ttnn.reduce_scatter.rst", "ttnn/api/ttnn.register_post_operation_hook.rst", "ttnn/api/ttnn.register_pre_operation_hook.rst", "ttnn/api/ttnn.reglu.rst", "ttnn/api/ttnn.relu.rst", "ttnn/api/ttnn.relu6.rst", "ttnn/api/ttnn.relu6_bw.rst", "ttnn/api/ttnn.relu_bw.rst", "ttnn/api/ttnn.relu_max.rst", "ttnn/api/ttnn.relu_min.rst", "ttnn/api/ttnn.remainder.rst", "ttnn/api/ttnn.remainder_bw.rst", "ttnn/api/ttnn.repeat.rst", "ttnn/api/ttnn.repeat_bw.rst", "ttnn/api/ttnn.repeat_interleave.rst", "ttnn/api/ttnn.reshape.rst", "ttnn/api/ttnn.rms_norm.rst", "ttnn/api/ttnn.round.rst", "ttnn/api/ttnn.round_bw.rst", "ttnn/api/ttnn.rpow.rst", "ttnn/api/ttnn.rpow_bw.rst", "ttnn/api/ttnn.rsqrt.rst", "ttnn/api/ttnn.rsqrt_bw.rst", "ttnn/api/ttnn.rsub.rst", "ttnn/api/ttnn.rsub_bw.rst", "ttnn/api/ttnn.scatter.rst", "ttnn/api/ttnn.selu.rst", "ttnn/api/ttnn.selu_bw.rst", "ttnn/api/ttnn.set_printoptions.rst", "ttnn/api/ttnn.sigmoid.rst", "ttnn/api/ttnn.sigmoid_accurate.rst", "ttnn/api/ttnn.sigmoid_bw.rst", "ttnn/api/ttnn.sign.rst", "ttnn/api/ttnn.sign_bw.rst", "ttnn/api/ttnn.signbit.rst", "ttnn/api/ttnn.silu.rst", "ttnn/api/ttnn.silu_bw.rst", "ttnn/api/ttnn.sin.rst", "ttnn/api/ttnn.sin_bw.rst", "ttnn/api/ttnn.sinh.rst", "ttnn/api/ttnn.sinh_bw.rst", "ttnn/api/ttnn.slice.rst", "ttnn/api/ttnn.softmax.rst", "ttnn/api/ttnn.softplus.rst", "ttnn/api/ttnn.softplus_bw.rst", "ttnn/api/ttnn.softshrink.rst", "ttnn/api/ttnn.softshrink_bw.rst", "ttnn/api/ttnn.softsign.rst", "ttnn/api/ttnn.softsign_bw.rst", "ttnn/api/ttnn.sqrt.rst", "ttnn/api/ttnn.sqrt_bw.rst", "ttnn/api/ttnn.square.rst", "ttnn/api/ttnn.square_bw.rst", "ttnn/api/ttnn.squared_difference.rst", "ttnn/api/ttnn.squared_difference_bw.rst", "ttnn/api/ttnn.std.rst", "ttnn/api/ttnn.sub_bw.rst", "ttnn/api/ttnn.subalpha.rst", "ttnn/api/ttnn.subalpha_bw.rst", "ttnn/api/ttnn.subtract.rst", "ttnn/api/ttnn.sum.rst", "ttnn/api/ttnn.swiglu.rst", "ttnn/api/ttnn.swish.rst", "ttnn/api/ttnn.synchronize_device.rst", "ttnn/api/ttnn.tan.rst", "ttnn/api/ttnn.tan_bw.rst", "ttnn/api/ttnn.tanh.rst", "ttnn/api/ttnn.tanh_bw.rst", "ttnn/api/ttnn.tanhshrink.rst", "ttnn/api/ttnn.tanhshrink_bw.rst", "ttnn/api/ttnn.threshold.rst", "ttnn/api/ttnn.threshold_bw.rst", "ttnn/api/ttnn.tilize.rst", "ttnn/api/ttnn.tilize_with_val_padding.rst", "ttnn/api/ttnn.to_device.rst", "ttnn/api/ttnn.to_layout.rst", "ttnn/api/ttnn.to_memory_config.rst", "ttnn/api/ttnn.to_torch.rst", "ttnn/api/ttnn.topk.rst", "ttnn/api/ttnn.transformer.attention_softmax.rst", "ttnn/api/ttnn.transformer.attention_softmax_.rst", "ttnn/api/ttnn.transformer.concatenate_heads.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode.rst", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads.rst", "ttnn/api/ttnn.tril.rst", "ttnn/api/ttnn.triu.rst", "ttnn/api/ttnn.trunc.rst", "ttnn/api/ttnn.trunc_bw.rst", "ttnn/api/ttnn.unary_chain.rst", "ttnn/api/ttnn.untilize.rst", "ttnn/api/ttnn.untilize_with_unpadding.rst", "ttnn/api/ttnn.upsample.rst", "ttnn/api/ttnn.var.rst", "ttnn/api/ttnn.where.rst", "ttnn/api/ttnn.where_bw.rst", "ttnn/api/ttnn.xlogy.rst", "ttnn/api/ttnn.xlogy_bw.rst", "ttnn/api/ttnn.zeros.rst", "ttnn/api/ttnn.zeros_like.rst", "ttnn/converting_torch_model_to_ttnn.rst", "ttnn/demos.rst", "ttnn/dependencies/examples.rst", "ttnn/dependencies/index.rst", "ttnn/dependencies/tensor.rst", "ttnn/dependencies/tt_lib.rst", "ttnn/get_started.rst", "ttnn/installing.md", "ttnn/onboarding.rst", "ttnn/profiling_ttnn_operations.rst", "ttnn/tensor.rst", "ttnn/tutorials.rst", "ttnn/tutorials/graphing_torch_dit.rst", "ttnn/tutorials/matmul.rst", "ttnn/tutorials/multihead-attention.rst", "ttnn/tutorials/profiling.rst", "ttnn/tutorials/resnet-basic-block.rst", "ttnn/tutorials/tensor_and_add_operation.rst", "ttnn/tutorials/ttnn-tracer.rst", "ttnn/tutorials/ttnn_tutorials/001.ipynb", "ttnn/tutorials/ttnn_tutorials/002.ipynb", "ttnn/tutorials/ttnn_tutorials/003.ipynb", "ttnn/tutorials/ttnn_tutorials/004.ipynb", "ttnn/tutorials/ttnn_tutorials/005.ipynb", "ttnn/tutorials/ttnn_tutorials/006.ipynb", "ttnn/tutorials/ttnn_tutorials/007.ipynb", "ttnn/usage.rst"], "titles": ["Welcome to TT-NN documentation!", "Contributing as a developer", "Support", "Performance", "Getting Started", "What is ttnn?", "Adding New ttnn Operation", "APIs", "ttnn.GetDefaultDevice", "ttnn.SetDefaultDevice", "ttnn.abs", "ttnn.abs_bw", "ttnn.acos", "ttnn.acos_bw", "ttnn.acosh", "ttnn.acosh_bw", "ttnn.add", "ttnn.add_bw", "ttnn.addalpha", "ttnn.addalpha_bw", "ttnn.addcdiv", "ttnn.addcdiv_bw", "ttnn.addcmul", "ttnn.addcmul_bw", "ttnn.all_gather", "ttnn.angle", "ttnn.angle_bw", "ttnn.arange", "ttnn.argmax", "ttnn.as_tensor", "ttnn.asin", "ttnn.asin_bw", "ttnn.asinh", "ttnn.asinh_bw", "ttnn.assign_bw", "ttnn.atan", "ttnn.atan2", "ttnn.atan2_bw", "ttnn.atan_bw", "ttnn.atanh", "ttnn.atanh_bw", "ttnn.batch_norm", "ttnn.bias_gelu_bw", "ttnn.bitwise_and", "ttnn.bitwise_left_shift", "ttnn.bitwise_not", "ttnn.bitwise_or", "ttnn.bitwise_right_shift", "ttnn.bitwise_xor", "ttnn.cbrt", "ttnn.ceil", "ttnn.ceil_bw", "ttnn.celu", "ttnn.celu_bw", "ttnn.clamp", "ttnn.clamp_bw", "ttnn.clip", "ttnn.clip_bw", "ttnn.clone", "ttnn.close_device", "ttnn.concat", "ttnn.concat_bw", "ttnn.conj", "ttnn.conj_bw", "ttnn.cos", "ttnn.cos_bw", "ttnn.cosh", "ttnn.cosh_bw", "ttnn.create_sharded_memory_config", "ttnn.deallocate", "ttnn.deg2rad", "ttnn.deg2rad_bw", "ttnn.digamma", "ttnn.digamma_bw", "ttnn.div", "ttnn.div_bw", "ttnn.div_no_nan", "ttnn.div_no_nan_bw", "ttnn.downsample", "ttnn.dump_tensor", "ttnn.elu", "ttnn.elu_bw", "ttnn.embedding", "ttnn.embedding_bw", "ttnn.empty", "ttnn.empty_like", "ttnn.eq", "ttnn.eq_", "ttnn.eqz", "ttnn.erf", "ttnn.erf_bw", "ttnn.erfc", "ttnn.erfc_bw", "ttnn.erfinv", "ttnn.erfinv_bw", "ttnn.exp", "ttnn.exp2", "ttnn.exp2_bw", "ttnn.exp_bw", "ttnn.experimental.all_reduce", "ttnn.experimental.dropout", "ttnn.experimental.gelu_bw", "ttnn.experimental.rotary_embedding", "ttnn.experimental.sort", "ttnn.expm1", "ttnn.expm1_bw", "ttnn.fill", "ttnn.fill_bw", "ttnn.fill_ones_rm", "ttnn.fill_rm", "ttnn.fill_zero_bw", "ttnn.floor", "ttnn.floor_bw", "ttnn.floor_div", "ttnn.fmod", "ttnn.fmod_bw", "ttnn.format_input_tensor", "ttnn.format_output_tensor", "ttnn.frac", "ttnn.frac_bw", "ttnn.from_device", "ttnn.from_torch", "ttnn.full", "ttnn.full_like", "ttnn.gcd", "ttnn.ge", "ttnn.ge_", "ttnn.geglu", "ttnn.gelu", "ttnn.gelu_bw", "ttnn.gez", "ttnn.global_avg_pool2d", "ttnn.glu", "ttnn.group_norm", "ttnn.gt", "ttnn.gt_", "ttnn.gtz", "ttnn.hardshrink", "ttnn.hardshrink_bw", "ttnn.hardsigmoid", "ttnn.hardsigmoid_bw", "ttnn.hardswish", "ttnn.hardswish_bw", "ttnn.hardtanh", "ttnn.hardtanh_bw", "ttnn.heaviside", "ttnn.hypot", "ttnn.hypot_bw", "ttnn.i0", "ttnn.i0_bw", "ttnn.identity", "ttnn.imag", "ttnn.imag_bw", "ttnn.indexed_fill", "ttnn.is_imag", "ttnn.is_real", "ttnn.isclose", "ttnn.isfinite", "ttnn.isinf", "ttnn.isnan", "ttnn.isneginf", "ttnn.isposinf", "ttnn.kv_cache.fill_cache_for_user_", "ttnn.kv_cache.update_cache_for_token_", "ttnn.l1_loss", "ttnn.layer_norm", "ttnn.lcm", "ttnn.ldexp", "ttnn.ldexp_bw", "ttnn.le", "ttnn.le_", "ttnn.leaky_relu", "ttnn.leaky_relu_bw", "ttnn.lerp", "ttnn.lerp_bw", "ttnn.lez", "ttnn.lgamma", "ttnn.lgamma_bw", "ttnn.linear", "ttnn.load_tensor", "ttnn.log", "ttnn.log10", "ttnn.log10_bw", "ttnn.log1p", "ttnn.log1p_bw", "ttnn.log2", "ttnn.log2_bw", "ttnn.log_bw", "ttnn.log_sigmoid", "ttnn.log_sigmoid_bw", "ttnn.logaddexp", "ttnn.logaddexp2", "ttnn.logaddexp2_bw", "ttnn.logaddexp_bw", "ttnn.logical_and", "ttnn.logical_and_", "ttnn.logical_not", "ttnn.logical_not_", "ttnn.logical_or", "ttnn.logical_or_", "ttnn.logical_xor", "ttnn.logical_xor_", "ttnn.logit", "ttnn.logit_bw", "ttnn.logiteps_bw", "ttnn.lt", "ttnn.lt_", "ttnn.ltz", "ttnn.mac", "ttnn.manage_device", "ttnn.matmul", "ttnn.max", "ttnn.max_bw", "ttnn.max_pool2d", "ttnn.maximum", "ttnn.mean", "ttnn.min", "ttnn.min_bw", "ttnn.minimum", "ttnn.mish", "ttnn.model_preprocessing.preprocess_model", "ttnn.model_preprocessing.preprocess_model_parameters", "ttnn.moreh_sum", "ttnn.mse_loss", "ttnn.mul_bw", "ttnn.multigammaln", "ttnn.multigammaln_bw", "ttnn.multiply", "ttnn.ne", "ttnn.ne_", "ttnn.neg", "ttnn.neg_bw", "ttnn.nextafter", "ttnn.nez", "ttnn.nonzero", "ttnn.normalize_global", "ttnn.normalize_hw", "ttnn.ones", "ttnn.ones_like", "ttnn.open_device", "ttnn.outer", "ttnn.pad", "ttnn.pad_to_tile_shape", "ttnn.permute", "ttnn.polar", "ttnn.polar_bw", "ttnn.polygamma", "ttnn.polygamma_bw", "ttnn.polyval", "ttnn.pow", "ttnn.pow_bw", "ttnn.prelu", "ttnn.prod", "ttnn.prod_bw", "ttnn.rad2deg", "ttnn.rad2deg_bw", "ttnn.rdiv", "ttnn.rdiv_bw", "ttnn.real", "ttnn.real_bw", "ttnn.reallocate", "ttnn.reciprocal", "ttnn.reciprocal_bw", "ttnn.reduce_scatter", "ttnn.register_post_operation_hook", "ttnn.register_pre_operation_hook", "ttnn.reglu", "ttnn.relu", "ttnn.relu6", "ttnn.relu6_bw", "ttnn.relu_bw", "ttnn.relu_max", "ttnn.relu_min", "ttnn.remainder", "ttnn.remainder_bw", "ttnn.repeat", "ttnn.repeat_bw", "ttnn.repeat_interleave", "ttnn.reshape", "ttnn.rms_norm", "ttnn.round", "ttnn.round_bw", "ttnn.rpow", "ttnn.rpow_bw", "ttnn.rsqrt", "ttnn.rsqrt_bw", "ttnn.rsub", "ttnn.rsub_bw", "ttnn.scatter", "ttnn.selu", "ttnn.selu_bw", "ttnn.set_printoptions", "ttnn.sigmoid", "ttnn.sigmoid_accurate", "ttnn.sigmoid_bw", "ttnn.sign", "ttnn.sign_bw", "ttnn.signbit", "ttnn.silu", "ttnn.silu_bw", "ttnn.sin", "ttnn.sin_bw", "ttnn.sinh", "ttnn.sinh_bw", "ttnn.slice", "ttnn.softmax", "ttnn.softplus", "ttnn.softplus_bw", "ttnn.softshrink", "ttnn.softshrink_bw", "ttnn.softsign", "ttnn.softsign_bw", "ttnn.sqrt", "ttnn.sqrt_bw", "ttnn.square", "ttnn.square_bw", "ttnn.squared_difference", "ttnn.squared_difference_bw", "ttnn.std", "ttnn.sub_bw", "ttnn.subalpha", "ttnn.subalpha_bw", "ttnn.subtract", "ttnn.sum", "ttnn.swiglu", "ttnn.swish", "ttnn.synchronize_device", "ttnn.tan", "ttnn.tan_bw", "ttnn.tanh", "ttnn.tanh_bw", "ttnn.tanhshrink", "ttnn.tanhshrink_bw", "ttnn.threshold", "ttnn.threshold_bw", "ttnn.tilize", "ttnn.tilize_with_val_padding", "ttnn.to_device", "ttnn.to_layout", "ttnn.to_memory_config", "ttnn.to_torch", "ttnn.topk", "ttnn.transformer.attention_softmax", "ttnn.transformer.attention_softmax_", "ttnn.transformer.concatenate_heads", "ttnn.transformer.scaled_dot_product_attention", "ttnn.transformer.scaled_dot_product_attention_decode", "ttnn.transformer.split_query_key_value_and_split_heads", "ttnn.tril", "ttnn.triu", "ttnn.trunc", "ttnn.trunc_bw", "ttnn.unary_chain", "ttnn.untilize", "ttnn.untilize_with_unpadding", "ttnn.upsample", "ttnn.var", "ttnn.where", "ttnn.where_bw", "ttnn.xlogy", "ttnn.xlogy_bw", "ttnn.zeros", "ttnn.zeros_like", "Converting torch Model to ttnn", "Building and Uplifting Demos", "Examples of Tensor and TT-LIB Use", "Dependencies", "Tensor", "TT-LIB", "Getting Started", "Install", "Onboarding New Functionality", "Profiling ttnn Operations", "Tensor", "Tutorials", "Graphing Torch DiT_XL_2 With TTNN", "Matmul Operation", "Multi-Head Attention", "ttnn Profiling", "Resnet Basic Block", "Tensor and Add Operation", "ttnn Tracer", "Tensor and Add Operation", "Matrix Multiplication", "Multi-Head Attention", "Tracing ttnn operations and torch modules/functions", "Profiling ttnn operations", "Resnet Block", "Build a graph of a pytorch based model", "Using ttnn"], "terms": {"what": [0, 364, 372, 388], "i": [0, 3, 4, 8, 9, 14, 17, 19, 28, 32, 37, 39, 41, 42, 45, 59, 60, 61, 68, 74, 75, 78, 82, 83, 86, 99, 102, 103, 106, 108, 109, 116, 117, 119, 120, 121, 125, 127, 131, 132, 134, 147, 149, 154, 155, 168, 169, 174, 178, 181, 185, 192, 193, 205, 209, 210, 212, 213, 217, 220, 221, 224, 226, 228, 239, 241, 242, 244, 246, 248, 249, 251, 256, 261, 263, 264, 265, 266, 271, 272, 277, 278, 282, 287, 304, 305, 317, 319, 321, 324, 326, 327, 328, 338, 340, 341, 342, 343, 345, 346, 347, 355, 360, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389], "kei": [0, 347, 363, 373, 382, 384, 386], "featur": [0, 368, 371, 378, 389], "get": [0, 8, 344, 363, 365, 367, 370, 374, 379, 382, 383, 384, 385, 386], "start": [0, 27, 173, 241, 304, 363, 367, 368, 370, 372, 384, 386], "1": [0, 3, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 65, 67, 71, 73, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 261, 262, 263, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 296, 299, 301, 303, 304, 305, 306, 307, 308, 309, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 332, 333, 334, 338, 345, 346, 347, 350, 351, 356, 357, 358, 359, 360, 361, 362, 365, 367, 368, 371, 373, 382, 383, 384, 385, 386, 387, 388], "instal": [0, 3, 364, 372, 374, 386, 388], "build": [0, 365, 374, 375, 378, 386], "2": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 156, 157, 158, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 259, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 340, 345, 347, 348, 349, 350, 351, 352, 356, 357, 358, 359, 360, 361, 362, 366, 367, 373, 374, 375, 382, 383, 384, 385, 386, 387], "explor": 0, "our": [0, 3, 4, 5, 364, 371, 373, 382], "demo": [0, 4, 370, 372, 385], "3": [0, 3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 243, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 338, 340, 347, 348, 349, 350, 351, 352, 357, 358, 359, 360, 361, 362, 367, 368, 373, 382, 383, 384, 385, 386, 387, 388], "tutori": [0, 375, 378, 379, 384, 388], "multi": [0, 24, 29, 78, 79, 99, 263, 355, 373, 374, 382], "head": [0, 342, 343, 344, 345, 347, 370, 374], "attent": [0, 342, 343, 345, 346, 347, 374], "simpl": [0, 370, 386, 388], "4": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 217, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 240, 242, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 348, 349, 350, 351, 352, 357, 358, 359, 360, 361, 362, 367, 368, 373, 382, 383, 384, 385, 386, 387, 388], "optim": [0, 373, 374, 377, 382], "where": [0, 2, 3, 4, 27, 68, 84, 85, 116, 117, 178, 210, 234, 241, 251, 337, 338, 358, 364, 368, 372, 373, 388], "To": [0, 3, 365, 368, 371, 382, 383, 389], "go": [0, 382], "from": [0, 2, 3, 4, 5, 6, 27, 29, 59, 60, 83, 120, 121, 162, 163, 179, 241, 286, 287, 322, 337, 354, 363, 364, 366, 367, 372, 373, 374, 375, 379, 382, 384, 385, 386], "here": [0, 2, 6, 383, 388], "prerequisit": 0, "set": [0, 3, 4, 9, 60, 108, 210, 226, 243, 291, 326, 344, 347, 363, 365, 367, 368, 372, 374, 382, 385, 386, 387, 388, 389], "up": [0, 5, 109, 368, 372, 374, 383, 388], "hardwar": [0, 2, 5, 6, 363, 364, 369, 373, 382, 389], "driver": [0, 382, 383, 384, 385, 386, 387], "firmwar": 0, "system": [0, 14, 32, 39, 106, 127, 132, 256, 266, 271, 272, 282, 324, 372], "level": [0, 372], "depend": [0, 4, 5, 338, 364, 372, 373, 374, 386], "kmd": 0, "updat": [0, 41, 163, 364, 371, 389], "devic": [0, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 372, 373, 374, 376, 377, 380, 385, 386, 387, 388], "flash": [0, 346], "manag": [0, 209, 264, 265, 364], "interfac": [0, 5, 368], "smi": 0, "option": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 366, 367, 372, 388, 389], "card": 0, "configur": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 367, 374, 376, 377, 385], "topologi": [0, 24, 99, 263], "metalium": [0, 3, 4, 6], "There": [0, 6, 210, 363, 367, 368, 373], "ar": [0, 3, 4, 9, 17, 24, 36, 44, 47, 58, 60, 75, 99, 109, 178, 210, 213, 234, 243, 249, 263, 264, 265, 282, 304, 326, 341, 347, 355, 363, 364, 365, 367, 368, 369, 372, 373, 374, 375, 378, 379, 382, 383, 384, 389], "three": 0, "sourc": [0, 3, 4, 162, 374, 378], "step": [0, 27, 304, 364, 365, 371, 382, 388], "clone": [0, 150, 347, 374, 375, 382, 383, 384, 385], "repositori": [0, 1, 369], "invok": [0, 6], "script": [0, 3, 4, 364, 372], "docker": 0, "releas": [0, 69], "imag": [0, 154, 244, 364, 368, 372, 373, 388], "wheel": [0, 386], "download": [0, 374, 375, 385, 386], "latest": [0, 372], "For": [0, 6, 11, 21, 29, 42, 75, 115, 121, 129, 147, 174, 182, 184, 186, 187, 189, 192, 193, 203, 204, 210, 250, 253, 257, 262, 274, 307, 313, 347, 360, 363, 364, 367, 371, 372, 373], "user": [0, 4, 5, 6, 150, 178, 210, 220, 221, 336, 364, 369, 371, 382, 383, 384, 385, 386, 387, 388], "onli": [0, 6, 17, 19, 20, 22, 24, 28, 37, 42, 45, 50, 54, 55, 56, 57, 60, 61, 68, 74, 75, 79, 83, 109, 111, 114, 121, 127, 132, 147, 168, 173, 174, 181, 185, 192, 193, 208, 210, 212, 217, 219, 224, 246, 256, 261, 263, 266, 273, 274, 287, 317, 319, 321, 324, 326, 346, 347, 357, 360, 363, 364, 367, 368, 372, 373, 374, 375, 378, 379, 387, 389], "environ": [0, 3, 4, 368, 369, 384, 385, 386, 388, 389], "you": [0, 1, 2, 3, 4, 5, 6, 306, 364, 365, 367, 368, 369, 372, 374, 385, 388, 389], "all": [0, 5, 6, 24, 28, 99, 131, 210, 220, 221, 248, 252, 253, 263, 326, 363, 364, 367, 368, 371, 372, 373, 382, 384, 386], "verifi": [0, 371], "your": [0, 5, 364, 365, 368, 372, 374], "try": [0, 364, 382, 386], "execut": [0, 3, 264, 265, 364, 365, 368, 372, 383, 384, 386, 389], "program": [0, 3, 5, 6, 24, 178, 210, 263, 342, 343, 366, 372, 374, 376, 377, 382, 385, 386, 387], "exampl": [0, 5, 103, 243, 252, 277, 326, 337, 364, 366, 368, 369, 371, 372, 373, 382, 388], "interest": 0, "contribut": [0, 2, 369], "us": [0, 3, 4, 5, 6, 8, 9, 24, 29, 42, 60, 68, 75, 82, 83, 85, 89, 91, 95, 99, 100, 101, 102, 103, 109, 120, 121, 123, 128, 129, 147, 150, 178, 210, 213, 220, 221, 238, 239, 256, 257, 263, 264, 265, 276, 284, 291, 305, 306, 335, 336, 337, 338, 339, 340, 341, 346, 347, 353, 354, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 380, 381, 386, 388], "basic": [0, 369, 370, 374], "convert": [0, 5, 6, 29, 58, 121, 220, 221, 339, 340, 365, 366, 374, 377, 380, 383], "torch": [0, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 347, 348, 349, 350, 351, 352, 356, 357, 358, 359, 360, 362, 365, 367, 373, 374, 376, 377, 379, 380, 381, 386, 388], "tensor": [0, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 372, 374, 376, 384, 385, 387, 388], "run": [0, 5, 6, 24, 41, 99, 121, 220, 263, 264, 265, 364, 366, 368, 369, 370, 371, 372, 374, 377, 379, 382, 383, 386], "an": [0, 2, 3, 5, 6, 24, 60, 82, 99, 109, 110, 114, 131, 209, 210, 244, 251, 263, 273, 340, 364, 367, 368, 369, 370, 371, 372, 373, 382, 384, 388], "oper": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 364, 365, 366, 367, 369, 371, 373, 374, 378, 381, 383, 384], "__getitem__": 0, "slice": [0, 368], "enabl": [0, 3, 368, 371, 372, 374, 376, 377, 382, 385, 386, 387, 388], "cach": [0, 3, 5, 29, 59, 102, 162, 163, 220, 221, 366, 372, 373, 374, 376, 377, 382, 385, 386, 387, 388], "5": [0, 27, 41, 52, 55, 57, 68, 72, 82, 84, 103, 123, 137, 138, 139, 141, 156, 202, 225, 251, 257, 308, 309, 367, 370, 382, 383, 384, 385, 386, 387, 388], "debug": [0, 5, 6, 368, 371, 382, 383, 384, 385, 387], "intermedi": 0, "6": [0, 27, 103, 225, 280, 367, 373, 382, 383, 384, 385, 386, 387, 388], "trace": [0, 5, 239, 374, 379, 381, 388], "graph": [0, 5, 220, 366, 374, 379, 385], "7": [0, 82, 122, 280, 367, 382, 383, 384, 385, 386, 387, 388], "tt_lib": [0, 5, 108, 109, 365, 366], "8": [0, 24, 27, 68, 82, 99, 143, 263, 367, 370, 372, 373, 382, 383, 384, 385, 386, 387, 388], "log": [0, 189, 359, 366, 372, 383, 385, 386], "9": [0, 54, 56, 66, 82, 84, 302, 367, 370, 382, 383, 384, 385, 386, 387, 388], "support": [0, 1, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 118, 119, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 217, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 240, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 346, 348, 349, 350, 351, 352, 357, 358, 359, 360, 361, 362, 365, 367, 368, 373, 382, 387], "python": [0, 4, 368, 370, 371, 372, 386, 388], "10": [0, 27, 69, 82, 120, 131, 149, 178, 210, 246, 260, 333, 337, 338, 339, 365, 367, 370, 382, 383, 384, 385, 386, 388], "chang": [0, 278, 335, 336, 353, 354, 368, 370, 382, 386], "string": [0, 42, 74, 129, 220, 221, 256, 257, 291, 368], "represent": [0, 306, 368, 373], "11": [0, 84, 382, 383, 384, 385, 386, 387], "visual": [0, 5, 385, 387, 388], "web": 0, "browser": [0, 374], "12": [0, 61, 133, 165, 279, 363, 382, 383, 384, 386, 387, 388], "regist": [0, 6, 264, 265], "pre": [0, 6, 213, 265, 370, 374, 375, 377, 386], "post": [0, 264, 372], "hook": [0, 264, 265, 386], "13": [0, 370, 382, 383, 384, 386, 388], "queri": [0, 347, 368, 384], "14": [0, 3, 61, 382, 383, 384, 386], "fall": [0, 168], "back": [0, 6, 344, 365, 372, 382], "15": [0, 370, 384, 386], "captur": [0, 388], "c": [0, 41, 78, 108, 109, 210, 213, 355, 368, 372, 373, 382, 383, 384, 385, 386, 387], "function": [0, 8, 9, 14, 16, 26, 29, 32, 36, 39, 49, 52, 54, 56, 63, 66, 70, 72, 80, 86, 98, 101, 103, 116, 117, 118, 121, 125, 127, 132, 134, 137, 139, 141, 143, 144, 145, 150, 152, 164, 167, 169, 171, 176, 178, 183, 190, 191, 194, 197, 198, 200, 202, 205, 210, 220, 221, 223, 225, 226, 227, 228, 235, 236, 242, 245, 246, 247, 252, 254, 259, 266, 271, 272, 282, 286, 289, 302, 306, 308, 310, 316, 322, 324, 325, 326, 330, 331, 333, 337, 348, 349, 363, 364, 365, 367, 368, 374, 381, 382], "buffer": [0, 6, 24, 69, 99, 239, 263, 366, 367, 368, 372, 373], "alloc": [0, 6, 27, 84, 85, 122, 123, 237, 238, 361, 362, 373, 382, 383, 384, 385, 386, 387], "etc": [0, 6, 367], "shape": [0, 27, 41, 60, 68, 84, 85, 106, 116, 117, 122, 123, 131, 178, 210, 213, 234, 237, 238, 241, 242, 243, 275, 276, 277, 278, 304, 336, 344, 347, 354, 361, 362, 363, 365, 367, 368, 372, 382, 383, 384, 387, 388], "layout": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 214, 217, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 372, 374, 376, 380, 384, 387, 389], "data": [0, 16, 27, 28, 29, 58, 78, 82, 83, 84, 85, 86, 108, 109, 121, 122, 123, 125, 131, 134, 167, 169, 178, 190, 191, 194, 198, 200, 205, 210, 227, 228, 237, 238, 256, 286, 316, 322, 335, 336, 338, 339, 340, 341, 353, 354, 355, 361, 362, 363, 365, 367, 368, 372, 374, 380, 386, 389], "type": [0, 6, 16, 27, 28, 29, 42, 58, 75, 82, 83, 84, 85, 86, 108, 109, 116, 121, 122, 123, 125, 129, 131, 134, 167, 169, 178, 190, 191, 194, 198, 200, 205, 210, 227, 228, 237, 238, 239, 256, 286, 316, 322, 326, 335, 336, 337, 338, 339, 340, 341, 353, 354, 361, 362, 363, 365, 366, 367, 372, 374, 380, 386, 388], "limit": [0, 11, 21, 42, 75, 115, 129, 147, 178, 182, 184, 186, 187, 189, 192, 193, 203, 204, 250, 253, 257, 262, 274, 307, 313, 360, 364, 368], "bfloat8_b": [0, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 33, 34, 35, 36, 37, 38, 42, 50, 52, 61, 64, 65, 66, 70, 71, 72, 73, 75, 77, 80, 86, 87, 89, 91, 93, 95, 96, 97, 98, 104, 105, 106, 111, 115, 118, 119, 121, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 157, 158, 159, 160, 161, 167, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 212, 214, 217, 218, 219, 224, 227, 228, 229, 230, 231, 232, 233, 248, 249, 250, 251, 253, 254, 255, 257, 261, 262, 266, 267, 268, 270, 271, 274, 280, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 298, 299, 300, 301, 302, 307, 308, 309, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 328, 329, 331, 332, 340, 348, 349, 350, 352, 357, 358, 360, 363, 367, 372, 384], "storag": [0, 366, 368, 374, 380], "shard": [0, 17, 60, 68, 178, 210, 213, 339, 347], "memori": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 372, 382, 384], "config": [0, 24, 62, 82, 83, 99, 116, 117, 210, 244, 263, 278, 304, 342, 343, 344, 363, 370, 374, 376, 382, 384, 385, 386, 387, 389], "api": [0, 4, 5, 6, 345, 363, 366, 369, 370, 371, 384, 389], "rank": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 118, 119, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 214, 217, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 240, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 340, 348, 349, 350, 351, 352, 357, 358, 359, 360, 361, 362, 367, 373], "to_rank": [0, 373], "open_devic": [0, 9, 59, 69, 82, 83, 120, 179, 260, 326, 337, 338, 339, 367, 382, 383, 384, 385, 389], "close_devic": [0, 382, 383, 384, 385, 387, 389], "manage_devic": [0, 389], "synchronize_devic": 0, "setdefaultdevic": [0, 365, 368], "getdefaultdevic": 0, "format_input_tensor": 0, "format_output_tensor": 0, "pad_to_tile_shap": 0, "create_sharded_memory_config": [0, 373], "core": [0, 6, 68, 178, 210, 239, 353, 363, 368, 372, 373, 383, 384, 386], "as_tensor": [0, 382, 383, 384, 385, 387], "from_torch": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 348, 349, 350, 351, 352, 356, 357, 358, 359, 360, 362, 363, 382, 383, 384, 385, 387, 389], "to_torch": [0, 6, 363, 367, 382, 383, 384, 385, 387, 389], "to_devic": [0, 24, 25, 26, 62, 63, 69, 77, 82, 120, 151, 152, 153, 154, 155, 164, 178, 210, 211, 213, 215, 216, 223, 234, 243, 244, 245, 247, 258, 259, 260, 283, 305, 318, 323, 338, 339, 356, 382, 383, 384, 385, 387], "from_devic": [0, 382, 383, 384, 385, 386, 387], "to_layout": [0, 5, 69, 121, 340, 373, 382, 383, 384], "dump_tensor": [0, 382, 383, 384, 385, 387], "load_tensor": [0, 382, 383, 384, 385, 386, 387], "dealloc": [0, 260, 373, 382, 383, 384, 385, 387, 389], "realloc": [0, 382, 383, 384, 385, 387], "to_memory_config": [0, 373, 387], "creation": [0, 121, 367], "arang": [0, 367, 382, 383, 384, 385], "empti": [0, 6, 368, 388, 389], "empty_lik": 0, "zero": [0, 60, 74, 100, 110, 123, 209, 234, 243, 261, 304, 305, 367, 368, 373, 385, 389], "zeros_lik": 0, "ones": [0, 79, 116, 368], "ones_lik": 0, "full": [0, 5, 364, 366, 368, 372, 389], "full_lik": 0, "matrix": [0, 82, 178, 210, 370, 373, 374, 376, 382, 389], "multipl": [0, 6, 58, 69, 109, 122, 127, 132, 166, 210, 220, 237, 266, 324, 338, 361, 367, 368, 372, 374, 376], "matmul": [0, 178, 374, 382, 383, 384, 385, 386], "linear": [0, 24, 99, 263, 306, 363, 366, 368, 382, 383, 384, 385], "pointwis": 0, "unari": [0, 6, 257, 352], "ab": [0, 11], "aco": [0, 13], "acosh": [0, 15], "asin": [0, 31], "asinh": [0, 33], "atan": [0, 38], "atanh": [0, 40], "bitwise_not": [0, 366, 368], "bitwise_left_shift": 0, "bitwise_right_shift": 0, "cbrt": 0, "ceil": [0, 51, 213, 366, 368], "celu": [0, 53, 382, 383, 384, 385], "clamp": [0, 55], "clip": [0, 57, 382, 383, 384, 385], "co": 0, "cosh": [0, 67], "deg2rad": [0, 71], "digamma": [0, 73], "experiment": [0, 4, 364, 366, 386], "dropout": 0, "gelu_bw": 0, "elu": [0, 81], "eqz": 0, "erf": [0, 90], "erfc": [0, 92], "erfinv": [0, 94], "exp": [0, 352, 365, 368, 385, 389], "exp2": [0, 97], "expm1": [0, 105], "fill": [0, 107, 109, 110, 122, 123, 237, 238, 275, 304, 361, 362, 368, 372], "floor": [0, 74, 75, 112, 113, 256, 257, 273, 366, 368], "frac": [0, 36, 74, 119, 368], "geglu": [0, 382, 383, 384, 385], "gelu": [0, 101, 127, 129, 363, 368], "glu": [0, 382, 383, 384, 385], "gez": 0, "gtz": 0, "hardshrink": [0, 138, 172, 382, 383, 384, 385], "hardsigmoid": [0, 140], "hardswish": [0, 142], "hardtanh": [0, 144], "heavisid": 0, "i0": [0, 149], "ident": [0, 387], "isfinit": 0, "isinf": 0, "isnan": 0, "isneginf": 0, "isposinf": 0, "leaky_relu": [0, 172], "lez": 0, "lgamma": [0, 177], "log10": [0, 182], "log1p": [0, 184], "log2": [0, 186], "log_sigmoid": 0, "logical_not": [0, 197], "logical_not_": 0, "logit": [0, 203, 382, 383, 384, 385], "ltz": 0, "mish": 0, "multigammaln": 0, "neg": [0, 231, 250, 368], "nez": 0, "normalize_glob": 0, "normalize_hw": 0, "polygamma": [0, 247, 382, 383, 384, 385], "prelu": 0, "rad2deg": [0, 255], "rdiv": [0, 257], "reciproc": [0, 262, 285, 373], "reglu": [0, 382, 383, 384, 385], "relu": [0, 16, 171, 227, 266, 270, 271, 272, 306, 322, 352, 365, 387], "relu_max": 0, "relu_min": 0, "relu6": [0, 269], "remaind": [0, 274], "round": [0, 34, 74, 75, 256, 257, 281, 373], "rsqrt": 0, "selu": [0, 290], "sigmoid": [0, 189, 294, 368], "sigmoid_accur": 0, "sign": [0, 296, 368], "signbit": 0, "silu": [0, 299, 324, 365, 366, 368, 389], "sin": [0, 301], "sinh": [0, 303], "softmax": [0, 342, 343, 366, 368, 384], "softplu": [0, 307], "softshrink": [0, 309, 382, 383, 384, 385], "softsign": [0, 311], "sqrt": [0, 146, 368], "squar": [0, 223, 285, 313, 315, 316, 342, 343, 373], "swiglu": [0, 382, 383, 384, 385], "swish": [0, 368], "tan": [0, 328], "tanh": [0, 42, 101, 129, 330], "tanhshrink": [0, 332], "threshold": [0, 306, 307, 334, 382, 383, 384, 385], "tril": 0, "triu": 0, "trunc": [0, 74, 75, 114, 256, 257, 366, 368], "unary_chain": 0, "clamp_bw": 0, "clip_bw": 0, "hardtanh_bw": 0, "threshold_bw": 0, "softplus_bw": 0, "rdiv_bw": 0, "pow_bw": 0, "exp_bw": 0, "tanh_bw": 0, "sqrt_bw": 0, "multigammaln_bw": 0, "lgamma_bw": 0, "fill_bw": 0, "hardsigmoid_bw": 0, "cos_bw": 0, "acosh_bw": 0, "acos_bw": 0, "atan_bw": 0, "rad2deg_bw": 0, "frac_bw": 0, "trunc_bw": 0, "log_sigmoid_bw": 0, "fill_zero_bw": 0, "i0_bw": 0, "tan_bw": 0, "sigmoid_bw": 0, "rsqrt_bw": 0, "neg_bw": 0, "relu_bw": 0, "logit_bw": 0, "hardshrink_bw": 0, "softshrink_bw": 0, "leaky_relu_bw": 0, "elu_bw": 0, "celu_bw": 0, "rpow_bw": 0, "floor_bw": 0, "round_bw": 0, "log_bw": 0, "relu6_bw": 0, "abs_bw": 0, "silu_bw": 0, "selu_bw": 0, "square_bw": 0, "prod_bw": 0, "hardswish_bw": 0, "tanhshrink_bw": 0, "atanh_bw": 0, "asin_bw": 0, "asinh_bw": 0, "sin_bw": 0, "sinh_bw": 0, "log10_bw": 0, "log1p_bw": 0, "erfc_bw": 0, "ceil_bw": 0, "softsign_bw": 0, "cosh_bw": 0, "logiteps_bw": 0, "log2_bw": 0, "sign_bw": 0, "div_no_nan_bw": 0, "exp2_bw": 0, "expm1_bw": 0, "reciprocal_bw": 0, "digamma_bw": 0, "erfinv_bw": 0, "erf_bw": 0, "deg2rad_bw": 0, "polygamma_bw": 0, "repeat_bw": 0, "real": [0, 155, 244, 259, 364, 367], "angl": [0, 26], "is_imag": 0, "is_real": 0, "polar_bw": 0, "imag_bw": 0, "real_bw": 0, "angle_bw": 0, "conj_bw": 0, "conj": [0, 63], "polar": [0, 245], "binari": [0, 368], "add": [0, 17, 241, 342, 343, 364, 368, 370, 371, 374, 384, 386, 387, 389], "addalpha": [0, 19], "subalpha": [0, 321], "multipli": [0, 18, 20, 22, 178, 210, 224, 320, 355, 368, 374, 376, 389], "subtract": [0, 3, 286, 287, 319, 347, 389], "div": [0, 114, 273], "div_no_nan": [0, 77], "floor_div": 0, "fmod": [0, 115], "gcd": 0, "lcm": 0, "logical_and_": 0, "logical_or_": 0, "logical_xor_": 0, "rpow": [0, 283], "rsub": 0, "ldexp": [0, 168], "logical_and": 0, "logical_or": 0, "logical_xor": [0, 382, 383, 384, 385], "bitwise_and": [0, 44, 47], "bitwise_or": 0, "bitwise_xor": 0, "logaddexp": [0, 193], "logaddexp2": [0, 192], "hypot": [0, 147, 382, 383, 384, 385], "xlogi": [0, 360, 382, 383, 384, 385], "squared_differ": [0, 317], "gt": [0, 382, 383, 384, 385, 386, 387, 388], "gt_": 0, "lt_": 0, "ge_": 0, "le_": 0, "eq_": 0, "ne_": 0, "ge": 0, "lt": [0, 382, 383, 384, 385, 386, 387, 388], "le": 0, "eq": 0, "ne": 0, "isclos": [0, 382, 383, 384, 385], "nextaft": [0, 382, 383, 384, 385], "maximum": [0, 28, 54, 55, 56, 57, 144, 212, 213, 368, 382, 383, 384, 385], "minimum": [0, 6, 54, 55, 56, 57, 144, 217, 368, 373, 382, 383, 384, 385], "outer": 0, "pow": [0, 365], "polyv": [0, 382, 383, 384, 385], "scatter": [0, 263], "atan2": [0, 37, 382, 383, 384, 385], "add_bw": 0, "assign_bw": 0, "atan2_bw": 0, "bias_gelu_bw": 0, "div_bw": 0, "embedding_bw": 0, "fmod_bw": 0, "remainder_bw": 0, "addalpha_bw": 0, "subalpha_bw": 0, "xlogy_bw": 0, "hypot_bw": 0, "ldexp_bw": 0, "logaddexp_bw": 0, "logaddexp2_bw": 0, "mul_bw": 0, "sub_bw": 0, "squared_difference_bw": 0, "concat_bw": 0, "rsub_bw": 0, "min_bw": 0, "max_bw": 0, "ternari": 0, "addcdiv": [0, 21, 382, 383, 384, 385], "addcmul": [0, 23, 382, 383, 384, 385], "mac": [0, 382, 383, 384, 385], "lerp": [0, 174, 382, 383, 384, 385], "addcmul_bw": 0, "addcdiv_bw": 0, "where_bw": 0, "lerp_bw": 0, "loss": [0, 164, 223], "l1_loss": [0, 382, 383, 384, 385], "mse_loss": [0, 382, 383, 384, 385], "reduct": [0, 28, 164, 223], "max": [0, 54, 55, 56, 57, 143, 144, 213, 271, 368, 386, 388], "mean": [0, 41, 164, 223, 365, 366, 368, 373], "min": [0, 54, 55, 56, 57, 143, 144, 271, 272, 388], "std": [0, 6, 291, 367, 368, 387], "sum": [0, 222, 368], "var": [0, 368], "argmax": [0, 368], "prod": [0, 68, 253], "topk": 0, "sort": [0, 341], "movement": 0, "concat": [0, 61, 366, 368, 371], "nonzero": 0, "pad": [0, 58, 82, 109, 116, 117, 121, 213, 242, 243, 278, 304, 336, 338, 365, 366, 367, 368, 373, 382, 387], "permut": [0, 213, 347, 384, 387], "reshap": [0, 213, 347, 365, 366, 367, 368, 382, 383, 384, 385, 386, 387], "repeat": [0, 5, 276, 277, 366, 368], "repeat_interleav": [0, 366, 368], "tiliz": [0, 29, 41, 368, 383, 384], "tilize_with_val_pad": 0, "fill_rm": [0, 108], "fill_ones_rm": 0, "until": [0, 120, 340, 354], "untilize_with_unpad": 0, "indexed_fil": 0, "normal": [0, 41, 150, 368, 386, 388], "group_norm": [0, 366, 368], "layer_norm": [0, 366, 368], "rms_norm": 0, "batch_norm": 0, "moreh": [0, 222, 368], "moreh_sum": 0, "transform": [0, 178, 244, 363, 384, 385, 386], "split_query_key_value_and_split_head": [0, 384], "concatenate_head": [0, 384], "attention_softmax": 0, "attention_softmax_": [0, 384], "rotary_embed": 0, "scaled_dot_product_attent": 0, "scaled_dot_product_attention_decod": 0, "ccl": 0, "all_gath": [0, 382, 383, 384, 385], "reduce_scatt": 0, "all_reduc": 0, "embed": [0, 83, 102, 382], "pool": [0, 131, 213, 368], "global_avg_pool2d": 0, "max_pool2d": 0, "vision": 0, "upsampl": [0, 368], "downsampl": [0, 387], "kv": 0, "kv_cach": 0, "fill_cache_for_user_": 0, "update_cache_for_token_": 0, "convers": [0, 71, 255, 338, 365, 367, 382], "model_preprocess": [0, 363, 384, 385, 386, 387], "preprocess_model": [0, 385, 386, 387], "preprocess_model_paramet": [0, 363, 385, 387], "report": [0, 210, 364, 382, 383, 384, 385, 386, 387, 389], "set_printopt": [0, 389], "register_pre_operation_hook": [0, 389], "register_post_operation_hook": [0, 389], "creat": [0, 4, 6, 27, 58, 68, 84, 85, 103, 106, 122, 123, 237, 238, 361, 362, 365, 367, 368, 371, 373, 374, 379, 380, 384, 388], "host": [0, 29, 120, 241, 304, 326, 337, 338, 365, 367, 368, 370, 372, 373, 374, 380, 383, 384, 385, 386, 387], "borrow": [0, 367, 373, 374, 380], "v": [0, 29, 109, 346, 370, 374, 380], "own": [0, 367, 373, 374, 380], "open": [0, 209, 239, 374, 380, 383, 384, 385, 386, 387, 388, 389], "initi": [0, 85, 220, 221, 363, 365, 368, 374, 376, 377, 380, 385, 386, 387], "b": [0, 6, 102, 114, 210, 273, 277, 345, 346, 374, 376, 380], "random": [0, 243, 365, 374, 376, 380], "valu": [0, 18, 19, 20, 21, 22, 23, 27, 28, 41, 52, 53, 54, 55, 56, 57, 60, 62, 72, 77, 81, 84, 85, 103, 106, 108, 109, 116, 121, 122, 123, 131, 137, 138, 139, 141, 143, 144, 145, 153, 154, 155, 156, 162, 163, 172, 176, 204, 211, 213, 215, 216, 226, 237, 238, 241, 243, 246, 249, 250, 256, 271, 272, 278, 282, 283, 289, 304, 306, 307, 308, 309, 318, 320, 321, 323, 333, 334, 336, 341, 347, 348, 349, 356, 361, 362, 364, 365, 367, 368, 373, 374, 376, 380, 384, 389], "inspect": [0, 374, 376, 380], "output": [0, 3, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 372, 373, 374, 376, 377, 380, 385, 389], "attribut": [0, 6, 363, 368, 372, 373, 374, 380, 386], "close": [0, 59, 209, 365, 370, 374, 376, 377, 380, 385, 386, 387], "result": [0, 3, 5, 27, 29, 41, 109, 121, 123, 150, 178, 210, 213, 238, 256, 261, 362, 365, 368, 372, 373, 374, 376], "more": [0, 1, 6, 11, 21, 42, 75, 115, 129, 147, 182, 184, 186, 187, 189, 192, 193, 203, 204, 210, 250, 253, 257, 261, 262, 274, 307, 313, 360, 368, 369, 370, 372, 373, 374, 376, 384, 386, 388], "perform": [0, 11, 13, 14, 15, 17, 19, 21, 23, 24, 25, 26, 31, 32, 33, 34, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 61, 63, 65, 66, 67, 70, 71, 72, 73, 75, 77, 81, 87, 90, 92, 94, 97, 98, 99, 105, 107, 110, 112, 114, 115, 118, 119, 126, 127, 129, 131, 132, 135, 137, 138, 139, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 168, 170, 172, 174, 176, 177, 182, 183, 184, 186, 187, 189, 192, 193, 197, 202, 203, 204, 206, 209, 212, 213, 217, 224, 225, 226, 229, 231, 235, 236, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 266, 269, 270, 273, 274, 276, 281, 282, 283, 285, 287, 289, 290, 294, 296, 299, 301, 302, 303, 304, 307, 308, 309, 310, 311, 313, 315, 317, 319, 321, 324, 325, 328, 330, 331, 332, 333, 334, 348, 349, 351, 358, 360, 363, 364, 367, 368, 369, 370, 371, 372, 374, 376, 384], "write": [0, 1, 3, 4, 6, 68, 178, 210, 363, 373, 374, 377, 386], "activ": [0, 4, 16, 86, 125, 134, 144, 167, 169, 178, 190, 191, 194, 198, 200, 205, 210, 227, 228, 286, 316, 322, 363, 370, 374, 377, 387], "weight": [0, 41, 82, 83, 133, 165, 173, 178, 251, 279, 363, 368, 374, 377, 385, 386, 387], "first": [0, 3, 121, 127, 132, 178, 210, 234, 241, 266, 324, 363, 365, 367, 368, 370, 372, 374, 377, 383, 389], "iter": [0, 374, 377], "subsequ": [0, 374, 377, 383, 389], "version": [0, 220, 221, 346, 370, 372, 374, 377, 379, 382, 383, 385, 386], "process": [0, 60, 372, 374, 377, 386], "paramet": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 368, 374, 377, 379, 385], "check": [0, 2, 6, 210, 364, 367, 369, 370, 374, 377, 386], "match": [0, 58, 210, 220, 221, 278, 367, 368, 373, 374, 377, 382, 383, 385, 386, 387], "origin": [0, 103, 220, 221, 242, 252, 364, 371, 374, 377, 382], "implement": [0, 3, 5, 210, 345, 346, 347, 363, 368, 371, 372, 374, 377, 379], "tracer": [0, 5, 374, 385, 387, 388, 389], "modul": [0, 5, 6, 220, 221, 363, 368, 369, 374, 379, 381, 382, 383, 384, 388], "written": [0, 6, 162, 163, 178, 210, 374, 381, 384], "profil": [0, 3, 150, 291, 366, 370, 374, 389], "resnet": [0, 369, 372, 374, 386], "block": [0, 68, 120, 209, 210, 213, 261, 368, 373, 374], "torchvis": [0, 374, 379, 386, 388], "preprocess": [0, 6, 29, 220, 221, 373, 374, 379], "displai": [0, 370, 374, 375, 379], "pass": [0, 6, 101, 102, 109, 264, 265, 347, 363, 365, 368, 371, 374, 379, 382, 385, 386], "constructor": [0, 367, 374, 379], "dit_xl_2": [0, 374, 388], "With": [0, 374], "pytorch": [0, 3, 5, 28, 103, 210, 241, 341, 345, 347, 366, 368, 374, 375, 386], "base": [0, 3, 4, 6, 41, 60, 68, 210, 242, 368, 370, 373, 374, 375, 384], "librari": [0, 4, 5, 365, 366, 367, 374, 375], "http": [0, 24, 263, 369, 370, 374, 375, 386], "github": [0, 2, 24, 263, 369, 370, 374, 375], "com": [0, 24, 263, 369, 370, 374, 375], "facebookresearch": [0, 374, 375], "dit": [0, 374, 375], "git": [0, 220, 221, 370, 374, 375, 386], "xl": [0, 374, 375], "sampl": [0, 368, 374, 375], "train": [0, 41, 368, 374, 375], "onboard": 0, "new": [0, 85, 123, 238, 275, 278, 362, 364, 366, 372, 382, 385], "rewrit": 0, "switch": [0, 306], "ad": [0, 178, 367, 368, 371, 382], "faq": 0, "need": [0, 1, 2, 178, 210, 364, 365, 368, 372, 373, 382, 383, 384, 389], "bind": [0, 386], "golden": [0, 363, 389], "perf": [0, 382, 383, 384, 385, 386, 387], "header": [0, 3], "profile_thi": [0, 386], "descript": [0, 108, 109, 367, 368, 371], "lib": [0, 4, 366, 385, 386, 388], "overview": [0, 366], "infrastructur": [0, 5, 366], "member": [0, 2, 366, 367], "input": [0, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 364, 365, 366, 367, 372, 373, 383, 384, 387, 388, 389], "fast": [0, 89, 91, 95, 128, 284, 366], "dispatch": [0, 239, 366, 367, 372], "cpu": [0, 3, 365, 366, 367, 368, 370, 372, 386, 388], "through": [0, 366, 370, 388], "primari": [0, 5, 366], "softmax_backward": [0, 366, 368], "softmin": [0, 366, 368], "softmin_backward": [0, 366, 368], "logsoftmax": [0, 366, 368], "logsoftmax_backward": [0, 366, 368], "mean_backward": [0, 366, 368], "group_norm_backward": [0, 366, 368], "norm": [0, 41, 366, 368], "norm_backward": [0, 366, 368], "enum": [0, 366], "bcastopmath": [0, 366, 368], "bcastopdim": [0, 366, 368], "fallback": [0, 365, 366, 371], "tensor_slic": [0, 366, 368], "chunk": [0, 99, 263, 345, 346, 366, 368, 383, 388], "conv2d": [0, 366, 368, 382, 383, 384, 385, 387], "interpol": [0, 173, 366, 368], "batchnorm2d": [0, 366, 368, 387], "groupnorm": [0, 366, 368], "layernorm": [0, 366, 368], "maxpool2d": [0, 366, 368], "adaptiveavgpool2d": [0, 366, 368], "unary_fmod": [0, 366, 368], "binary_fmod": [0, 366, 368], "unary_bitwise_or": [0, 366, 368], "unary_bitwise_and": [0, 366, 368], "unary_bitwise_xor": [0, 366, 368], "binary_bitwise_or": [0, 366, 368], "binary_bitwise_and": [0, 366, 368], "binary_bitwise_xor": [0, 366, 368], "unary_bitwise_left_shift": [0, 366, 368], "unary_bitwise_right_shift": [0, 366, 368], "binary_bitwise_left_shift": [0, 366, 368], "binary_bitwise_right_shift": [0, 366, 368], "torch_argmax": [0, 366, 368], "torch_argmin": [0, 366, 368], "fuse": [0, 363, 366, 384], "mini": [0, 366], "addandnorm": [0, 366, 368], "complex": [0, 25, 26, 62, 63, 151, 152, 244, 245, 258, 259, 366], "__init__": [0, 363, 366, 367, 387], "get_dtyp": [0, 6, 366, 367], "get_layout": [0, 6, 366, 367], "pad_to_til": [0, 366, 367], "storage_typ": [0, 366, 367], "unpad": [0, 58, 117, 338, 354, 365, 366, 367, 368], "unpad_from_til": [0, 366, 367], "memoryconfig": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 366, 368], "between": [0, 5, 6, 27, 41, 210, 339, 366, 368], "one": [0, 6, 54, 55, 56, 57, 366, 368], "op": [0, 6, 8, 28, 68, 83, 213, 305, 326, 345, 346, 352, 366, 368, 371, 372, 386, 389], "acceler": [0, 335, 336, 353, 354, 366, 367, 368, 383, 386], "odd": [0, 366], "size": [0, 27, 78, 82, 83, 210, 213, 239, 251, 252, 304, 345, 346, 347, 355, 366, 367, 368, 373, 382, 389], "last": [0, 28, 58, 103, 122, 127, 132, 237, 266, 278, 324, 338, 341, 347, 361, 366, 367, 368, 372, 373], "dim": [0, 24, 28, 60, 61, 68, 99, 103, 127, 132, 153, 211, 215, 216, 243, 252, 253, 263, 266, 277, 304, 305, 318, 323, 324, 341, 347, 356, 366, 367, 368, 373, 384, 388], "uplift": 0, "next": [0, 232, 368, 373], "file": [0, 2, 4, 6, 29, 79, 179, 364, 370, 372, 386, 388, 389], "bug": 0, "propos": [0, 371], "request": [0, 338, 371, 386, 388], "troubleshoot": [0, 364], "tip": 0, "commun": 0, "develop": [0, 4, 369, 370, 371, 372, 386], "index": [0, 162, 163, 341, 346, 367, 372, 386, 388], "search": 0, "page": [0, 370, 374], "If": [1, 2, 6, 28, 58, 68, 103, 178, 210, 220, 221, 239, 241, 243, 304, 305, 326, 340, 341, 346, 347, 367, 368, 369, 370, 371, 372, 385, 389], "would": [1, 371, 372, 373], "like": [1, 110, 306, 363, 365, 373, 382, 389], "thi": [1, 3, 4, 5, 6, 8, 9, 28, 41, 58, 60, 83, 101, 102, 103, 106, 116, 117, 131, 150, 168, 213, 241, 242, 271, 272, 306, 345, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 378, 379, 382, 383, 384, 388, 389], "project": [1, 2, 4, 369], "pleas": [1, 2, 210, 364, 368, 369, 371, 374, 389], "review": [1, 369, 371], "standard": [1, 2, 272, 364, 369], "gain": 1, "access": [1, 2, 370, 388], "read": [1, 68, 368, 369, 373], "section": [1, 2, 364, 368, 373], "detail": [1, 6, 11, 21, 42, 75, 115, 129, 147, 182, 184, 186, 187, 189, 192, 193, 203, 204, 250, 253, 257, 262, 274, 307, 313, 360, 369, 388, 389], "contact": 1, "u": [1, 371], "have": [2, 3, 4, 6, 28, 69, 83, 117, 173, 210, 256, 335, 336, 341, 353, 354, 364, 367, 368, 370, 372, 373, 374, 382, 388], "formal": 2, "permiss": 2, "cloud": 2, "issu": [2, 210, 306, 364, 371, 372, 382, 383, 384, 385, 386, 387], "can": [2, 3, 4, 5, 6, 27, 42, 54, 55, 56, 57, 74, 75, 85, 123, 129, 210, 238, 256, 257, 264, 265, 306, 326, 362, 363, 365, 367, 368, 369, 370, 372, 373, 374, 382, 383, 384, 385, 387, 388, 389], "out": [2, 6, 100, 103, 272, 304, 341, 368, 370, 382, 384, 387], "relev": [2, 364], "ever": 2, "help": [2, 5, 371, 374], "we": [2, 3, 4, 5, 117, 121, 210, 340, 364, 365, 368, 371, 373, 375, 378, 379, 382, 383, 388, 389], "offici": 2, "discord": 2, "channel": [2, 24, 41, 78, 99, 108, 109, 131, 213, 263, 355, 368, 372], "repres": [2, 367, 372, 373, 382], "both": [2, 17, 210, 249, 363, 364, 367, 368, 372, 373, 382, 387], "tenstorr": [2, 5, 6, 24, 263, 363, 364, 369, 370, 374, 382, 383, 388, 389], "metal": [2, 5, 24, 263, 367, 369, 370, 374, 382, 383, 384, 385, 386, 387, 388], "join": [2, 386], "discuss": [2, 364], "board": 2, "bounc": 2, "idea": [2, 364], "off": [2, 271, 280, 363, 373], "each": [2, 3, 5, 41, 60, 109, 131, 213, 241, 275, 277, 304, 367, 368, 372, 373], "other": [2, 5, 6, 363, 364, 368, 369, 373, 375, 378, 379, 389], "refer": [2, 3, 4, 5, 11, 21, 42, 69, 75, 85, 106, 115, 129, 147, 182, 184, 186, 187, 189, 192, 193, 203, 204, 210, 226, 250, 253, 257, 262, 274, 307, 313, 360, 367, 371, 373, 389], "code": [2, 6, 28, 103, 241, 264, 265, 341, 347, 365, 368, 369, 370, 371, 372, 382, 386, 389], "conduct": 2, "when": [2, 6, 8, 9, 41, 60, 68, 75, 102, 147, 209, 210, 220, 243, 249, 257, 338, 364, 367, 368, 371, 373, 382, 384, 385, 387, 389], "interact": 2, "ensur": [3, 4, 58, 103, 326, 364, 370, 373], "tt": [3, 4, 5, 6, 9, 24, 263, 335, 336, 353, 354, 355, 366, 374, 375, 378, 379, 382, 383, 384, 385, 386, 387, 388], "requir": [3, 6, 17, 19, 34, 41, 61, 68, 75, 108, 109, 122, 220, 221, 224, 237, 287, 319, 321, 358, 361, 364, 367, 368, 370, 372, 378, 386, 388], "model": [3, 5, 220, 221, 364, 371, 372, 374, 375, 377, 381, 382, 383, 386, 387], "follow": [3, 6, 103, 109, 210, 278, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 388, 389], "instruct": [3, 4, 364, 369, 370, 374, 389], "readi": [3, 4, 347, 364], "come": [3, 369, 372], "typic": [3, 131, 373], "found": [3, 6, 363, 374, 386, 388], "under": [3, 4, 364, 365, 371, 372, 374, 389], "your_model": 3, "perf_model": 3, "py": [3, 6, 363, 364, 372, 385, 386, 389], "pytest": [3, 4, 363, 364, 372, 386, 389], "test": [3, 4, 6, 363, 364, 371, 372, 384, 386, 389], "python_api_test": 3, "perf_your_model": 3, "csv": [3, 372, 386], "perf_your_model_d": 3, "contain": [3, 4, 6, 27, 82, 213, 261, 367, 373, 382], "tabl": [3, 386], "two": [3, 58, 60, 127, 132, 210, 266, 278, 324, 338, 347, 363, 367, 368, 373], "row": [3, 51, 107, 109, 110, 112, 119, 234, 281, 296, 351, 367, 372, 373, 382, 383, 386], "batch": [3, 41, 78, 108, 109, 153, 178, 210, 213, 346, 367, 368, 372], "sec": 3, "second": [3, 121, 127, 132, 178, 210, 241, 251, 266, 278, 324, 367, 368, 372, 384, 386, 389], "compil": [3, 368, 383, 386, 389], "time": [3, 156, 220, 275, 364, 368, 372, 383, 384, 386, 389], "infer": [3, 41, 364, 372, 386], "g": [3, 210, 368, 370, 372, 373], "throughput": 3, "inf": [3, 219, 225], "vit": 3, "patch16": 3, "30": [3, 61, 84, 386], "51": [3, 385], "16": [3, 304, 373, 384, 386, 387, 388], "05": [3, 41, 368, 388], "46": [3, 386], "0": [3, 6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 34, 35, 41, 43, 44, 45, 46, 47, 48, 50, 54, 55, 56, 57, 59, 60, 61, 62, 64, 69, 72, 74, 75, 80, 82, 83, 84, 85, 86, 88, 89, 91, 93, 95, 96, 98, 100, 101, 104, 106, 107, 108, 109, 111, 116, 120, 121, 122, 123, 125, 128, 129, 130, 134, 136, 137, 138, 139, 141, 145, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 167, 169, 171, 172, 173, 175, 176, 179, 180, 181, 185, 188, 190, 191, 194, 196, 198, 200, 202, 204, 205, 207, 209, 210, 213, 219, 223, 224, 227, 228, 230, 231, 233, 234, 237, 238, 239, 241, 243, 244, 248, 249, 250, 252, 253, 256, 257, 258, 260, 261, 263, 267, 268, 271, 272, 277, 278, 280, 284, 285, 286, 287, 292, 293, 295, 297, 298, 299, 300, 304, 305, 306, 308, 309, 312, 313, 314, 316, 319, 320, 321, 322, 326, 327, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 345, 346, 347, 348, 349, 350, 352, 353, 354, 357, 358, 361, 362, 363, 365, 367, 368, 370, 372, 373, 382, 383, 384, 385, 386, 387, 388, 389], "0623": 3, "29": [3, 370, 386], "4960": 3, "includ": [3, 6, 58, 364, 373], "without": [3, 85, 365, 367, 368, 370], "ani": [3, 5, 108, 109, 364, 365, 368, 386], "abovement": 3, "grayskul": [3, 6, 29, 280, 363, 370, 374, 375, 378, 379, 384, 385, 389], "It": [3, 6, 220, 221, 340, 367, 368, 382], "sinc": [3, 150, 365], "dure": [3, 60, 121, 156, 340, 373], "do": [3, 364, 365, 384], "pai": 3, "name": [3, 6, 29, 79, 179, 220, 221, 345, 363, 367, 368, 371, 372, 386, 387, 388, 389], "suggest": 3, "calcul": [3, 68, 256, 372], "comput": [3, 5, 6, 18, 20, 22, 36, 58, 74, 76, 113, 124, 131, 133, 146, 156, 165, 166, 167, 173, 178, 190, 191, 194, 195, 198, 199, 200, 201, 208, 210, 214, 218, 232, 240, 248, 252, 279, 288, 305, 316, 320, 342, 343, 346, 347, 357, 359, 368, 372, 382, 383], "": [3, 4, 5, 6, 58, 220, 221, 345, 346, 364, 367, 368, 370, 373, 382, 383, 384, 388], "also": [3, 6, 210, 226, 364, 365, 367, 368, 369, 372, 388], "maintain": [3, 371], "run_perform": [3, 364], "sh": [3, 4, 364, 370, 372, 386], "facilit": 3, "easi": [3, 382], "wai": [3, 5, 220, 221, 363, 368, 370, 382], "attempt": [3, 368, 386], "fastest": 3, "command": [3, 10, 12, 16, 17, 19, 28, 30, 34, 35, 41, 43, 44, 45, 46, 47, 48, 50, 60, 61, 64, 74, 75, 80, 82, 83, 86, 88, 89, 91, 93, 95, 96, 98, 100, 101, 104, 106, 107, 108, 109, 111, 120, 121, 122, 123, 125, 128, 129, 130, 134, 136, 145, 148, 150, 153, 157, 158, 159, 160, 161, 164, 167, 169, 171, 175, 180, 181, 185, 188, 190, 191, 194, 196, 198, 200, 205, 207, 219, 223, 224, 227, 228, 230, 231, 233, 234, 238, 241, 243, 249, 250, 256, 261, 267, 268, 271, 272, 278, 280, 284, 285, 286, 287, 292, 293, 295, 297, 298, 299, 300, 306, 312, 313, 314, 316, 319, 321, 322, 326, 327, 329, 330, 335, 336, 337, 340, 341, 345, 346, 350, 352, 353, 354, 357, 358, 362, 370, 372, 389], "merg": [3, 371], "built": [4, 370, 386, 388], "now": [4, 121, 340, 355, 373, 382, 384], "root": [4, 285, 313, 342, 343], "provid": [4, 5, 24, 28, 41, 106, 114, 178, 210, 220, 221, 256, 263, 273, 305, 326, 329, 336, 341, 364, 367, 368, 371, 372, 373, 382, 384, 389], "virtual": [4, 370], "which": [4, 5, 44, 47, 68, 103, 122, 123, 178, 210, 213, 220, 221, 237, 238, 256, 304, 305, 345, 346, 361, 362, 363, 367, 368, 372, 373], "ll": 4, "work": [4, 210, 304, 363, 364, 374, 375, 378, 379, 389], "python_env": [4, 370, 385, 386, 388], "bin": [4, 79, 179, 370, 386], "python_env_dir": 4, "variabl": [4, 6, 368, 370, 385, 387, 389], "create_venv": [4, 370], "control": [4, 368, 382], "pythonpath": [4, 370, 388], "common": [4, 124, 166, 364, 368], "practic": 4, "export": [4, 368, 370, 389], "pwd": [4, 370], "folder": [4, 364, 369, 372, 386], "split": [4, 60, 127, 132, 266, 324, 347, 368, 373], "them": [4, 347, 368, 370, 372, 382], "sub": [4, 5, 326, 353, 368], "In": [4, 6, 100, 210, 278, 338, 343, 363, 365, 368, 372, 373, 382, 388], "find": [4, 370, 382, 383, 384, 385, 386, 387], "prepar": [4, 364, 386], "readm": [4, 364, 370, 386, 388], "md": [4, 24, 263, 364, 370], "give": [4, 372], "how": [4, 6, 364, 367, 368, 372, 373, 383, 384, 389], "progress": [4, 388], "yet": 4, "mani": [4, 6, 363, 383, 388], "part": [4, 127, 132, 266, 324, 364, 368, 372, 384], "entir": [4, 131, 326], "path_to_test_fil": 4, "test_in_fil": 4, "ttnn": [4, 367, 368, 370, 371, 373, 374, 377, 379, 380, 383, 388], "friendli": [4, 5, 369], "top": [4, 341, 367, 374], "doc": [4, 6, 386], "document": [4, 6, 364, 371, 386], "design": 5, "intuit": [5, 382], "familiar": 5, "trust": 5, "valuabl": 5, "journei": 5, "take": [5, 6, 344, 364, 367, 368, 369, 373, 382], "advantag": 5, "n": [5, 41, 60, 78, 108, 109, 213, 234, 247, 248, 355, 368, 370, 372, 382, 383, 386, 388], "d": [5, 210, 386], "row_major_layout": [5, 29, 58, 79, 82, 116, 117, 121, 122, 237, 338, 361, 373, 382, 383, 384], "tile_layout": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 214, 217, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 246, 248, 249, 250, 253, 254, 255, 256, 257, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 338, 341, 348, 349, 350, 351, 352, 357, 358, 359, 360, 361, 362, 363, 367, 373, 382, 383, 384, 387, 389], "stabl": [5, 103], "The": [5, 6, 8, 9, 24, 27, 29, 58, 59, 78, 79, 80, 82, 83, 84, 85, 99, 101, 103, 106, 109, 121, 122, 123, 131, 145, 171, 178, 209, 210, 213, 226, 237, 238, 239, 242, 263, 264, 265, 271, 272, 275, 326, 337, 340, 341, 345, 346, 355, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 382, 383, 388, 389], "networkx": [5, 386, 388], "compat": [5, 370, 375, 378, 379], "some": [5, 6, 326, 368, 389], "nn": [5, 6, 24, 220, 221, 263, 363, 367, 374, 375, 378, 379, 387, 389], "object": [5, 68, 239, 363, 367, 371, 388], "could": [5, 382, 383, 384, 385, 386, 387], "significantli": [5, 383], "speed": [5, 383], "abil": [5, 368], "compar": [5, 6, 86, 125, 134, 169, 205, 210, 228, 383], "equival": [5, 6, 28, 103, 241, 341, 347, 373], "veri": [5, 306, 372, 382, 384], "meant": 6, "contributor": 6, "Not": [6, 202, 229, 280, 363, 389], "mai": [6, 69, 75, 147, 168, 210, 257, 261, 363, 368, 373, 389], "wormhol": [6, 29, 363, 370, 374, 389], "A": [6, 27, 122, 123, 210, 237, 238, 306, 346, 361, 362, 364, 365, 367, 368, 370, 371, 373], "produc": [6, 261, 364, 365, 368, 382, 383], "call": [6, 121, 264, 265, 340, 365, 367, 368, 371, 372, 373, 382, 384, 386, 389], "optiona": 6, "composit": 6, "struct": [6, 368], "specifi": [6, 27, 58, 79, 84, 85, 103, 122, 123, 178, 210, 220, 221, 237, 238, 241, 242, 243, 252, 275, 326, 336, 345, 346, 361, 362, 363, 367, 368, 383, 384], "simpli": [6, 338, 367, 368, 382], "defin": [6, 29, 367, 368, 371, 373], "method": [6, 368, 370, 386], "register_oper": 6, "exist": [6, 239, 367, 386, 388], "bind_registered_oper": 6, "auto": [6, 368], "attach": [6, 220, 221, 386], "attach_golden_funct": 6, "let": [6, 373, 382, 384], "just": [6, 384, 388], "copi": [6, 58, 120, 150, 337, 367, 368, 382], "order": [6, 68, 103, 210, 247, 287, 341, 367, 368, 372, 373, 374, 382, 384, 389], "directori": [6, 374, 388], "structur": [6, 363], "shown": [6, 373], "below": [6, 210, 364, 368, 372, 373, 374], "cpp": 6, "categori": 6, "operation_nam": 6, "_device_oper": 6, "hpp": 6, "program_factory_0": 6, "_program_factori": 6, "factori": 6, "But": [6, 365], "concret": [6, 210], "example_device_oper": 6, "spdx": [6, 389], "filecopyrighttext": [6, 389], "2023": [6, 386, 388], "inc": [6, 389], "licens": [6, 389], "identifi": [6, 386, 389], "apach": [6, 389], "pragma": 6, "onc": [6, 370, 383], "variant": 6, "device_oper": 6, "decor": [6, 371, 382, 383, 384, 385, 386, 387], "namespac": [6, 388], "exampledeviceoper": 6, "store": [6, 41, 367, 372, 373, 382], "aren": [6, 8], "t": [6, 8, 99, 150, 210, 220, 221, 263, 365, 367, 368, 372, 382, 384, 386], "operation_attributes_t": 6, "bool": [6, 17, 19, 29, 34, 41, 61, 68, 69, 74, 75, 89, 91, 95, 120, 128, 133, 156, 164, 178, 210, 213, 220, 221, 223, 224, 252, 253, 284, 287, 319, 321, 335, 336, 341, 342, 343, 345, 346, 347, 353, 354, 358, 368], "int": [6, 10, 12, 16, 17, 19, 24, 27, 28, 30, 34, 35, 41, 43, 44, 45, 46, 47, 48, 50, 60, 61, 64, 68, 74, 75, 80, 82, 83, 84, 86, 88, 89, 91, 93, 95, 96, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 111, 117, 120, 121, 122, 123, 125, 127, 128, 130, 132, 133, 134, 136, 145, 148, 150, 153, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 171, 175, 178, 180, 181, 185, 188, 190, 191, 194, 196, 198, 200, 205, 207, 209, 210, 213, 219, 223, 224, 227, 228, 230, 231, 233, 234, 238, 239, 241, 242, 243, 246, 249, 250, 252, 253, 256, 261, 263, 266, 267, 268, 271, 272, 276, 280, 284, 286, 287, 292, 293, 295, 297, 298, 299, 300, 304, 306, 312, 313, 314, 316, 319, 321, 322, 324, 326, 327, 329, 330, 335, 336, 337, 340, 341, 342, 343, 345, 346, 347, 350, 352, 353, 354, 355, 357, 358, 362, 367, 368, 373, 387, 388], "some_other_attribut": 6, "argument": [6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 367, 368, 382, 385, 387], "don": [6, 210, 368, 382], "thei": [6, 210, 364, 368, 383, 384], "tensor_args_t": 6, "const": [6, 291, 368], "input_tensor": [6, 10, 11, 12, 13, 14, 15, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75, 77, 78, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 116, 118, 119, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 165, 170, 171, 172, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 197, 202, 203, 204, 206, 207, 213, 219, 225, 226, 229, 230, 231, 233, 234, 235, 236, 238, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 362, 368, 385, 387, 389], "howev": [6, 368, 382], "show": [6, 210, 367, 373, 383, 384], "els": [6, 74, 367, 385, 387, 388], "done": [6, 364, 367, 370, 372, 382, 386], "io_tensor": 6, "optional_output_tensor": [6, 178, 210], "vector": [6, 248, 367, 368], "vector_of_tensor": 6, "tupl": [6, 68, 241, 347, 368], "tuple_of_tensor": 6, "vector_of_optional_tensor": 6, "some_crazy_tuple_of_tensor": 6, "return": [6, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 384, 385, 386, 387, 388], "spec": [6, 68, 367, 368], "singl": [6, 346, 363, 371, 372, 373, 382], "tensorspec": [6, 368], "spec_return_value_t": 6, "tensor_return_value_t": 6, "note": [6, 63, 152, 210, 237, 238, 259, 278, 365, 367, 368, 370, 372, 373, 382, 384, 388, 389], "should": [6, 120, 127, 132, 150, 156, 173, 210, 213, 234, 241, 249, 266, 324, 338, 364, 367, 371, 372, 382, 383, 384, 385, 387], "same": [6, 16, 18, 20, 22, 36, 43, 44, 46, 47, 48, 74, 76, 83, 85, 86, 87, 106, 108, 113, 123, 124, 125, 126, 134, 135, 146, 150, 156, 166, 167, 169, 170, 173, 178, 190, 191, 194, 195, 198, 199, 200, 201, 205, 206, 208, 210, 214, 218, 220, 221, 227, 228, 229, 232, 234, 238, 240, 248, 249, 286, 288, 316, 320, 322, 338, 341, 345, 357, 359, 362, 368, 372, 373, 382, 384], "pattern": [6, 60, 220, 371], "e": [6, 210, 368, 372, 373, 389], "singlecor": 6, "share": [6, 367, 373], "override_runtime_argu": 6, "shared_variables_t": 6, "tt_metal": [6, 355, 368, 370, 372, 386], "kernelhandl": 6, "unary_reader_kernel_id": [6, 368], "unary_writer_kernel_id": [6, 368], "cached_program_t": 6, "cachedprogram": 6, "static": 6, "operation_attribut": 6, "tensor_arg": 6, "tensor_return_valu": 6, "void": [6, 368], "cached_program": 6, "multicor": [6, 335, 336, 353, 354], "size_t": 6, "num_cor": 6, "num_cores_i": 6, "program_factory_t": 6, "mandatori": [6, 368], "select": [6, 41, 367, 371], "arg": [6, 109, 243, 264, 265, 326, 337, 367, 389], "select_program_factori": 6, "valid": [6, 24, 99, 108, 109, 210, 220, 221, 263, 363, 364, 367, 368, 372, 373, 386], "usual": 6, "validate_on_program_cache_miss": 6, "reus": 6, "less": [6, 169, 170, 205, 206, 368, 370, 372, 389], "validate_on_program_cache_hit": 6, "compute_output_spec": [6, 368], "create_output_tensor": [6, 368], "map": [6, 29, 382, 383, 384, 385, 386, 387], "abl": 6, "prim": 6, "after": [6, 241, 264, 365, 371, 372, 382, 389], "keep": [6, 252, 363, 373], "mind": [6, 384], "overload": [6, 326, 337, 367, 382], "queue_id": [6, 10, 12, 16, 17, 19, 28, 30, 34, 35, 41, 43, 44, 45, 46, 47, 48, 50, 60, 61, 64, 74, 75, 80, 82, 83, 86, 88, 89, 91, 93, 95, 96, 98, 100, 101, 104, 106, 107, 108, 109, 111, 122, 123, 125, 128, 129, 130, 134, 136, 145, 148, 150, 153, 157, 158, 159, 160, 161, 164, 167, 169, 171, 175, 180, 181, 185, 188, 190, 191, 194, 196, 198, 200, 205, 207, 213, 219, 223, 224, 227, 228, 230, 231, 233, 234, 238, 241, 243, 249, 250, 256, 261, 267, 268, 271, 272, 278, 280, 284, 285, 286, 287, 292, 293, 295, 297, 298, 299, 300, 304, 306, 312, 313, 314, 316, 319, 321, 322, 327, 329, 330, 335, 336, 341, 345, 346, 350, 352, 353, 354, 357, 358, 362], "automat": [6, 209, 338, 364, 365, 368, 372, 373, 382, 383], "primit": 6, "so": [6, 109, 363, 365, 367, 368, 382, 388], "case": [6, 74, 121, 156, 210, 232, 251, 338, 363, 364, 368, 373, 382, 389], "custom": [6, 264, 265, 384], "hash": [6, 220, 221, 372], "stl": 6, "hash_t": 6, "compute_program_hash": 6, "create_op_performance_model": 6, "opperformancemodel": 6, "make": [6, 220, 221, 306, 341, 347, 363, 373, 386, 389], "avail": [6, 202, 355, 365, 367, 374, 375, 378, 379, 389], "constexpr": 6, "some_condition_based_on_operation_attributes_and_or_tensor_arg": 6, "true": [6, 11, 13, 15, 17, 19, 21, 23, 31, 33, 34, 37, 38, 40, 41, 42, 51, 53, 55, 57, 61, 65, 67, 68, 69, 71, 73, 74, 75, 81, 83, 89, 90, 91, 92, 94, 95, 97, 98, 101, 103, 105, 107, 110, 112, 115, 119, 120, 128, 129, 133, 138, 140, 142, 144, 147, 149, 168, 172, 174, 177, 182, 184, 186, 187, 189, 192, 193, 203, 204, 212, 217, 224, 226, 231, 250, 253, 255, 257, 262, 269, 270, 274, 276, 281, 284, 285, 287, 290, 294, 296, 299, 301, 303, 307, 309, 311, 313, 315, 317, 319, 321, 328, 330, 332, 334, 335, 336, 341, 345, 346, 347, 351, 353, 354, 358, 360, 363, 367, 368, 382, 383, 384, 385, 386, 387, 388, 389], "get_logical_shap": 6, "tensorlayout": 6, "pageconfig": 6, "output_spec": 6, "create_device_tensor": 6, "42": [6, 383, 386, 388], "single_core_program_factori": 6, "work_split": 6, "output_tensor": [6, 10, 12, 16, 28, 30, 35, 43, 44, 45, 46, 47, 48, 50, 60, 64, 74, 80, 82, 83, 86, 88, 89, 91, 93, 95, 96, 98, 100, 104, 106, 107, 111, 117, 122, 123, 125, 128, 129, 130, 134, 136, 145, 148, 150, 157, 158, 159, 160, 161, 164, 167, 169, 171, 175, 180, 181, 185, 188, 190, 191, 194, 196, 198, 200, 205, 207, 219, 223, 227, 228, 230, 231, 233, 238, 249, 250, 256, 261, 267, 268, 271, 272, 280, 284, 285, 286, 292, 293, 295, 297, 298, 299, 300, 306, 312, 313, 314, 316, 322, 327, 329, 330, 341, 350, 352, 357, 358, 362, 368, 382, 387, 389], "src_buffer": 6, "dst_buffer": 6, "dataformat": 6, "cb_data_format": 6, "datatype_to_dataformat_convert": 6, "uint32_t": [6, 100], "single_tile_s": 6, "tiles": 6, "cb_data_format_output": 6, "single_tile_size_output": 6, "num_til": 6, "volum": 6, "constant": [6, 368, 373], "tile_hw": 6, "idevic": [6, 8, 9, 116, 117, 239, 326, 337, 367], "corecoord": [6, 368], "compute_with_storage_grid_s": 6, "num_cores_x": [6, 363, 384], "x": [6, 36, 178, 210, 244, 345, 346, 367, 368, 370, 372, 373, 383, 384, 387, 388], "y": [6, 36, 244, 367, 368, 372, 373, 383, 384, 388], "all_cor": 6, "core_group_1": 6, "core_group_2": 6, "num_tiles_per_core_group_1": 6, "num_tiles_per_core_group_2": 6, "split_work_to_cor": 6, "src0_cb_index": 6, "cbindex": 6, "c_0": 6, "num_input_til": 6, "circularbufferconfig": 6, "cb_src0_config": 6, "set_page_s": 6, "cb_src0": 6, "createcircularbuff": 6, "output_cb_index": 6, "c_2": 6, "num_output_til": 6, "cb_output_config": 6, "cb_output": 6, "src_is_dram": 6, "buffer_typ": [6, 367, 368], "buffertyp": [6, 367, 368], "dram": [6, 339, 367, 368, 373, 382], "reader_compile_time_arg": 6, "dst_is_dram": 6, "writer_compile_time_arg": 6, "createkernel": 6, "eltwis": [6, 114, 251, 273, 368], "kernel": [6, 58, 101, 178, 210, 213, 305, 368, 370, 372, 383], "dataflow": 6, "reader_unary_interleaved_start_id": 6, "readerdatamovementconfig": 6, "writer_unary_interleaved_start_id": 6, "writerdatamovementconfig": 6, "compute_kernel_args_group_1": 6, "per_core_block_cnt": 6, "per_core_block_s": 6, "math_approx_mod": 6, "fals": [6, 29, 41, 68, 69, 74, 89, 91, 95, 103, 120, 128, 156, 178, 210, 213, 252, 284, 329, 341, 342, 343, 352, 363, 368, 382, 383, 384, 385, 386, 387, 388, 389], "eltwise_unary_kernel_group_1_id": 6, "eltwise_sfpu": 6, "computeconfig": 6, "math_fidel": [6, 387], "mathfidel": [6, 387], "hifi4": [6, 372, 386], "compile_arg": 6, "rang": [6, 27, 44, 45, 47, 66, 108, 109, 124, 149, 166, 168, 183, 219, 225, 246, 280, 282, 302, 327, 328, 329, 367, 368, 373], "compute_kernel_args_group_2": 6, "eltwise_unary_kernel_group_2_id": 6, "num_tiles_written": 6, "num_tiles_per_cor": 6, "tt_assert": 6, "setruntimearg": 6, "address": [6, 368], "move": [6, 116, 117, 364, 365, 367, 368, 382, 384, 385, 386], "shared_vari": 6, "runtime_arg": [6, 368], "getruntimearg": [6, 368], "multi_core_program_factori": 6, "sequenc": [6, 345, 346], "compositeexampleoper": 6, "composite_exampl": 6, "another_copi": 6, "_pybind": 6, "example_pybind": 6, "pybind11": 6, "h": [6, 41, 78, 108, 109, 213, 355, 368, 373], "bind_example_oper": 6, "r": [6, 244, 370, 386], "pybind": 6, "expos": 6, "logic": [6, 194, 195, 198, 199, 201, 210, 220, 221], "self": [6, 363, 367, 368, 373, 387], "correct": 6, "specif": [6, 28, 103, 210, 346, 364, 368, 373, 374, 386], "pybind_overload_t": 6, "decltyp": 6, "examples_pybind": 6, "py_modul": 6, "final": [6, 210, 241, 363, 364, 365, 371, 382], "wherev": 6, "want": [6, 365, 370, 383, 385, 389], "its": [6, 58, 85, 241, 304, 363, 364, 367, 368, 371, 372, 373, 389], "import": [6, 103, 213, 363, 364, 365, 370, 372, 382, 383, 384, 385, 386, 387, 388, 389], "signatur": 6, "And": [6, 363, 367, 368, 373, 382, 383], "ignor": [6, 253], "kwarg": [6, 264, 265, 326, 337, 367, 389], "def": [6, 363, 384, 385, 386, 387, 388, 389], "golden_funct": 6, "befor": [6, 29, 241, 265, 306, 364, 368, 373], "postprocess": 6, "manual": [6, 363, 389], "pack": [6, 353, 354], "preprocess_golden_function_input": 6, "ttnn_input_tensor": 6, "postprocess_golden_function_output": 6, "torch_output_tensor": [6, 389], "dtype": [6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 348, 349, 350, 351, 352, 356, 357, 358, 359, 360, 361, 362, 363, 367, 368, 373, 382, 383, 384, 385, 387, 389], "becaus": [6, 373, 382, 383, 384], "wa": [6, 364, 372, 373, 382, 388], "_ttnn": [8, 9, 82, 116, 117, 239, 326, 337, 367, 368, 373], "default": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 367, 368, 372, 383, 389], "plan": [8, 9, 116, 117, 242], "deprec": [8, 9, 116, 117, 242, 385], "futur": [8, 9, 116, 117, 242], "arg0": [9, 367, 373], "none": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 367, 368, 382, 383, 384, 385, 386, 387], "device_id": [9, 59, 69, 82, 83, 209, 239, 260, 326, 337, 338, 339, 367, 382, 383, 384, 385, 387, 389], "complextensor": [10, 11, 17, 25, 26, 62, 63, 74, 75, 151, 152, 154, 155, 224, 244, 245, 258, 259, 261, 262, 319], "memory_config": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 368, 383, 384, 387, 389], "appli": [10, 12, 16, 30, 35, 41, 45, 50, 58, 64, 80, 86, 88, 89, 91, 93, 95, 96, 100, 101, 102, 104, 106, 111, 125, 127, 128, 130, 131, 132, 134, 136, 145, 148, 157, 158, 159, 160, 161, 167, 169, 171, 175, 178, 180, 181, 185, 188, 190, 191, 194, 196, 198, 200, 205, 207, 210, 213, 219, 227, 228, 230, 233, 241, 261, 266, 267, 268, 271, 272, 280, 284, 286, 292, 293, 295, 297, 298, 300, 306, 312, 314, 316, 322, 324, 327, 329, 350, 352, 364, 368], "element": [10, 12, 28, 30, 35, 45, 50, 60, 64, 80, 88, 89, 91, 93, 95, 96, 100, 103, 104, 106, 111, 127, 128, 130, 131, 132, 136, 145, 148, 157, 158, 159, 160, 161, 171, 175, 180, 181, 185, 188, 196, 207, 219, 230, 233, 234, 241, 248, 249, 256, 261, 266, 267, 268, 271, 272, 277, 280, 284, 292, 293, 295, 297, 298, 300, 306, 312, 314, 324, 327, 329, 341, 350, 352, 354, 368, 373, 382], "wise": [10, 12, 30, 35, 45, 50, 64, 80, 88, 89, 91, 93, 95, 96, 100, 104, 106, 111, 127, 128, 130, 132, 136, 145, 148, 157, 158, 159, 160, 161, 171, 175, 180, 181, 185, 188, 196, 207, 219, 230, 233, 249, 256, 261, 266, 267, 268, 271, 272, 280, 284, 292, 293, 295, 297, 298, 300, 306, 312, 314, 324, 327, 329, 350, 352, 368], "mathrm": [10, 12, 16, 18, 30, 35, 36, 43, 44, 45, 46, 47, 48, 50, 64, 74, 76, 80, 86, 87, 88, 89, 91, 93, 95, 96, 100, 104, 106, 111, 113, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 145, 146, 148, 150, 156, 157, 158, 159, 160, 161, 166, 167, 169, 170, 171, 173, 175, 180, 181, 185, 188, 190, 191, 194, 195, 196, 198, 199, 200, 201, 205, 206, 207, 214, 218, 219, 227, 228, 229, 230, 232, 233, 240, 248, 249, 251, 252, 261, 266, 267, 268, 271, 272, 280, 284, 286, 288, 292, 293, 295, 297, 298, 300, 306, 312, 314, 316, 320, 322, 324, 327, 329, 350, 352, 359, 368], "_tensor": [10, 12, 16, 18, 30, 35, 36, 43, 44, 45, 46, 47, 48, 50, 64, 74, 76, 80, 86, 87, 88, 89, 91, 93, 95, 96, 100, 104, 106, 111, 113, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 145, 146, 148, 150, 156, 157, 158, 159, 160, 161, 166, 167, 169, 170, 171, 173, 175, 180, 181, 185, 188, 190, 191, 194, 195, 196, 198, 199, 200, 201, 205, 206, 207, 214, 218, 219, 227, 228, 229, 230, 232, 233, 240, 248, 249, 251, 252, 261, 266, 267, 268, 271, 272, 280, 284, 286, 288, 292, 293, 295, 297, 298, 300, 306, 312, 314, 316, 320, 322, 324, 327, 329, 350, 352, 359], "_i": [10, 12, 16, 30, 35, 36, 43, 44, 45, 46, 47, 48, 50, 64, 74, 80, 86, 88, 89, 91, 93, 95, 96, 100, 104, 106, 111, 124, 125, 127, 128, 130, 131, 132, 134, 136, 145, 146, 148, 150, 157, 158, 159, 160, 161, 166, 169, 171, 175, 180, 181, 185, 188, 194, 195, 196, 198, 199, 200, 201, 205, 207, 219, 227, 228, 230, 232, 233, 248, 249, 252, 261, 266, 267, 268, 271, 272, 280, 284, 286, 288, 292, 293, 295, 297, 298, 300, 306, 312, 314, 322, 324, 327, 329, 350, 352, 359], "verb": [10, 12, 30, 35, 43, 44, 45, 46, 47, 48, 50, 64, 76, 80, 93, 96, 100, 104, 106, 111, 113, 124, 127, 132, 145, 148, 150, 157, 158, 159, 160, 161, 166, 167, 171, 173, 180, 181, 185, 188, 190, 191, 214, 218, 219, 230, 251, 261, 266, 267, 268, 271, 272, 280, 288, 292, 293, 295, 297, 298, 300, 312, 314, 316, 324, 327, 352], "keyword": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360], "prealloc": [10, 12, 16, 17, 19, 28, 30, 34, 35, 41, 43, 44, 45, 46, 47, 48, 50, 60, 61, 64, 74, 75, 80, 82, 83, 86, 88, 89, 91, 93, 95, 96, 98, 100, 101, 103, 104, 106, 107, 111, 122, 123, 125, 128, 129, 130, 134, 136, 145, 148, 150, 157, 158, 159, 160, 161, 164, 167, 169, 171, 175, 180, 181, 185, 188, 190, 191, 194, 196, 198, 200, 205, 207, 219, 223, 224, 227, 228, 230, 231, 233, 238, 249, 250, 256, 261, 267, 268, 271, 272, 280, 284, 285, 286, 287, 292, 293, 295, 297, 298, 299, 300, 306, 312, 313, 314, 316, 319, 321, 322, 327, 329, 330, 341, 350, 352, 357, 358, 362], "queue": [10, 12, 16, 17, 19, 28, 30, 34, 35, 41, 43, 44, 45, 46, 47, 48, 50, 60, 61, 64, 74, 75, 80, 82, 83, 86, 88, 89, 91, 93, 95, 96, 98, 100, 101, 104, 106, 107, 108, 109, 111, 120, 121, 122, 123, 125, 128, 129, 130, 134, 136, 145, 148, 150, 153, 157, 158, 159, 160, 161, 164, 167, 169, 171, 175, 180, 181, 185, 188, 190, 191, 194, 196, 198, 200, 205, 207, 213, 219, 223, 224, 227, 228, 230, 231, 233, 234, 238, 241, 243, 249, 250, 256, 261, 267, 268, 271, 272, 278, 280, 284, 285, 286, 287, 292, 293, 295, 297, 298, 299, 300, 306, 312, 313, 314, 316, 319, 321, 322, 326, 327, 329, 330, 335, 336, 337, 340, 341, 345, 346, 350, 352, 353, 354, 357, 358, 362], "id": [10, 12, 16, 17, 19, 28, 30, 34, 35, 41, 43, 44, 45, 46, 47, 48, 50, 60, 61, 64, 74, 75, 80, 82, 83, 86, 88, 89, 91, 93, 95, 96, 98, 100, 101, 104, 106, 107, 108, 109, 111, 120, 121, 122, 123, 125, 128, 129, 130, 134, 136, 145, 148, 150, 153, 157, 158, 159, 160, 161, 164, 167, 169, 171, 175, 180, 181, 185, 188, 190, 191, 194, 196, 198, 200, 205, 207, 209, 213, 219, 223, 224, 227, 228, 230, 231, 233, 234, 238, 239, 241, 243, 249, 250, 256, 261, 267, 268, 271, 272, 278, 280, 284, 285, 286, 287, 292, 293, 295, 297, 298, 299, 300, 306, 312, 313, 314, 316, 319, 321, 322, 326, 327, 329, 330, 335, 336, 337, 340, 341, 345, 346, 350, 352, 353, 354, 357, 358, 362, 367, 372], "bfloat16": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 372, 373, 382, 383, 384, 386, 387, 389], "tile": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 214, 217, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 345, 346, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 367, 368, 372, 373, 382, 383, 386], "grad_tensor": [11, 13, 15, 17, 19, 21, 23, 26, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 61, 63, 65, 67, 71, 73, 75, 77, 81, 83, 90, 92, 94, 97, 98, 101, 105, 107, 110, 112, 115, 119, 129, 138, 140, 142, 144, 147, 149, 152, 168, 172, 174, 177, 182, 184, 186, 187, 189, 192, 193, 203, 204, 212, 217, 224, 226, 231, 245, 247, 250, 253, 255, 257, 259, 262, 269, 270, 274, 276, 281, 283, 285, 287, 290, 294, 296, 299, 301, 303, 307, 309, 311, 313, 315, 317, 319, 321, 328, 330, 332, 334, 351, 358, 360], "list": [11, 13, 15, 16, 17, 19, 21, 23, 26, 28, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 60, 61, 63, 65, 67, 68, 71, 73, 75, 77, 78, 81, 82, 84, 86, 90, 92, 94, 97, 98, 105, 107, 110, 112, 115, 117, 119, 125, 129, 134, 138, 140, 142, 144, 147, 149, 152, 167, 168, 169, 172, 174, 177, 178, 182, 184, 186, 187, 189, 190, 191, 192, 193, 194, 198, 200, 203, 204, 205, 210, 212, 213, 217, 224, 226, 227, 228, 231, 234, 241, 242, 243, 245, 247, 250, 251, 252, 253, 255, 257, 259, 262, 269, 270, 274, 276, 281, 283, 285, 286, 287, 290, 294, 296, 299, 301, 303, 304, 307, 309, 311, 313, 315, 316, 317, 319, 321, 322, 326, 328, 330, 332, 334, 341, 346, 351, 352, 353, 354, 358, 360, 367, 368], "backward": [11, 13, 15, 17, 19, 21, 23, 26, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 61, 63, 65, 67, 71, 73, 75, 77, 81, 83, 90, 92, 94, 97, 98, 101, 105, 107, 110, 112, 115, 119, 129, 138, 140, 142, 144, 147, 149, 152, 168, 172, 174, 177, 182, 184, 186, 187, 189, 192, 193, 203, 204, 212, 217, 224, 226, 231, 245, 247, 250, 253, 255, 257, 259, 262, 269, 270, 274, 276, 281, 283, 285, 287, 290, 294, 296, 299, 301, 303, 307, 309, 311, 313, 315, 317, 319, 321, 328, 330, 332, 334, 351, 358, 360, 368], "given": [11, 13, 15, 17, 19, 21, 23, 26, 28, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 61, 63, 65, 67, 71, 73, 75, 77, 78, 81, 85, 90, 92, 94, 97, 98, 105, 107, 110, 112, 115, 119, 129, 138, 140, 142, 144, 147, 149, 152, 168, 172, 174, 177, 182, 184, 186, 187, 189, 192, 193, 203, 204, 212, 217, 220, 221, 224, 226, 231, 239, 242, 245, 247, 250, 253, 255, 257, 259, 262, 269, 270, 274, 276, 277, 281, 283, 285, 287, 290, 294, 296, 299, 301, 303, 307, 309, 311, 313, 315, 317, 319, 321, 328, 330, 332, 334, 341, 346, 351, 355, 358, 360, 363, 367, 368, 372, 382], "gradient": [11, 13, 15, 17, 19, 21, 23, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 61, 65, 67, 71, 73, 75, 77, 81, 83, 90, 92, 94, 97, 98, 101, 105, 107, 110, 112, 115, 119, 129, 138, 140, 142, 144, 147, 149, 168, 172, 174, 177, 182, 184, 186, 187, 189, 192, 193, 203, 204, 212, 217, 224, 226, 231, 247, 250, 253, 255, 257, 262, 269, 270, 274, 276, 281, 283, 285, 287, 290, 294, 296, 299, 301, 303, 307, 309, 311, 313, 315, 317, 319, 321, 328, 330, 332, 334, 351, 358, 360], "about": [11, 21, 42, 115, 129, 182, 184, 186, 187, 189, 192, 193, 203, 204, 250, 253, 261, 262, 274, 307, 313, 360, 373, 383], "requires_grad": [11, 13, 15, 17, 19, 21, 23, 31, 33, 34, 37, 38, 40, 42, 51, 53, 55, 57, 61, 65, 67, 71, 73, 75, 81, 83, 90, 92, 94, 97, 98, 101, 105, 107, 110, 112, 115, 119, 129, 138, 140, 142, 144, 147, 149, 168, 172, 174, 177, 182, 184, 186, 187, 189, 192, 193, 203, 204, 212, 217, 224, 226, 231, 250, 253, 255, 257, 262, 269, 270, 274, 276, 281, 285, 287, 290, 294, 296, 299, 301, 303, 307, 309, 311, 313, 315, 317, 319, 321, 328, 330, 332, 334, 351, 358, 360], "rand": [12, 14, 30, 32, 35, 39, 41, 49, 50, 61, 64, 66, 70, 82, 88, 93, 96, 104, 111, 118, 127, 130, 132, 136, 148, 157, 158, 159, 160, 161, 175, 176, 180, 181, 183, 185, 188, 196, 197, 207, 219, 230, 233, 235, 236, 240, 251, 253, 254, 266, 267, 268, 276, 277, 288, 292, 295, 297, 298, 300, 302, 310, 312, 314, 324, 325, 327, 331, 348, 349, 382, 385, 387, 389], "input_tensor_a": [13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 33, 34, 36, 37, 38, 40, 42, 43, 44, 46, 47, 48, 51, 53, 61, 65, 67, 71, 73, 74, 75, 76, 81, 86, 87, 90, 92, 94, 97, 105, 110, 112, 113, 114, 115, 119, 124, 125, 126, 134, 135, 138, 140, 142, 146, 147, 149, 153, 156, 166, 167, 168, 169, 170, 172, 174, 177, 178, 182, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 203, 204, 205, 206, 208, 210, 212, 213, 214, 217, 218, 224, 226, 227, 228, 229, 232, 240, 248, 250, 251, 255, 257, 262, 269, 270, 273, 274, 281, 286, 287, 288, 290, 294, 296, 301, 303, 309, 311, 315, 316, 317, 319, 320, 321, 322, 328, 332, 351, 357, 358, 359, 360, 382, 389], "invers": [13, 15, 31, 33, 38, 40], "cosin": [13, 15, 65, 67, 102], "hyperbol": [15, 33, 40, 67, 303, 330], "input_tensor_b": [16, 17, 18, 19, 20, 21, 22, 23, 34, 36, 37, 42, 43, 44, 46, 47, 48, 61, 74, 75, 76, 86, 87, 113, 114, 115, 124, 125, 126, 134, 135, 146, 147, 153, 156, 166, 167, 168, 169, 170, 174, 178, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 205, 206, 208, 210, 212, 214, 217, 218, 224, 227, 228, 229, 232, 240, 251, 273, 274, 286, 287, 288, 316, 317, 319, 320, 321, 322, 357, 358, 359, 360, 382, 389], "number": [16, 17, 20, 22, 24, 42, 60, 74, 75, 76, 86, 87, 99, 108, 109, 113, 114, 115, 125, 126, 134, 135, 167, 169, 170, 174, 190, 191, 194, 198, 200, 205, 206, 208, 210, 211, 213, 214, 215, 216, 218, 224, 227, 228, 229, 234, 241, 243, 250, 251, 263, 273, 274, 275, 277, 278, 286, 316, 318, 319, 322, 323, 336, 341, 342, 343, 356, 357, 367, 368, 371, 372, 373, 384, 388], "datatyp": [16, 27, 29, 78, 82, 83, 84, 85, 86, 121, 122, 123, 125, 131, 133, 134, 167, 169, 178, 190, 191, 194, 198, 200, 205, 210, 227, 228, 237, 238, 286, 316, 322, 338, 339, 361, 362, 365, 367, 368, 382, 383, 387], "str": [16, 29, 34, 75, 79, 86, 101, 125, 134, 167, 169, 178, 179, 190, 191, 194, 198, 200, 205, 210, 220, 221, 227, 228, 286, 291, 316, 322, 367, 368, 388], "_a": [16, 18, 36, 43, 44, 46, 47, 48, 74, 76, 86, 87, 113, 124, 125, 126, 134, 135, 146, 156, 166, 167, 169, 170, 190, 191, 194, 195, 198, 199, 200, 201, 205, 206, 214, 218, 227, 228, 229, 232, 240, 251, 286, 288, 316, 320, 322, 359], "_b": [16, 18, 36, 43, 44, 46, 47, 48, 74, 76, 86, 87, 113, 124, 125, 126, 134, 135, 146, 156, 166, 167, 169, 170, 190, 191, 194, 195, 198, 199, 200, 201, 205, 206, 214, 218, 227, 228, 229, 232, 240, 251, 286, 288, 316, 320, 322, 359], "broadcast": [16, 17, 75, 86, 125, 134, 167, 169, 178, 190, 191, 194, 198, 200, 205, 210, 227, 228, 277, 316, 319, 322, 345, 389], "int32": [16, 43, 44, 45, 46, 47, 48, 124, 166, 385], "tensor1": [16, 17, 18, 19, 20, 21, 22, 23, 34, 36, 37, 42, 43, 44, 46, 47, 48, 60, 61, 74, 75, 76, 86, 87, 113, 114, 115, 124, 125, 126, 134, 135, 146, 147, 153, 156, 166, 167, 168, 169, 170, 173, 174, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 205, 206, 208, 210, 212, 214, 217, 218, 224, 227, 228, 229, 232, 240, 251, 273, 274, 286, 287, 288, 316, 317, 319, 320, 321, 322, 357, 358, 359, 360], "tensor2": [16, 17, 18, 19, 20, 21, 22, 23, 34, 36, 37, 42, 43, 44, 46, 47, 48, 60, 61, 74, 75, 76, 86, 87, 113, 114, 115, 124, 125, 126, 134, 135, 146, 147, 153, 156, 166, 167, 168, 169, 170, 173, 174, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 205, 206, 208, 210, 212, 214, 217, 218, 224, 227, 228, 229, 232, 240, 251, 273, 274, 286, 287, 288, 316, 317, 319, 320, 321, 322, 357, 358, 359, 360], "scalar": [16, 17, 20, 22, 43, 44, 46, 47, 48, 74, 75, 76, 77, 86, 87, 113, 114, 115, 122, 123, 125, 126, 134, 135, 167, 169, 170, 173, 174, 190, 191, 194, 198, 200, 205, 206, 208, 214, 218, 224, 227, 228, 229, 247, 251, 256, 257, 273, 274, 286, 316, 319, 322, 365, 368, 389], "are_required_output": [17, 19, 34, 61, 75, 224, 287, 319, 321, 358], "input_grad": [17, 19, 34, 61, 75, 101, 224, 287, 319, 321], "other_grad": [17, 19, 34, 61, 75, 224, 287, 319, 321], "bfloat4_b": [17, 19, 20, 22, 37, 42, 61, 75, 121, 147, 168, 173, 174, 192, 193, 208, 212, 217, 224, 287, 317, 319, 321, 340, 357, 360, 367], "alpha": [18, 19, 21, 23, 52, 53, 75, 80, 81, 289, 320, 321], "float": [18, 19, 20, 21, 22, 23, 41, 52, 53, 54, 55, 56, 57, 77, 80, 81, 100, 106, 109, 116, 121, 122, 123, 133, 137, 138, 139, 141, 143, 144, 145, 156, 165, 171, 172, 173, 202, 204, 243, 247, 248, 249, 251, 256, 257, 271, 272, 279, 282, 283, 289, 306, 307, 308, 309, 320, 321, 333, 334, 345, 346, 348, 349, 365, 367, 368, 373], "input_tensor_c": [20, 21, 22, 23, 174, 208, 357, 358], "tensor3": [20, 21, 22, 23, 173, 174, 208, 357, 358], "cluster_axi": [24, 263], "mesh_devic": [24, 99, 263, 367], "meshdevic": [24, 84, 85, 122, 123, 237, 238, 263, 326, 337, 338, 361, 362, 367], "num_link": [24, 99, 263], "num_work": [24, 99, 263], "num_buffers_per_channel": [24, 99, 263], "ring": [24, 99, 263], "gather": [24, 99], "across": [24, 99, 131, 263, 367, 372, 373], "dimens": [24, 28, 58, 60, 61, 103, 122, 127, 131, 132, 153, 210, 211, 215, 216, 237, 243, 251, 252, 253, 263, 266, 275, 277, 278, 304, 305, 318, 323, 324, 338, 340, 341, 344, 345, 346, 347, 356, 361, 365, 367, 368, 373], "meshtensor": [24, 263], "axi": [24, 263, 277, 368], "correspond": [24, 82, 83, 263, 346, 367, 368], "line": [24, 263, 386], "mesh": [24, 121, 263, 338, 340, 370], "applic": [24, 79, 263, 373], "guid": [24, 263, 369, 370], "blob": [24, 263, 388], "main": [24, 263, 370, 371, 374, 386, 388, 389], "tech_report": [24, 263], "20mesh": [24, 263], "20of": [24, 263], "20devic": [24, 263], "20with": [24, 263], "20tt": [24, 263], "link": [24, 99, 263], "worker": [24, 99, 239, 263, 338, 367, 384, 385], "per": [24, 99, 263, 368, 386], "full_tensor": [24, 99, 263], "randn": [24, 29, 69, 83, 85, 99, 120, 121, 131, 178, 210, 213, 238, 260, 263, 337, 338, 339, 340, 352, 362, 365, 367, 383, 384, 388], "32": [24, 58, 60, 61, 69, 109, 120, 122, 127, 131, 132, 178, 210, 234, 235, 236, 237, 240, 243, 251, 253, 260, 266, 276, 277, 288, 304, 305, 324, 337, 338, 339, 352, 361, 365, 367, 368, 373, 382, 383, 385, 386, 387, 389], "256": [24, 99, 213, 263, 387, 388], "physical_device_id": [24, 99, 263, 382, 383, 384, 385, 386, 387], "get_t3k_physical_device_ids_r": [24, 99, 263], "open_mesh_devic": [24, 99, 263], "meshshap": [24, 99, 263], "ttnn_tensor": [24, 340, 382], "input_dtyp": [24, 99, 263], "mem_config": [24, 99, 263, 367], "mesh_mapp": [24, 29, 121], "shardtensor2dmesh": 24, "mesh_shap": 24, "end": [27, 74, 156, 173, 232, 304, 354, 364, 367, 368, 372, 384, 386], "dram_memory_config": [27, 58, 84, 85, 178, 210, 373], "inclus": [27, 367, 373], "exclus": [27, 241], "consecut": [27, 373], "evenli": 27, "space": [27, 368, 373], "within": [27, 44, 47, 213, 364, 367, 368, 373, 374], "float32": [27, 41, 84, 85, 106, 124, 150, 166, 249, 361, 362, 363, 367, 372, 373, 382, 387, 389], "print": [27, 29, 60, 84, 85, 121, 122, 123, 178, 209, 210, 237, 238, 239, 243, 275, 277, 291, 304, 305, 338, 340, 361, 362, 365, 367, 368, 372, 373, 382, 383, 384, 386, 388, 389], "00000": [27, 382], "row_major": [27, 28, 68, 84, 85, 121, 122, 123, 235, 236, 237, 335, 336, 353, 354, 361, 362, 365, 367, 368, 372, 382, 383, 387], "indic": [28, 82, 83, 103, 234, 304, 354, 367, 368], "currenli": 28, "must": [28, 41, 83, 226, 250, 256, 278, 304, 335, 336, 341, 353, 354, 365, 367, 368, 370, 373], "uint32": [28, 82, 83, 150, 153, 367, 372, 373, 382], "reduc": [28, 263, 341, 368], "cache_file_nam": 29, "pathlib": [29, 79, 179], "path": [29, 79, 179, 372, 386, 388, 389], "callabl": [29, 220, 221], "tensortomesh": [29, 121], "use_device_til": 29, "serial": 29, "flag": [29, 368, 386], "toggl": 29, "whether": [29, 120, 178, 210, 213, 220, 221, 335, 336, 341, 346, 347, 353, 354, 368], "truncat": [29, 351, 368], "mantissa": 29, "bit": [29, 368], "bfp": [29, 373], "format": [29, 36, 116, 117, 121, 213, 261, 371, 373], "rais": [29, 340, 387], "runtim": 29, "error": [29, 164, 209, 210, 223, 340, 364, 370], "rte": 29, "bfp8": [29, 382], "bfp4": 29, "375": [29, 121, 385], "30469": [29, 121], "714844": [29, 121], "761719": [29, 121], "53125": [29, 121], "652344": [29, 121], "sine": [31, 33, 102, 303], "round_mod": [34, 74, 75, 256, 257], "assign": [34, 365], "other_tensor": [34, 75], "mode": [34, 41, 42, 75, 89, 91, 95, 120, 128, 129, 164, 213, 223, 257, 284, 368, 382, 383, 384, 385, 386, 387], "arctan": 36, "left": [36, 74, 124, 166, 288, 367, 368, 371], "right": [36, 74, 124, 166, 288, 367, 368], "tangenr": 38, "tangent": [40, 330], "ep": [41, 202, 204, 368], "1e": [41, 133, 156, 165, 279, 368], "momentum": [41, 368], "running_mean": [41, 368], "running_var": [41, 368], "bia": [41, 42, 133, 165, 178, 279, 363, 368, 384, 387], "spatial": [41, 78, 131, 355, 368], "over": [41, 131, 133, 165, 279, 305, 345, 346, 368], "interleav": [41, 60, 339, 347, 367, 368, 373], "w": [41, 78, 108, 109, 213, 355, 367, 368, 372], "epsilon": [41, 133, 165, 279, 368], "place": [41, 87, 126, 135, 162, 163, 170, 206, 213, 229, 280, 343, 367, 373], "varianc": [41, 368, 373], "gamma": [41, 226, 368], "beta": [41, 306, 307, 368], "evalu": [41, 386], "approxim": [42, 89, 91, 95, 101, 128, 129, 284], "bias_gelu": 42, "integ": [43, 44, 46, 47, 48, 241, 346, 368], "ha": [44, 47, 210, 220, 221, 326, 347, 363, 364, 365, 367, 368, 370, 372, 373, 382, 388, 389], "shift_bit": [44, 47], "31": [44, 47, 365, 367, 370, 386, 388], "2147483647": 45, "wormhole_b0": [45, 50, 106, 111, 202, 219, 256, 370], "major": [51, 107, 109, 110, 112, 119, 234, 281, 296, 351, 367, 373, 382, 383], "formula": [53, 81, 114, 138, 172, 173, 204, 273, 307, 309], "min_tensor": [54, 56], "max_tensor": [54, 56], "doe": [58, 121, 340, 364, 368, 372], "alter": 58, "width": [58, 68, 108, 109, 122, 131, 210, 213, 237, 338, 344, 361, 368, 372], "height": [58, 60, 68, 108, 109, 122, 131, 210, 213, 237, 338, 361, 368, 372, 373], "current": [58, 60, 68, 220, 221, 346, 368, 370, 373, 374, 382, 389], "adjust": [58, 306], "necessari": [58, 364], "param": [58, 78, 253, 305, 368, 388], "target": [58, 116, 117, 337, 364, 367, 368], "l1_memory_config": [58, 363, 373, 383, 384, 389], "compute_kernel_config": [58, 102, 165, 178, 210, 279, 305, 345, 346], "remov": [59, 340, 354, 367, 382, 385, 386, 388], "success": 59, "group": [60, 368, 373, 387], "concaten": [60, 61, 344, 347, 368], "greater": [60, 72, 108, 109, 125, 126, 134, 135, 176, 226, 368, 389], "than": [60, 72, 108, 109, 125, 126, 134, 135, 169, 170, 176, 205, 206, 210, 226, 368, 370, 372, 384, 389], "partit": 60, "independ": 60, "altern": [60, 210, 370, 389], "recombin": 60, "convolut": [60, 213, 368, 387], "residu": 60, "64": [60, 68, 69, 120, 127, 132, 178, 210, 243, 260, 266, 304, 305, 324, 337, 338, 339, 367, 373, 384, 385, 386, 387, 389], "conjug": 62, "core_grid": [68, 133, 178, 210, 363, 383, 384], "coregrid": [68, 133, 178, 210, 383, 384], "corerang": 68, "strategi": [68, 79, 210, 367, 368, 372, 373, 386], "shardstrategi": 68, "orient": [68, 373], "shardorient": 68, "use_height_and_width_as_shard_shap": 68, "distribut": [68, 79, 178, 210, 373], "l1": [68, 178, 210, 239, 339, 367, 373, 384], "either": [68, 210, 338, 364, 368, 370, 373, 374], "travers": 68, "seen": [68, 382, 383], "math": [68, 372, 386], "320": [68, 368], "forc": [69, 385], "resourc": [69, 386], "explicitli": [69, 382], "even": [69, 209, 210, 365, 368], "degre": [71, 255], "radian": [71, 255], "accurate_mod": 74, "begin": [74, 156, 232, 368, 372], "text": [74, 156, 232, 240, 364, 368], "_mode": 74, "non": [74, 120, 210, 213, 234, 250, 261, 282], "divid": [75, 342, 343], "pcc": [75, 147, 168, 257, 364, 371], "degrad": [75, 147, 168, 257], "denomin": [77, 256, 368], "downsample_param": 78, "2d": [78, 131, 210, 355, 368, 373], "assum": [78, 102, 117, 326, 355, 374], "form": [78, 355], "conv": [78, 387], "stride": [78, 213, 368, 382, 387], "file_nam": [79, 179, 370, 388, 389], "dict": [79, 220, 221, 367, 388], "dump": [79, 220, 385, 388, 389], "save": [79, 386, 388], "padding_idx": 82, "embeddings_typ": 82, "embeddingstyp": 82, "gener": [82, 100, 109, 210, 244, 364, 368, 372, 382, 383, 384, 385, 386, 387], "retriev": 82, "word": 82, "token": [82, 163, 346, 386], "106445": 82, "988281": 82, "59375": 82, "212891": 82, "964844": 82, "199219": 82, "996094": 82, "78362e": 82, "38": [82, 373, 386], "89785e": 82, "39": [82, 382, 383, 384, 385, 386, 387, 388], "04479e": 82, "25815e": 82, "71833e": 82, "59995e": 82, "60398e": 82, "83671e": 82, "22242e": 82, "88263e": 82, "35917e": 82, "49994e": 82, "output_gradient_tensor": 83, "respect": [83, 210, 373], "extract": 83, "vocabulari": 83, "previou": [83, 365], "batch_siz": [83, 131, 213, 344, 347, 363, 384, 385, 386, 387], "seq_len": [83, 102], "embedding_dim": 83, "num_embed": 83, "1024": [83, 124, 166, 383], "4096": [83, 367], "3200": 83, "input_shap": [83, 213, 387], "input_index": 83, "randint": [83, 365, 385], "weights_shap": 83, "weights_ttnn": 83, "grad_shap": 83, "grad_data": 83, "uniniti": [84, 85], "bfloat_8": 84, "21": [84, 386, 388], "67": 84, "whose": [85, 338], "desir": [85, 108, 109, 116, 117, 121, 338, 339, 340], "87": 85, "45": [85, 327, 328, 386], "22": [85, 370, 386], "60": [85, 386], "75": 85, "25": [85, 338, 372, 386, 388], "equal": [86, 87, 103, 125, 126, 156, 169, 170, 228, 229, 368, 389], "input_a": [87, 126, 135, 153, 170, 206, 211, 215, 216, 229, 318, 323, 356], "input_b": [87, 126, 135, 153, 170, 206, 229], "_tensor_i": [88, 130, 136, 175, 196, 207, 233], "fast_and_approximate_mod": [89, 91, 95, 128, 284], "exponenti": 98, "num_devic": [99, 263], "tt_input_tensor": [99, 263], "enumer": [99, 263], "append": [99, 263, 372, 388], "get_devic": [99, 263], "input_tensor_mesh": [99, 263], "aggregate_as_tensor": [99, 263], "seed": [100, 388], "probabl": 100, "scale": [100, 139, 141, 289, 306, 345, 346, 368], "rng": 100, "averag": [100, 131, 368, 372, 386], "total_elem": 100, "124": 100, "prob": 100, "algorithm": [101, 355, 368], "cod_cach": 102, "sin_cach": 102, "token_index": 102, "devicecomputekernelconfig": [102, 165, 178, 210, 279, 345, 346], "rotari": 102, "cos_cach": 102, "token_idx": 102, "transpos": [102, 178, 210, 243, 347], "head_dim": 102, "along": [103, 241, 252, 253, 304, 305, 341, 344, 367, 368, 373], "ascend": 103, "descend": 103, "preserv": 103, "sorted_tensor": 103, "sorted_tensor_desc": 103, "indices_desc": 103, "input_tensor_2d": 103, "sorted_tensor_dim": 103, "indices_dim": 103, "fill_valu": [106, 122, 123, 368], "hone": [108, 109], "wone": [108, 109], "val_hi": [108, 109], "val_lo": [108, 109], "count": [108, 109, 367, 372, 386], "ye": [108, 109, 367, 368], "high": [108, 109, 370, 373, 389], "region": [108, 109, 239], "nchw": 109, "hw": [109, 368], "rest": 109, "hfill": 109, "wfill": 109, "hi": 109, "lo": 109, "expect": [109, 213, 347, 364, 367, 368, 371, 382], "low": 109, "divis": [113, 127, 132, 256, 266, 324, 367, 368, 373], "rounding_mod": [114, 256, 273], "wh_b0": [114, 273], "padded_shap": [116, 242], "pad_valu": [116, 121, 243, 278, 304, 336, 367], "target_layout": [116, 117, 367, 368], "target_mem_config": [116, 117], "padded_tensor": 116, "output_mem_config": [116, 117, 386], "unpadded_tensor": 117, "cq_id": [120, 121, 326, 337, 340, 367, 368], "complet": [120, 326, 368], "device_tensor": [120, 337], "host_tensor": 120, "itself": [121, 367], "twice": [121, 372], "purpos": [121, 364, 371, 373], "mapper": 121, "uint16": [122, 150, 237, 341, 361, 373], "filled_tensor": [122, 123], "templat": [123, 238, 362, 372], "greatest": 124, "divisor": [124, 257], "uint8": [129, 150, 285, 304], "adapt": [131, 368], "signal": [131, 368, 386], "compos": [131, 340, 368], "sever": [131, 368], "plane": [131, 368, 387], "input_mask": 133, "inplac": [133, 195, 197, 199, 201, 387], "output_layout": [133, 368], "num_group": [133, 368], "lambd": [137, 138, 308, 309], "lambda": [138, 309, 363, 385, 387], "16666667": [139, 141], "shift": [139, 141, 368], "min_val": 143, "max_val": 143, "sfpu": 150, "shouldn": 150, "instead": [150, 272, 368, 382, 384, 388], "lower": 150, "float16": [150, 382], "imaginari": 152, "batch_id": 153, "replac": [153, 333], "denot": [153, 368], "boolean": [154, 155, 329, 341, 368], "rtol": 156, "05f": 156, "atol": 156, "08f": 156, "equal_nan": 156, "leq": 156, "otherwis": [156, 326, 341, 367, 384, 389], "rel": 156, "toler": 156, "absolut": [156, 164, 368], "nan": [156, 386], "treat": [156, 210], "comparison": [156, 371], "batch_index": 162, "popul": [162, 220, 372], "update_index": 163, "batch_offset": 163, "input_refer": [164, 223], "input_predict": [164, 223], "residual_input_tensor": [165, 279], "program_config": [165, 178, 210, 279, 342, 343, 345, 346], "programconfig": [165, 279], "least": [166, 210, 372], "recommend": [168, 363, 370, 382, 389], "80": [168, 370], "outsid": 168, "negative_slop": [171, 172], "slope": 171, "leaki": 171, "01": 172, "point": [173, 306, 365, 368, 372, 373], "transpose_a": [178, 210], "transpose_b": [178, 210], "matmulprogramconfig": [178, 210], "output_til": [178, 210], "behaviour": [178, 210], "grid": [178, 210, 345, 346, 353, 363, 373], "128": [178, 210, 389], "load": [179, 370, 385, 386, 388], "whb0": [181, 185, 274], "logarithm": [187, 226], "AND": [194, 195, 368], "OR": [198, 199, 278, 368], "land": [200, 201], "lnot": [200, 201], "lor": [200, 201], "xor": [201, 368], "logitep": 204, "context": [209, 264, 265], "exit": 209, "occur": 209, "product": [210, 345, 346], "therefor": [210, 382, 384], "dimension": [210, 226, 368, 373, 382], "addit": [210, 363, 368], "front": [210, 372, 388], "These": [210, 364, 365, 368, 370, 374, 389], "allow": [210, 364, 367, 368, 371], "possibl": [210, 340, 363, 368, 385], "although": 210, "combin": 210, "most": [210, 382], "variou": 210, "align": [210, 367, 368, 372], "appropri": [210, 364, 370], "abov": [210, 370], "criteria": 210, "messag": [210, 372], "unexpect": [210, 368], "obviou": [210, 382], "except": [210, 368, 382, 384, 386], "scenario": [210, 373], "relat": [210, 368], "swap": 210, "j": 210, "implicitli": 210, "extend": 210, "patch": 210, "leverag": [210, 368], "accord": [210, 243, 275], "1d": [210, 234, 251, 386], "look": [210, 341, 364, 369, 373, 386, 388], "determin": [210, 220, 221, 368, 373, 382, 383, 384, 385, 386, 387], "n_size": 210, "m_size": 210, "k_size": 210, "p": [210, 373], "though": [210, 365], "differ": [210, 316, 367, 373, 382, 389], "constraint": [210, 373, 382], "chosen": [210, 372, 388], "carefulli": 210, "fix": 210, "problem": 210, "input_h": 213, "input_w": 213, "kernel_s": [213, 368, 387], "dilat": [213, 368, 387], "applied_shard_schem": 213, "tensormemorylayout": [213, 367, 368, 387], "ceil_mod": [213, 368], "in_plac": 213, "window": [213, 368], "nhw": 213, "scheme": 213, "convolv": [213, 368], "halo": 213, "createdevic": [213, 365, 367, 387], "l1_small_siz": [213, 239, 384, 385, 387], "8192": [213, 384, 385], "kernel_h": 213, "kernel_w": 213, "stride_h": 213, "stride_w": 213, "pad_h": 213, "pad_w": 213, "dilation_h": 213, "dilation_w": 213, "nchw_shape": 213, "40": [213, 386], "in_n": 213, "in_c": 213, "in_h": 213, "in_w": 213, "input_perm": 213, "input_reshap": 213, "tt_input": 213, "tt_input_dev": 213, "tt_output": [213, 365, 367], "block_shard": [213, 387], "in_place_halo": 213, "20": [219, 306, 307, 372, 386, 388], "initialize_model": [220, 221, 363, 385, 387], "model_nam": [220, 221, 363, 385, 386, 387], "convert_to_ttnn": [220, 221, 363], "custom_preprocessor": [220, 221, 363, 385, 387], "parameterdict": [220, 221], "prefix": [220, 221], "run_model": [220, 387], "reader_patterns_cach": 220, "disabl": [220, 221, 368, 382, 383, 384, 385, 386, 387, 389], "doesn": [220, 221, 382], "invalid": [220, 221], "alreadi": [220, 221, 239, 365, 374, 386, 388], "been": [220, 221, 326, 364, 370, 388], "preprocessor": [220, 221], "put": [220, 221, 363, 382, 384, 387], "submodul": [220, 221, 370], "appear": [220, 221, 370], "ttnn_module_arg": [220, 387], "tmp": [220, 382, 383, 384, 385, 387, 388], "model_graph": 220, "svg": [220, 387, 388, 389], "reader": 220, "avoid": [220, 306, 372, 373], "recomput": [220, 368], "multivari": 226, "mvlgamma": 226, "5f": 226, "_float": 232, "neq": 232, "well": [234, 367, 371], "trace_region_s": 239, "dispatch_core_config": [239, 384, 385], "dispatchcoreconfig": [239, 384, 385], "0x7f3749f7ddb0": 239, "small": [239, 386], "default_l1_small_s": 239, "default_trace_region_s": 239, "dispatch_core_typ": [239, 384, 385], "dispatchcoretyp": [239, 384, 385], "0x7fbac5bfc1b0": 239, "otim": 240, "output_tensor_shap": [241, 336, 367], "input_tensor_start": [241, 367], "locat": [241, 368, 369, 372, 386, 389], "mutual": 241, "describ": [241, 364, 368], "unpadded_shap": 242, "annot": [242, 364, 367], "fixeds": [242, 367], "tthe": 243, "broken": 243, "garbag": 243, "cartesian": 244, "theta": 244, "k": [246, 341, 345, 346, 368, 383], "decim": [246, 280], "coeff": 248, "coeffici": [248, 364], "sum_": [248, 368], "polynomi": 248, "expon": [249, 250, 282, 283, 365, 373], "power": [250, 352, 365], "length": [251, 345, 346], "arrai": 251, "all_dimens": [252, 253], "keepdim": [252, 368], "particular": [253, 363, 382, 389], "actual": [256, 365, 373, 382], "numer": [256, 306, 368, 373], "new_tensor": 260, "my_memory_config": 260, "inaccur": [261, 373], "due": [261, 372, 373, 382], "characterist": 261, "fp": 261, "inform": [261, 368, 370, 374], "reduce0scatt": 263, "being": [264, 265, 372, 373], "upper_limit": 271, "cap": 271, "lower_limit": 272, "carri": 272, "modulu": 273, "repetition_vector": 275, "smallvector": 275, "repetit": [275, 277, 368], "he": 277, "fit": 277, "expand": [277, 373], "torch_input_tensor": [277, 387, 389], "torch_result": 277, "cost": [278, 368], "view": [278, 389], "condit": [278, 364], "met": 278, "new_shap": 278, "kwtype": 278, "upto": 282, "28": [282, 386, 388], "posit": [282, 346, 365, 368], "subract": 287, "revers": 287, "0507": 289, "67326": 289, "modifi": [291, 306, 365, 382], "short": [291, 386, 389], "slice_start": 304, "slice_end": 304, "slice_step": 304, "input_tensor_shap": [304, 367], "unmodifi": 304, "undefin": [304, 368], "0310059": 305, "By": [306, 371, 383], "steep": 306, "higher": [306, 370, 372, 373], "steeper": 306, "approach": [306, 363, 371, 389], "hard": [306, 382], "larg": [306, 363, 373, 385], "improv": [306, 364], "stabil": [306, 368, 371], "queueid": [326, 337, 367, 368], "sub_device_id": 326, "subdeviceid": 326, "synchron": [326, 389], "wait": [326, 368, 372], "associ": 326, "ran": [326, 372, 384], "chip": 326, "set_sub_device_stall_group": 326, "queu": 326, "multi_devic": [326, 337, 367], "accuraci": [329, 364], "better": [329, 368], "use_multicor": [335, 336, 353, 354], "organ": [338, 364, 373], "becom": 338, "thread": [338, 367, 386, 389], "42188": 338, "398438": 338, "torch_rank": [340, 389], "mesh_compos": 340, "meshtotensor": 340, "Will": 340, "squeez": [340, 382, 383, 384, 385, 387], "reach": 340, "torch_tensor": [340, 382], "3008": 340, "8438": 340, "3242": 340, "9023": 340, "5820": 340, "5312": 340, "largest": [341, 368, 373], "smallest": [341, 368], "sure": [341, 374, 389], "bfloat8": 341, "head_siz": [342, 343, 344, 347, 384], "attention_mask": [342, 343, 384], "softmaxprogramconfig": [342, 343], "softmaxdefaultprogramconfig": [342, 343], "causal_mask": [342, 343], "mask": [342, 343, 346], "causal": [342, 343, 345], "num_head": [344, 347, 384], "sequence_s": [344, 347, 363, 384, 385, 386], "input_tensor_q": [345, 346], "input_tensor_k": [345, 346], "input_tensor_v": [345, 346], "attn_mask": [345, 346], "is_casu": 345, "sdpaprogramconfig": [345, 346], "dot": [345, 346], "mimick": 345, "flashattent": 345, "accept": [345, 346, 364, 371], "q": [345, 346], "parallel": [345, 346, 368, 372, 386], "nqh": 345, "dh": [345, 346], "nkv": [345, 346], "impli": 345, "is_caus": 346, "cur_po": 346, "cur_pos_tensor": 346, "decod": [346, 388], "mqa": 346, "sdpamulticoreprogramconfig": 346, "nh": 346, "pnh": 346, "skip": [346, 382, 383, 384, 385, 386, 387, 388], "kv_input_tensor": 347, "num_kv_head": 347, "transpose_kei": 347, "hidden_s": [347, 363, 384, 385], "Then": [347, 363, 370], "score": [347, 386], "q1": 347, "k1": 347, "v1": [347, 370], "qn": 347, "kn": 347, "vn": 347, "cat": [347, 384, 388], "contigu": [347, 368, 382], "num": 347, "diagon": [348, 349], "ops_chain": 352, "unarywithparam": 352, "chain": 352, "unaryoptyp": [352, 368], "use_pack_until": [353, 354], "sub_core_grid": 353, "corerangeset": 353, "output_tensor_end": [354, 367], "scale_factor": [355, 368], "array2d": 355, "nearest": [355, 368], "cdot": 359, "basi": 363, "re": [363, 368, 369, 383], "rewritten": 363, "bert": [363, 369, 385, 386], "modeling_bert": [363, 385], "bertintermedi": 363, "class": [363, 364, 367, 368, 372, 373, 386, 387, 388], "super": [363, 387], "dens": 363, "intermediate_s": 363, "forward": [363, 368, 387], "hidden_st": [363, 384, 385], "tdd": 363, "torch_bert": 363, "utility_funct": 363, "torch_random": 363, "utils_for_test": 363, "assert_with_pcc": 363, "mark": [363, 364], "parametr": 363, "phiyodr": [363, 385], "finetun": [363, 385], "squad2": [363, 385], "384": [363, 384, 385], "test_bert_intermedi": 363, "manual_se": [363, 382, 383, 384, 387, 388, 389], "bertconfig": [363, 385], "from_pretrain": [363, 385, 388], "eval": [363, 385, 386, 387, 388], "torch_hidden_st": [363, 384], "torch_output": [363, 384], "_": [363, 372, 384, 388], "bert_intermedi": 363, "9999": [363, 382, 383, 384, 385, 387, 389], "dictionari": 363, "turn": 363, "ttnn_bert": [363, 385], "999": 363, "bias": [363, 368, 384], "someth": 363, "ttnn_optimized_bert": [363, 385], "isinst": 363, "preprocess_linear_weight": [363, 384], "preprocess_linear_bia": [363, 384], "ff1_weight": 363, "ff1_bia": 363, "local": [363, 364, 373], "best": [363, 382], "integr": [363, 364, 365, 368], "incredibli": 364, "excit": 364, "exploratori": 364, "freedom": 364, "showcas": 364, "few": [364, 373, 382], "question": 364, "answer": 364, "see": [364, 368, 371, 382, 386, 388], "highlight": [364, 373], "successfulli": [364, 374, 386, 388], "migrat": [364, 382, 383, 384, 385, 387, 389], "good": 364, "documen": 364, "credit": 364, "author": 364, "might": [364, 368, 383], "encount": 364, "demonstr": [364, 372], "adequ": 364, "achiev": [364, 371], "pearson": 364, "correl": [364, 368], "ci": 364, "pipelin": [364, 372], "unit": [364, 368], "metric": 364, "meet": 364, "continu": [364, 370, 371], "against": [364, 389], "upon": 364, "everi": [364, 367, 372, 384, 389], "commit": [364, 386], "ongo": 364, "complianc": 364, "catch": 364, "regress": 364, "earli": 364, "collect": [364, 372, 374, 386], "usag": [364, 370], "varieti": [364, 368], "measur": 364, "special": [364, 368, 373], "run_device_perf_model": 364, "models_device_performance_bare_met": 364, "schedul": 364, "clear": [364, 371, 382, 383, 384, 385, 386, 387], "incorpor": 364, "autom": 364, "extern": [364, 371, 373], "servic": 364, "impact": 364, "run_perf_models_oth": 364, "run_perf_models_llm_javelin": 364, "run_perf_models_cnn_javelin": 364, "models_performance_bare_met": 364, "run_demos_single_card_n150_test": 364, "run_demos_single_card_n300_test": 364, "run_t3000_demo_test": 364, "test_ttnn_functional_resnet50": 364, "resnet50testinfra": 364, "setup": [364, 369, 370, 386, 388], "handl": [365, 382], "machin": [365, 367, 368, 372, 374, 388], "send": [365, 367, 368], "__name__": 365, "__main__": [365, 386], "pci": [365, 382, 383, 384, 385, 386, 387], "slot": 365, "tt_devic": [365, 367, 368], "py_tensor": [365, 367], "tt_tensor": [365, 367, 368], "tolist": [365, 367], "tt_relu_out": 365, "closedevic": 365, "power_fp": 365, "suppli": [365, 367, 368], "lastli": 365, "fallback_op": [365, 368], "py_tensor_exp": 365, "py_relu_out": 365, "py_pow_out": 365, "tt_pow_out": 365, "behav": [365, 368], "regular": 365, "hood": 365, "tt_silu_out": 365, "tt_exp_out": 365, "leav": 365, "anyth": 365, "manipul": 367, "sent": 367, "receiv": [367, 372], "platform": [367, 369, 386], "ttdnn": 367, "util": [367, 370, 373, 382, 383, 388], "z": [367, 368, 372, 388], "construct": [367, 389], "nor": 367, "subsect": 367, "insid": [367, 389], "63": [367, 386], "65": [367, 386, 388], "66": 367, "127": [367, 386], "3968": 367, "3969": 367, "3970": 367, "4031": 367, "4032": 367, "4033": 367, "4034": 367, "4095": 367, "4097": 367, "4098": 367, "4159": 367, "4160": 367, "4161": 367, "6462": 367, "4223": 367, "8064": 367, "8065": 367, "8066": 367, "8127": 367, "8128": 367, "8129": 367, "8130": 367, "8191": 367, "95": 367, "1984": 367, "1985": 367, "2015": [367, 386], "33": [367, 383, 386], "96": [367, 386, 389], "97": [367, 386], "2016": 367, "2017": [367, 386, 388], "2047": 367, "2080": 367, "2081": 367, "2111": 367, "2144": 367, "2145": 367, "2175": 367, "4064": 367, "4065": 367, "fourth": [367, 368], "6111": 367, "6176": 367, "ownedstorag": [367, 368], "borrowedstorag": 367, "devicestorag": [367, 368], "pointer": 367, "That": [367, 373, 383], "underli": 367, "numpi": [367, 373, 386, 388], "reason": 367, "data_typ": [367, 384], "No": [367, 368], "bank": 367, "arg1": 367, "arg2": 367, "arg3": 367, "divisbl": [367, 368], "arg4": 367, "arg5": 367, "single_bank": 367, "memory_layout": [367, 368], "shard_spec": 367, "nullopt": [367, 387], "ptr": 367, "np": 367, "owned_buffer_for_uint8_t": 367, "owned_buffer_for_uint16_t": 367, "owned_buffer_for_int32_t": 367, "owned_buffer_for_uint32_t": 367, "owned_buffer_for_float32_t": 367, "owned_buffer_for_bfloat16_t": 367, "borrowed_buffer_for_uint8_t": 367, "borrowed_buffer_for_uint16_t": 367, "borrowed_buffer_for_int32_t": 367, "borrowed_buffer_for_uint32_t": 367, "borrowed_buffer_for_float32_t": 367, "borrowed_buffer_for_bfloat16_t": 367, "everywher": 367, "inp": 367, "tt_tensor_pad": 367, "npad": 367, "bottom": [367, 374], "storagetyp": 367, "cq": 367, "uint8_t": 367, "ti": 367, "output_tensor_start": 367, "tt_tensor_unpad": 367, "nunpad": 367, "apart": 367, "restrict": 367, "eight": 367, "shardspec": 367, "dram_channel": 367, "rememb": 367, "py_output": 367, "unifi": 368, "tt_eager": [368, 386], "caller": 368, "launch": [368, 374], "plug": 368, "declar": 368, "newoper": 368, "programwithcallback": 368, "create_program": 368, "some_memb": 368, "optional_input_tensor": 368, "validate_with_output_tensor": 368, "programwithoptionaloutputtensor": 368, "box": [368, 370], "preferred_nam": 368, "parallelization_strategi": 368, "get_parallelization_strategi": 368, "parallelizationstrategyenum": 368, "enqueu": 368, "finish": [368, 372, 386], "asynchron": 368, "reload": 368, "program_cach": 368, "disable_and_clear": 368, "entri": 368, "num_entri": 368, "cachabl": 368, "override_runtime_args_callback": 368, "input_buff": 368, "output_buff": 368, "src_dram_buff": 368, "dst_dram_buff": 368, "tt_metal_logger_typ": [368, 389], "tt_metal_logger_level": [368, 389], "1280": 368, "layoutconversiononhost": 368, "miss": [368, 389], "eltwiseunari": 368, "op_typ": 368, "_tt": 368, "mul": [368, 384], "ellipsi": 368, "output_on_devic": 368, "third": 368, "fewer": 368, "four": 368, "side": [368, 372, 382, 383, 384, 385, 386, 387], "connect": 368, "paper": 368, "separ": 368, "normalized_shap": 368, "layer": [368, 372, 387], "much": [368, 372, 383], "m": [368, 370, 383], "reflect": [368, 371], "replic": 368, "circular": 368, "align_corn": 368, "recompute_scale_factor": 368, "antialia": 368, "down": 368, "bilinear": 368, "bicub": 368, "trilinear": 368, "area": 368, "exact": [368, 373, 384], "center": 368, "corner": 368, "pixel": 368, "anti": 368, "alias": 368, "output_s": 368, "total": [368, 372], "known": 368, "sigma": 368, "logist": 368, "x_": 368, "x_i": 368, "sum_j": 368, "x_j": 368, "lie": 368, "in_channel": [368, 387], "out_channel": [368, 387], "padding_mod": 368, "simplest": 368, "c_": 368, "h_": 368, "w_": 368, "precis": [368, 373], "n_i": 368, "_j": 368, "star": 368, "cross": 368, "learnabl": 368, "num_batches_track": 368, "num_featur": 368, "affin": 368, "track_running_stat": 368, "4d": 368, "deep": 368, "network": 368, "intern": [368, 369], "covari": 368, "track": 368, "num_channel": 368, "lernabl": 368, "elementwise_affin": 368, "return_indic": 368, "channels_last": [368, 372], "reshape_2d": 368, "kh": 368, "kw": 368, "c_j": 368, "max_": 368, "ldot": 368, "implicit": 368, "infin": [368, 373], "mod": 368, "dividend": 368, "bitwis": 368, "NOT": [368, 382, 383, 384, 385, 387], "immedi": 368, "arithmet": 368, "operand": 368, "promot": 368, "behavior": [368, 373], "retain": 368, "argmin": 368, "fusion": 368, "togeth": 368, "fused_op": 368, "in_featur": 368, "out_featur": 368, "num_dim": 368, "moment": 368, "add_and_norm": 368, "flexibl": 368, "earlier": 368, "while": [368, 371], "ml": 369, "workload": 369, "falcon": 369, "7b": 369, "navig": [369, 370], "mistral": 369, "llama2": 369, "70b": 369, "soon": 369, "t3000": [369, 370], "learn": [369, 373, 383, 386], "dive": 369, "deeper": 369, "jupyt": [369, 374, 386], "notebook": [369, 374, 386, 388], "tool": [370, 372, 386], "softwar": [370, 374, 382, 383, 384, 385, 387], "packag": [370, 385, 386, 388], "asset": 370, "tag": 370, "o": [370, 372, 382, 383, 384, 385, 386, 388], "ubuntu": [370, 382, 383, 384, 385, 386, 387, 388], "04": [370, 388], "fw_pack": 370, "v80": 370, "v2": 370, "blackhol": 370, "v3": 370, "wget": 370, "raw": [370, 388], "githubusercont": 370, "ref": 370, "install_depend": 370, "chmod": 370, "sudo": [370, 372], "dkm": 370, "debian": 370, "apt": 370, "fedora": 370, "dnf": 370, "enterpris": 370, "linux": [370, 386], "epel": 370, "cd": [370, 372, 386], "modprob": 370, "visit": 370, "pip": [370, 386, 388], "reboot": [370, 372], "curl": 370, "fwbundl": 370, "l": 370, "fw": [370, 372, 382, 383, 384, 385, 387], "tar": 370, "correctli": 370, "telemetri": 370, "loudbox": 370, "quietbox": 370, "closer": 370, "quickest": 370, "ai": [370, 382, 383, 384, 385, 386, 387], "quick": 370, "who": [370, 373], "recurs": 370, "build_met": [370, 372, 386], "pandoc": [370, 386], "libtbb": 370, "dev": [370, 386], "libcapston": 370, "pkg": 370, "doxygen": 370, "registri": 370, "pull": [370, 371], "ghcr": 370, "io": [370, 372], "amd64": 370, "rc": 370, "rm": 370, "hugepag": [370, 382, 383, 384, 385, 386, 387], "1g": 370, "bash": [370, 386], "architectur": [370, 375, 378, 379, 389], "choic": [370, 382], "wheel_fil": 370, "whl": [370, 386, 388], "governor": 370, "txt": [370, 386], "cpufrequtil": 370, "cpupow": 370, "frequenc": 370, "arch_nam": [370, 384, 385], "tt_metal_hom": [370, 372, 386], "python3": [370, 385, 386, 388], "run_op_on_devic": 370, "intend": 371, "reliabl": 371, "simultan": 371, "fine": 371, "tune": 371, "themselv": [371, 373], "goal": 371, "ask": 371, "driven": 371, "popular": 371, "kent": 371, "beck": 371, "long": 371, "term": 371, "benefit": 371, "submit": 371, "label": [371, 373], "fulli": [371, 372], "branch": 371, "brief": 371, "4730": 371, "rst": 371, "referenc": [371, 386], "sweep": 371, "codeown": 371, "pr": 371, "comment": 371, "test_perf_resnet": 372, "test_perf_bare_met": 372, "0185": 372, "consol": 372, "similar": [372, 382, 384], "shorter": 372, "cli": 372, "explain": 372, "reset": 372, "tt_smi": 372, "tensix_reset": 372, "tensix": 372, "skew": 372, "timer": 372, "wh": 372, "analyz": 372, "1000": [372, 387, 388], "fixtur": 372, "ttl": 372, "dumpdeviceprofil": 372, "drop": 372, "around": 372, "120": [372, 386], "eighth": 372, "warn": [372, 382, 383, 384, 385, 386, 387], "mention": 372, "risc": 372, "faster": [372, 384], "those": 372, "analysi": 372, "affect": 372, "flow": 372, "column": [372, 373, 386], "python_fallback": [372, 386], "tt_dnn_cpu": 372, "tt_dnn_devic": [372, 386], "global": [372, 386], "fidel": [372, 386], "field": 372, "lofi": [372, 387], "hifi2": 372, "hifi3": 372, "clock": 372, "stamp": 372, "durat": [372, 384, 386, 389], "nanosecond": 372, "end_t": 372, "start_t": 372, "cycl": 372, "earliest": 372, "core_frequ": 372, "marker": 372, "brisc": 372, "ncrisc": 372, "trisc0": 372, "trisc1": 372, "trisc2": 372, "cb": 372, "spent": 372, "cb_wait_front": 372, "reserv": 372, "cb_reserve_back": 372, "datamov": 372, "input_0_memori": 372, "dev_0_dram": 372, "dec_0_l1": 372, "tgz": 372, "filenam": [372, 388], "item": [372, 386], "aggreg": 372, "timestamp": 372, "4x4": 373, "32x32": 373, "still": 373, "transit": 373, "2x2": 373, "illustr": 373, "byte": 373, "sizeof": 373, "introduc": 373, "observ": 373, "magnitud": [373, 384], "smaller": 373, "flush": 373, "instabl": 373, "extrem": 373, "domin": 373, "caus": 373, "lose": 373, "7014118346046923e": 373, "dataset": [373, 386], "frequent": 373, "occurr": 373, "uniform": 373, "deal": 373, "critic": 373, "homogen": 373, "unsuit": 373, "inher": 373, "owned_host_storag": 373, "borrowed_host_storag": 373, "device_storag": 373, "ideal": 373, "abstract": 373, "awai": 373, "compress": 373, "upper": 373, "remain": 373, "128x128": 373, "subset": 373, "know": 373, "understand": 373, "unshard": 373, "coordin": 373, "physic": 373, "pybind11_object": 373, "properti": 373, "certain": 374, "ramp": 374, "skillset": 374, "tree": 374, "lab": 374, "port": 374, "8888": 374, "hint": 374, "Be": 374, "alwai": [374, 382, 385, 386], "cell": 374, "central": 382, "sens": 382, "sram": 382, "concept": 382, "2024": [382, 383, 384, 385, 386, 387, 388, 389], "07": [382, 383, 384, 385, 387], "18": [382, 383, 384, 385, 386, 388], "48": [382, 385, 386], "818": 382, "136": [382, 383, 384, 385], "cache_path": [382, 383, 384, 385, 387], "posixpath": [382, 383, 384, 385], "home": [382, 383, 384, 385, 386, 387, 388], "comparison_mode_pcc": [382, 383, 384, 385, 387, 389], "enable_comparison_mod": [382, 383, 384, 385, 387, 389], "enable_detailed_buffer_report": [382, 383, 384, 385, 387, 389], "enable_detailed_tensor_report": [382, 383, 384, 385, 387, 389], "enable_fast_runtime_mod": [382, 383, 384, 385, 387, 389], "enable_graph_report": [382, 383, 384, 385, 387, 389], "enable_log": [382, 383, 384, 385, 387, 389], "enable_model_cach": [382, 383, 384, 385, 387], "model_cache_path": [382, 383, 384, 385, 387], "report_nam": [382, 383, 384, 385, 387, 389], "root_report_path": [382, 383, 384, 385, 387], "throw_exception_on_fallback": [382, 383, 384, 385, 387], "tmp_dir": [382, 383, 384, 385, 387, 388], "905": 382, "operation_decor": [382, 383, 384, 385, 387], "758": [382, 383, 384, 385], "906": 382, "907": [382, 384], "908": [382, 384], "909": [382, 384], "910": [382, 384], "911": [382, 384], "914": [382, 384], "915": [382, 384], "pearson_correlation_coeffici": [382, 383, 384, 385, 387], "919": [382, 384], "920": 382, "921": [382, 384], "unsqueeze_to_4d": [382, 383, 384, 385, 387], "922": [382, 384], "923": [382, 384], "924": [382, 384], "925": [382, 384], "926": [382, 384], "allocate_tensor_on_devic": [382, 383, 384, 385, 387], "copy_host_to_device_tensor": [382, 383, 384, 385, 387], "927": [382, 384], "928": [382, 384], "929": [382, 384], "930": [382, 384], "931": [382, 384], "934": [382, 384], "935": 382, "936": [382, 384, 385], "937": 382, "938": [382, 384], "941": [382, 384], "942": [382, 384], "943": [382, 384], "948": [382, 384], "949": [382, 384, 385], "950": [382, 384], "951": [382, 384, 385], "952": [382, 384], "953": [382, 384], "954": [382, 384], "955": [382, 384], "958": [382, 384], "959": 382, "960": [382, 384, 385], "f": [382, 383, 384, 386, 388, 389], "As": [382, 383], "1234": 382, "again": 382, "action": 382, "98300": 382, "11301": 382, "37592": 382, "64318": 382, "53437": 382, "59434": 382, "69190": 382, "04268": 382, "33346": 382, "20231": 382, "15127": 382, "58303": 382, "pick": 382, "80078": 382, "69531": 382, "71484": 382, "33398": 382, "60156": 382, "36523": 382, "73047": 382, "90625": 382, "59766": 382, "83203": 382, "61719": 382, "53516": 382, "effici": [382, 383], "transfer": 382, "nshape": 382, "nlayout": 382, "21680": 382, "24316": 382, "19336": 382, "40625": 382, "81641": 382, "50781": 382, "09961": 382, "54688": 382, "70703": 382, "93359": 382, "06787": 382, "75781": 382, "insert": 382, "cale": 382, "info": [382, 383, 384, 385, 386, 387, 388], "49": [382, 386, 388], "027": [382, 383], "silicondriv": [382, 383, 384, 385, 386, 387], "detect": [382, 383, 384, 385, 386, 387], "040": 382, "init_detect_tt_device_numanod": [382, 383, 384, 385, 386, 387], "numanodeset": [382, 383, 384, 385, 386, 387], "pci_bus_id": [382, 383, 384, 385, 386, 387], "0000": [382, 383, 384, 385, 386, 387], "00": [382, 383, 384, 385, 386, 387, 388], "041": 382, "bind_area_memory_nodeset": [382, 383, 384, 385, 386, 387], "unabl": [382, 383, 384, 385, 386, 387], "numanod": [382, 383, 384, 385, 386, 387], "membind": [382, 383, 384, 385, 386, 387], "ttsilicondevic": [382, 383, 384, 385, 386, 387], "init_hugepag": [382, 383, 384, 385, 386, 387], "bind_area_to_memory_nodeset": [382, 383, 384, 385, 386, 387], "fail": [382, 383, 384, 385, 386, 387], "ch": [382, 383, 384, 385, 386, 387], "effect": [382, 383, 384, 385, 386, 387], "decreas": [382, 383, 384, 385, 386, 387], "893": [382, 383, 384, 385, 386, 387], "082": 382, "ethernet": [382, 383, 384, 385, 387], "clk": [382, 383, 384, 385, 386, 387], "800": [382, 383, 384, 385], "mhz": [382, 383, 384, 385, 386, 387], "torch_input_tensor_a": [382, 389], "torch_input_tensor_b": [382, 389], "stai": 382, "unless": [382, 389], "explicit": 382, "figur": 382, "hang": 382, "properli": 382, "41": [383, 386], "903": 383, "989": [383, 384], "990": [383, 384], "991": 383, "992": 383, "993": 383, "994": 383, "995": 383, "996": 383, "001": 383, "002": 383, "003": 383, "004": 383, "005": 383, "006": 383, "007": 383, "008": 383, "009": 383, "010": 383, "011": 383, "012": 383, "013": 383, "015": 383, "016": 383, "017": 383, "018": 383, "020": 383, "021": 383, "022": 383, "028": 383, "029": 383, "030": 383, "031": 383, "032": 383, "033": 383, "035": 383, "036": 383, "037": 383, "053": 383, "066": 383, "067": 383, "094": 383, "repeatedli": 383, "enable_program_cach": [383, 384, 389], "torch_a": 383, "torch_b": 383, "longer": 383, "signific": 383, "aslo": 383, "why": 383, "conver": 383, "todo": 383, "75000": 383, "25000": 383, "50000": 383, "62500": 383, "effeci": 383, "further": 383, "enjoi": 383, "massiv": 383, "eth": [384, 385], "54": [384, 386], "821": 384, "912": 384, "939": 384, "976": 384, "55": [384, 386], "014": 384, "fashion": 384, "multi_head_attent": 384, "query_weight": 384, "query_bia": 384, "key_weight": 384, "key_bia": 384, "value_weight": 384, "value_bia": 384, "output_weight": 384, "output_bia": 384, "fallback_reshap": 384, "get_fallback_funct": [384, 389], "attention_scor": 384, "attention_prob": 384, "context_lay": 384, "self_output": 384, "torch_attention_mask": [384, 385], "torch_query_weight": 384, "torch_query_bia": 384, "torch_key_weight": 384, "torch_key_bia": 384, "torch_value_weight": 384, "torch_value_bia": 384, "torch_output_weight": 384, "torch_output_bia": 384, "00607705116272": 384, "250946044921875": 384, "ahead": 384, "optimized_multi_head_attent": 384, "fused_qkv_weight": 384, "fused_qkv_bia": 384, "self_output_weight": 384, "self_output_bia": 384, "fused_qkv_output": 384, "context_layer_after_concatenate_head": 384, "qkv": 384, "torch_qkv_weight": 384, "torch_qkv_bia": 384, "qkv_weight": 384, "qkv_bia": 384, "optimized_output": 384, "474989175796509": 384, "17": [384, 385, 386, 387, 388], "020017147064208984": 384, "torch_optimized_output": 384, "assert": [384, 389], "allclos": 384, "19": [384, 386, 388], "ttnn_config_overrid": [385, 387, 389], "47": [385, 386], "183": 385, "133": [385, 386], "overrid": [385, 386, 389], "184": 385, "354": 385, "355": 385, "356": 385, "357": 385, "358": 385, "359": 385, "360": [385, 388], "362": 385, "366": 385, "367": 385, "368": 385, "369": 385, "370": 385, "371": 385, "372": 385, "373": [385, 386], "374": 385, "378": 385, "379": 385, "380": [385, 386], "381": 385, "383": 385, "385": 385, "390": 385, "391": 385, "392": 385, "393": 385, "394": 385, "395": 385, "396": 385, "397": 385, "398": 385, "399": 385, "set_verbosity_error": 385, "100": [385, 386], "412": 385, "442": 385, "447": 385, "googl": [385, 388], "bert_uncased_l": 385, "4_h": 385, "256_a": 385, "bertselfoutput": 385, "site": [385, 386, 388], "huggingface_hub": [385, 386], "file_download": 385, "1132": 385, "futurewarn": 385, "resume_download": 385, "resum": 385, "force_download": 385, "874": 385, "num_hidden_lay": 385, "bertforquestionansw": 385, "input_id": 385, "vocab_s": 385, "torch_token_type_id": 385, "torch_position_id": 385, "ttnn_bert_input": 385, "preprocess_input": 385, "bert_for_question_answ": 385, "50": 385, "339": 385, "manage_config": [385, 387, 389], "144": 385, "340": 385, "341": 385, "555": 385, "_paramet": [385, 387], "env": [385, 386, 387, 388], "34": [385, 386, 387], "343": 385, "634": 385, "636": 385, "147": [385, 386], "restor": [385, 387], "02": [385, 386], "947": 385, "unset": 386, "silent": 386, "nuke": 386, "jobserv": 386, "unavail": 386, "j1": 386, "parent": 386, "rule": 386, "artifact": 386, "conf": 386, "backend": 386, "pypi": [386, 388], "org": [386, 388], "satisfi": [386, 388], "setuptool": 386, "44": 386, "py3": 386, "kb": 386, "edit": 386, "obtain": 386, "statu": 386, "metadata": [386, 388], "click": 386, "loguru": 386, "58": 386, "ipywidget": 386, "139": 386, "90": [386, 387], "db": 386, "290ab3a34f2ef0b5a0f89235dc2d40fea83e77de84ed2dc05c": 386, "pyyaml": [386, 388], "cp38": 386, "linux_x86_64": 386, "jupyterlab": 386, "mb": 386, "pyelftool": 386, "py2": 386, "174": 386, "4f": 386, "ed": 386, "863cf4386fe6db3c09333712009ec1c5146a36f3904b469d13": 386, "curtsi": 386, "91": 386, "b7": 386, "0c117d73912c6c2beb1eb0d7d6884f4e79e6e5b5e91eeb34f5": 386, "torchtrail": 386, "manylinux_2_12_x86_64": 386, "manylinux2010_x86_64": 386, "matplotlib": 386, "toolz": 386, "pillow": [386, 388], "manylinux_2_17_x86_64": 386, "manylinux2014_x86_64": 386, "panda": 386, "2bcpu": 386, "199": 386, "dash": 386, "rich": 386, "238": 386, "seaborn": 386, "293": 386, "plotli": 386, "traitlet": 386, "85": 386, "widgetsnbextens": 386, "ipython": [386, 387, 388], "798": 386, "widget": 386, "jupyterlab_widget": 386, "215": 386, "comm": 386, "async": 386, "lru": 386, "async_lru": 386, "tomli": 386, "python_vers": 386, "server": 386, "jupyter_serv": 386, "jinja2": [386, 388], "ipykernel": 386, "116": 386, "shim": 386, "notebook_shim": 386, "jupyterlab_serv": 386, "lsp": 386, "jupyter_lsp": 386, "68": 386, "23": 386, "53": 386, "importlib": [386, 388], "importlib_resourc": 386, "importlib_metadata": 386, "jupyter_cor": 386, "tornado": 386, "abi3": 386, "manylinux_2_5_x86_64": 386, "manylinux1_x86_64": 386, "435": 386, "bless": 386, "cwcwidth": 386, "92": 386, "pyrsist": 386, "121": 386, "graphviz": 386, "pypars": 386, "103": 386, "kiwisolv": 386, "contourpi": 386, "301": 386, "fonttool": 386, "dateutil": 386, "python_dateutil": 386, "247": [386, 387], "cycler": 386, "pytz": 386, "2020": 386, "505": 386, "extens": [386, 388], "typing_extens": 386, "html": 386, "compon": 386, "dash_html_compon": 386, "dash_tabl": 386, "flask": 386, "101": 386, "dash_core_compon": 386, "pygment": 386, "markdown": 386, "markdown_it_pi": 386, "84": 386, "tenac": 386, "24": [386, 388], "pickleshar": 386, "prompt": 386, "toolkit": 386, "37": 386, "prompt_toolkit": 386, "43": 386, "386": 386, "stack": 386, "stack_data": 386, "backcal": 386, "jedi": 386, "pexpect": 386, "sys_platform": 386, "win32": 386, "inlin": 386, "matplotlib_inlin": 386, "send2trash": 386, "anyio": 386, "termin": 386, "jupyter_server_termin": 386, "client": 386, "jupyter_cli": 386, "105": 386, "nbformat": 386, "77": 386, "nbconvert": 386, "257": [386, 387], "event": 386, "jupyter_ev": 386, "websocket": 386, "websocket_cli": 386, "pyzmq": 386, "prometheu": 386, "prometheus_cli": 386, "argon2": 386, "cffi": 386, "argon2_cffi": 386, "terminado": 386, "markupsaf": [386, 388], "26": 386, "nest": 386, "asyncio": 386, "nest_asyncio": 386, "psutil": 386, "cp36": 386, "288": 386, "debugpi": 386, "babel": 386, "62": 386, "jsonschema": 386, "json5": 386, "zipp": [386, 388], "platformdir": 386, "six": 386, "wcwidth": 386, "itsdanger": 386, "blinker": 386, "werkzeug": 386, "226": 386, "mdurl": 386, "pure": 386, "pure_ev": 386, "asttoken": 386, "27": [386, 388], "parso": 386, "ptyprocess": 386, "exceptiongroup": 386, "idna": [386, 388], "61": 386, "sniffio": 386, "fastjsonschema": 386, "defusedxml": 386, "beautifulsoup4": 386, "jupyterlab_pyg": 386, "pandocfilt": 386, "mistun": 386, "tinycss2": 386, "bleach": 386, "162": 386, "nbclient": 386, "rfc3986": 386, "rfc3986_valid": 386, "json": [386, 389], "logger": 386, "python_json_logg": 386, "rfc3339": 386, "rfc3339_valid": 386, "argon2_cffi_bind": 386, "86": 386, "urllib3": [386, 388], "charset": [386, 388], "charset_norm": 386, "141": 386, "certifi": [386, 388], "163": 386, "03": [386, 387], "jsonschema_specif": 386, "pkgutil": 386, "resolv": 386, "pkgutil_resolve_nam": 386, "attr": 386, "rpd": 386, "rpds_py": 386, "soupsiev": 386, "36": 386, "webencod": 386, "444": 386, "pycpars": 386, "118": 386, "pre_commit": 386, "202": 386, "black": 386, "twine": 386, "yamllint": 386, "docutil": 386, "570": 386, "sphinx": 386, "rtd": 386, "theme": 386, "sphinx_rtd_them": 386, "sphinxcontrib": 386, "email": 386, "sphinxcontrib_email": 386, "lxml": 386, "manylinux_2_24_x86_64": 386, "breath": 386, "35": 386, "nbsphinx": 386, "jqueri": 386, "sphinxcontrib_jqueri": 386, "3a": 386, "a8": 386, "3237a93e3a6261bd24edabf3277ca59f64c1710b3d8c7c72a0": 386, "317": 386, "timeout": 386, "pytest_timeout": 386, "6c": 386, "5706d21e6b4dff52e7af12bff9ca126a3f15beb4dff386aa29": 386, "jsbeautifi": 386, "462": 386, "xlsxwriter": 386, "152": 386, "tiktoken": 386, "tqdm": [386, 388], "sentencepiec": 386, "numba": 386, "56": [386, 387], "librosa": 386, "252": [386, 387], "timm": [386, 388], "549": 386, "opencv": 386, "headless": 386, "74": 386, "opencv_python_headless": 386, "cp37": 386, "diffus": [386, 388], "604": 386, "219": 386, "ftfy": 386, "gitpython": 386, "188": 386, "einop": 386, "multiprocess": 386, "70": 386, "py38": 386, "132": 386, "81": 386, "bert_scor": 386, "fsspec": [386, 388], "173": 386, "nodeenv": 386, "cfgv": 386, "98": 386, "virtualenv": 386, "pathspec": 386, "mypi": 386, "mypy_extens": 386, "pyproject_hook": 386, "render": 386, "readme_render": 386, "pkginfo": 386, "toolbelt": 386, "requests_toolbelt": 386, "keyr": 386, "images": 386, "serializinghtml": 386, "sphinxcontrib_serializinghtml": 386, "94": 386, "jsmath": 386, "sphinxcontrib_jsmath": 386, "snowballstemm": 386, "93": [386, 387], "htmlhelp": 386, "sphinxcontrib_htmlhelp": 386, "99": 386, "alabast": 386, "applehelp": 386, "sphinxcontrib_applehelp": 386, "devhelp": 386, "sphinxcontrib_devhelp": 386, "qthelp": 386, "sphinxcontrib_qthelp": 386, "ply": 386, "plumbum": 386, "iniconfig": 386, "pluggi": 386, "0rc8": 386, "editorconfig": 386, "respons": 386, "pyarrow": 386, "xxhash": 386, "194": 386, "huggingfac": [386, 388], "hub": [386, 388], "330": 386, "aiohttp": 386, "dill": 386, "110": 386, "regex": [386, 388], "2019": [386, 388], "777": 386, "filelock": [386, 388], "llvmlite": 386, "0dev0": 386, "soxr": 386, "soundfil": 386, "pooch": 386, "lazi": 386, "loader": 386, "lazy_load": 386, "scipi": 386, "joblib": 386, "302": 386, "audioread": 386, "scikit": 386, "scikit_learn": 386, "msgpack": 386, "534": 386, "gitdb": 386, "distlib": 386, "468": 386, "nh3": 386, "secretstorag": 386, "jeepnei": 386, "jaraco": 386, "frozenlist": 386, "240": [386, 387], "async_timeout": 386, "aiosign": 386, "yarl": 386, "308": 386, "multidict": 386, "129": 386, "threadpoolctl": 386, "smmap": 386, "cryptographi": 386, "itertool": 386, "more_itertool": 386, "57": 386, "pyproject": 386, "uninstal": 386, "msg": 386, "t5": 386, "integration_test": 386, "test_perform": 386, "test_t5_for_conditional_gener": 386, "functional_t5": 386, "ttnn_functional_t5": 386, "09": [386, 387], "ops_devic": 386, "session": 386, "cachedir": 386, "pytest_cach": 386, "rootdir": 386, "configfil": 386, "ini": 386, "plugin": 386, "600": 386, "func_onli": 386, "670": 386, "681": 386, "08": 386, "684": [386, 387], "1202": 386, "llruntim": 386, "watcher": 386, "watch": 386, "109": 386, "465": 386, "ttnn_t5": 386, "6ba823894": 386, "149": 386, "484": 386, "487": 386, "216": 386, "489": 386, "721": 386, "359902381896973": 386, "07123565673828": 386, "722": 386, "102": 386, "44269247283137575": 386, "detach": 386, "summari": 386, "627": 386, "638": 386, "639": 386, "458": 386, "224": 386, "460": 386, "292": 386, "164": 386, "22393798828125": 386, "165": 386, "322504758834839": 386, "407821983919596": 386, "pd": 386, "glob": 386, "getenv": 386, "get_latest_report": 386, "base_path": 386, "latest_dir": 386, "listdir": 386, "isdir": 386, "getmtim": 386, "valueerror": [386, 387], "latest_profile_report": 386, "df": 386, "read_csv": 386, "2024_02_09_01_38_37": 386, "ops_perf_results_resnet_2024_02_09_01_38_37": 386, "output_0_w": 386, "output_0_z": 386, "output_0_i": 386, "output_0_x": 386, "output_0_layout": 386, "output_0_data": 386, "output_0_memori": 386, "depth": 386, "compileprogram": 386, "load_tensor_ttnn": 386, "137428381893955": 386, "137428382188762": 386, "294807": 386, "137428382500949": 386, "137428399402163": 386, "16901214": 386, "137428399802068": 386, "137428399873758": 386, "71690": 386, "137428400102635": 386, "137428400351033": 386, "248398": 386, "137428400548071": 386, "137428400792528": 386, "244457": 386, "4391": 386, "reshape_ttnn": 386, "4392": 386, "137450414555424": 386, "137450414599894": 386, "44470": 386, "4393": 386, "137450414740752": 386, "137450414782422": 386, "41670": 386, "4394": 386, "bcast_batch": 386, "tt_me": 386, "108": 386, "matmulparallelizationstrategi": 386, "multi_cor": 386, "137450414881851": 386, "137450414983440": 386, "101589": 386, "32128": 386, "dev_0_dram_interleav": 386, "4395": 386, "137450415113099": 386, "137450415158748": 386, "45649": 386, "from_device_ttnn": 386, "4396": 386, "137450415235897": 386, "137450453493048": 386, "38257151": 386, "fold_batch_norm2d_into_conv2d": 387, "168": 387, "82": 387, "768": 387, "242": 387, "conv1d": 387, "246": 387, "248": 387, "249": 387, "250": [387, 388], "251": 387, "253": 387, "254": 387, "255": 387, "258": 387, "262": 387, "avg_pool2d": 387, "266": 387, "268": 387, "269": 387, "device_param": 387, "24576": 387, "310": 387, "324": 387, "325": 387, "363": 387, "conv3x3": 387, "in_plan": 387, "out_plan": 387, "3x3": 387, "torchbasicblock": 387, "expans": 387, "inplan": 387, "base_width": 387, "norm_lay": 387, "basicblock": 387, "notimplementederror": 387, "conv1": 387, "bn1": 387, "conv2": 387, "bn2": 387, "torch_model": 387, "state_dict": [387, 388], "create_custom_preprocessor": 387, "conv_weight_1": 387, "conv_bias_1": 387, "conv_weight_2": 387, "conv_bias_2": 387, "682": 387, "683": 387, "499": 387, "_initialize_model_and_preprocess_paramet": 387, "449": 387, "717": 387, "718": 387, "model_resnet_block_graph": 387, "conv_param": 387, "act_block_h": 387, "reshard": 387, "height_shard": 387, "shard_layout": 387, "__call__": 387, "conv_config": 387, "conv2dconfig": 387, "weights_dtyp": 387, "fp32_dest_acc_en": 387, "packer_l1_accum_en": 387, "input_channels_align": 387, "deallocate_activ": 387, "act_block_h_overrid": 387, "_out_height": 387, "_out_width": 387, "weight_tensor": 387, "bias_tensor": 387, "input_height": 387, "input_width": 387, "return_output_s": 387, "return_prepared_device_weight": 387, "ttnnbasicblock": 387, "get_memory_config": 387, "ttnn_model": 387, "12638": 387, "walk": 388, "mirror": 388, "colab": 388, "research": 388, "run_dit": 388, "ipynb": 388, "tab": 388, "ov": 388, "assumpt": 388, "chdir": 388, "content": 388, "upgrad": 388, "save_imag": 388, "create_diffus": 388, "autoencoderkl": 388, "find_model": 388, "collis": 388, "pil": 388, "set_grad_en": 388, "cuda": 388, "is_avail": 388, "gpu": 388, "322": 388, "fatal": 388, "destin": 388, "date": 388, "safetensor": 388, "sympi": 388, "mpmath": 388, "image_s": 388, "512": 388, "vae_model": 388, "stabilityai": 388, "sd": 388, "vae": 388, "ft": 388, "ema": 388, "mse": 388, "latent_s": 388, "input_s": 388, "pt": 388, "load_state_dict": 388, "num_sampling_step": 388, "slider": 388, "cfg_scale": 388, "class_label": 388, "207": 388, "387": 388, "974": 388, "88": 388, "979": 388, "417": 388, "279": 388, "samples_per_row": 388, "nois": 388, "len": 388, "classifi": 388, "free": 388, "guidanc": 388, "y_null": 388, "model_kwarg": 388, "p_sample_loop": 388, "forward_with_cfg": 388, "clip_denois": 388, "null": 388, "18215": 388, "dit_model_graph": 388, "png": 388, "nrow": 388, "value_rang": 388, "06": 388, "987": 388, "210": 388, "show_svg": 388, "snippet": 389, "matmul_output_tensor": 389, "torch_matmul_output_tensor": 389, "unlik": 389, "start_tim": 389, "end_tim": 389, "stdout": 389, "6391518115997314": 389, "0007393360137939453": 389, "9998": 389, "too": 389, "exp_trac": 389, "substitut": 389, "disk": 389, "implementaiton": 389, "addition": 389, "ttnn_config_path": 389, "2048": 389, "app": 389, "pre_hook_to_print_args_and_kwarg": 389, "post_hook_to_print_output": 389, "query_registered_oper": 389, "begin_graph_captur": 389, "runmod": 389, "no_dispatch": 389, "captured_graph": 389, "end_graph_captur": 389, "pretty_print": 389}, "objects": {"tt_lib.fallback_ops": [[368, 0, 1, "", "AdaptiveAvgPool2d"], [368, 0, 1, "", "BatchNorm2d"], [368, 0, 1, "", "Conv2d"], [368, 0, 1, "", "GroupNorm"], [368, 0, 1, "", "LayerNorm"], [368, 0, 1, "", "MaxPool2d"], [368, 0, 1, "", "binary_bitwise_and"], [368, 0, 1, "", "binary_bitwise_left_shift"], [368, 0, 1, "", "binary_bitwise_or"], [368, 0, 1, "", "binary_bitwise_right_shift"], [368, 0, 1, "", "binary_bitwise_xor"], [368, 0, 1, "", "binary_fmod"], [368, 0, 1, "", "bitwise_not"], [368, 0, 1, "", "ceil"], [368, 1, 1, "", "chunk"], [368, 1, 1, "", "concat"], [368, 1, 1, "", "conv2d"], [368, 0, 1, "", "floor"], [368, 1, 1, "", "full"], [368, 1, 1, "", "group_norm"], [368, 1, 1, "", "interpolate"], [368, 1, 1, "", "layer_norm"], [368, 1, 1, "", "pad"], [368, 1, 1, "", "repeat"], [368, 1, 1, "", "repeat_interleave"], [368, 1, 1, "", "reshape"], [368, 1, 1, "", "silu"], [368, 1, 1, "", "softmax"], [368, 1, 1, "", "tensor_slice"], [368, 0, 1, "", "torch_argmax"], [368, 0, 1, "", "torch_argmin"], [368, 0, 1, "", "trunc"], [368, 0, 1, "", "unary_bitwise_and"], [368, 0, 1, "", "unary_bitwise_left_shift"], [368, 0, 1, "", "unary_bitwise_or"], [368, 0, 1, "", "unary_bitwise_right_shift"], [368, 0, 1, "", "unary_bitwise_xor"], [368, 0, 1, "", "unary_fmod"]], "tt_lib.fused_ops.add_and_norm": [[368, 1, 1, "", "AddAndNorm"]], "tt_lib.fused_ops.layernorm": [[368, 1, 1, "", "Layernorm"]], "tt_lib.fused_ops.linear": [[368, 1, 1, "", "Linear"]], "ttnn": [[368, 0, 1, "", "BcastOpDim"], [368, 0, 1, "", "BcastOpMath"], [8, 1, 1, "", "GetDefaultDevice"], [367, 0, 1, "", "MemoryConfig"], [9, 1, 1, "", "SetDefaultDevice"], [373, 0, 1, "", "Shape"], [367, 0, 1, "", "Tensor"], [10, 1, 1, "", "abs"], [11, 1, 1, "", "abs_bw"], [12, 1, 1, "", "acos"], [13, 1, 1, "", "acos_bw"], [14, 1, 1, "", "acosh"], [15, 1, 1, "", "acosh_bw"], [16, 1, 1, "", "add"], [17, 1, 1, "", "add_bw"], [18, 1, 1, "", "addalpha"], [19, 1, 1, "", "addalpha_bw"], [20, 1, 1, "", "addcdiv"], [21, 1, 1, "", "addcdiv_bw"], [22, 1, 1, "", "addcmul"], [23, 1, 1, "", "addcmul_bw"], [24, 1, 1, "", "all_gather"], [25, 1, 1, "", "angle"], [26, 1, 1, "", "angle_bw"], [27, 1, 1, "", "arange"], [28, 1, 1, "", "argmax"], [29, 1, 1, "", "as_tensor"], [30, 1, 1, "", "asin"], [31, 1, 1, "", "asin_bw"], [32, 1, 1, "", "asinh"], [33, 1, 1, "", "asinh_bw"], [34, 1, 1, "", "assign_bw"], [35, 1, 1, "", "atan"], [36, 1, 1, "", "atan2"], [37, 1, 1, "", "atan2_bw"], [38, 1, 1, "", "atan_bw"], [39, 1, 1, "", "atanh"], [40, 1, 1, "", "atanh_bw"], [41, 1, 1, "", "batch_norm"], [42, 1, 1, "", "bias_gelu_bw"], [43, 1, 1, "", "bitwise_and"], [44, 1, 1, "", "bitwise_left_shift"], [45, 1, 1, "", "bitwise_not"], [46, 1, 1, "", "bitwise_or"], [47, 1, 1, "", "bitwise_right_shift"], [48, 1, 1, "", "bitwise_xor"], [49, 1, 1, "", "cbrt"], [50, 1, 1, "", "ceil"], [51, 1, 1, "", "ceil_bw"], [52, 1, 1, "", "celu"], [53, 1, 1, "", "celu_bw"], [54, 1, 1, "", "clamp"], [55, 1, 1, "", "clamp_bw"], [56, 1, 1, "", "clip"], [57, 1, 1, "", "clip_bw"], [58, 1, 1, "", "clone"], [59, 1, 1, "", "close_device"], [60, 1, 1, "", "concat"], [61, 1, 1, "", "concat_bw"], [62, 1, 1, "", "conj"], [63, 1, 1, "", "conj_bw"], [64, 1, 1, "", "cos"], [65, 1, 1, "", "cos_bw"], [66, 1, 1, "", "cosh"], [67, 1, 1, "", "cosh_bw"], [68, 1, 1, "", "create_sharded_memory_config"], [69, 1, 1, "", "deallocate"], [70, 1, 1, "", "deg2rad"], [71, 1, 1, "", "deg2rad_bw"], [72, 1, 1, "", "digamma"], [73, 1, 1, "", "digamma_bw"], [74, 1, 1, "", "div"], [75, 1, 1, "", "div_bw"], [76, 1, 1, "", "div_no_nan"], [77, 1, 1, "", "div_no_nan_bw"], [78, 1, 1, "", "downsample"], [79, 1, 1, "", "dump_tensor"], [80, 1, 1, "", "elu"], [81, 1, 1, "", "elu_bw"], [82, 1, 1, "", "embedding"], [83, 1, 1, "", "embedding_bw"], [84, 1, 1, "", "empty"], [85, 1, 1, "", "empty_like"], [86, 1, 1, "", "eq"], [87, 1, 1, "", "eq_"], [88, 1, 1, "", "eqz"], [89, 1, 1, "", "erf"], [90, 1, 1, "", "erf_bw"], [91, 1, 1, "", "erfc"], [92, 1, 1, "", "erfc_bw"], [93, 1, 1, "", "erfinv"], [94, 1, 1, "", "erfinv_bw"], [95, 1, 1, "", "exp"], [96, 1, 1, "", "exp2"], [97, 1, 1, "", "exp2_bw"], [98, 1, 1, "", "exp_bw"], [104, 1, 1, "", "expm1"], [105, 1, 1, "", "expm1_bw"], [106, 1, 1, "", "fill"], [107, 1, 1, "", "fill_bw"], [108, 1, 1, "", "fill_ones_rm"], [109, 1, 1, "", "fill_rm"], [110, 1, 1, "", "fill_zero_bw"], [111, 1, 1, "", "floor"], [112, 1, 1, "", "floor_bw"], [113, 1, 1, "", "floor_div"], [114, 1, 1, "", "fmod"], [115, 1, 1, "", "fmod_bw"], [116, 1, 1, "", "format_input_tensor"], [117, 1, 1, "", "format_output_tensor"], [118, 1, 1, "", "frac"], [119, 1, 1, "", "frac_bw"], [120, 1, 1, "", "from_device"], [121, 1, 1, "", "from_torch"], [122, 1, 1, "", "full"], [123, 1, 1, "", "full_like"], [124, 1, 1, "", "gcd"], [125, 1, 1, "", "ge"], [126, 1, 1, "", "ge_"], [127, 1, 1, "", "geglu"], [128, 1, 1, "", "gelu"], [129, 1, 1, "", "gelu_bw"], [130, 1, 1, "", "gez"], [131, 1, 1, "", "global_avg_pool2d"], [132, 1, 1, "", "glu"], [133, 1, 1, "", "group_norm"], [134, 1, 1, "", "gt"], [135, 1, 1, "", "gt_"], [136, 1, 1, "", "gtz"], [137, 1, 1, "", "hardshrink"], [138, 1, 1, "", "hardshrink_bw"], [139, 1, 1, "", "hardsigmoid"], [140, 1, 1, "", "hardsigmoid_bw"], [141, 1, 1, "", "hardswish"], [142, 1, 1, "", "hardswish_bw"], [143, 1, 1, "", "hardtanh"], [144, 1, 1, "", "hardtanh_bw"], [145, 1, 1, "", "heaviside"], [146, 1, 1, "", "hypot"], [147, 1, 1, "", "hypot_bw"], [148, 1, 1, "", "i0"], [149, 1, 1, "", "i0_bw"], [150, 1, 1, "", "identity"], [151, 1, 1, "", "imag"], [152, 1, 1, "", "imag_bw"], [153, 1, 1, "", "indexed_fill"], [154, 1, 1, "", "is_imag"], [155, 1, 1, "", "is_real"], [156, 1, 1, "", "isclose"], [157, 1, 1, "", "isfinite"], [158, 1, 1, "", "isinf"], [159, 1, 1, "", "isnan"], [160, 1, 1, "", "isneginf"], [161, 1, 1, "", "isposinf"], [164, 1, 1, "", "l1_loss"], [165, 1, 1, "", "layer_norm"], [166, 1, 1, "", "lcm"], [167, 1, 1, "", "ldexp"], [168, 1, 1, "", "ldexp_bw"], [169, 1, 1, "", "le"], [170, 1, 1, "", "le_"], [171, 1, 1, "", "leaky_relu"], [172, 1, 1, "", "leaky_relu_bw"], [173, 1, 1, "", "lerp"], [174, 1, 1, "", "lerp_bw"], [175, 1, 1, "", "lez"], [176, 1, 1, "", "lgamma"], [177, 1, 1, "", "lgamma_bw"], [178, 1, 1, "", "linear"], [179, 1, 1, "", "load_tensor"], [180, 1, 1, "", "log"], [181, 1, 1, "", "log10"], [182, 1, 1, "", "log10_bw"], [183, 1, 1, "", "log1p"], [184, 1, 1, "", "log1p_bw"], [185, 1, 1, "", "log2"], [186, 1, 1, "", "log2_bw"], [187, 1, 1, "", "log_bw"], [188, 1, 1, "", "log_sigmoid"], [189, 1, 1, "", "log_sigmoid_bw"], [190, 1, 1, "", "logaddexp"], [191, 1, 1, "", "logaddexp2"], [192, 1, 1, "", "logaddexp2_bw"], [193, 1, 1, "", "logaddexp_bw"], [194, 1, 1, "", "logical_and"], [195, 1, 1, "", "logical_and_"], [196, 1, 1, "", "logical_not"], [197, 1, 1, "", "logical_not_"], [198, 1, 1, "", "logical_or"], [199, 1, 1, "", "logical_or_"], [200, 1, 1, "", "logical_xor"], [201, 1, 1, "", "logical_xor_"], [202, 1, 1, "", "logit"], [203, 1, 1, "", "logit_bw"], [204, 1, 1, "", "logiteps_bw"], [205, 1, 1, "", "lt"], [206, 1, 1, "", "lt_"], [207, 1, 1, "", "ltz"], [208, 1, 1, "", "mac"], [209, 1, 1, "", "manage_device"], [210, 1, 1, "", "matmul"], [211, 1, 1, "", "max"], [212, 1, 1, "", "max_bw"], [213, 1, 1, "", "max_pool2d"], [214, 1, 1, "", "maximum"], [215, 1, 1, "", "mean"], [216, 1, 1, "", "min"], [217, 1, 1, "", "min_bw"], [218, 1, 1, "", "minimum"], [219, 1, 1, "", "mish"], [222, 1, 1, "", "moreh_sum"], [223, 1, 1, "", "mse_loss"], [224, 1, 1, "", "mul_bw"], [225, 1, 1, "", "multigammaln"], [226, 1, 1, "", "multigammaln_bw"], [227, 1, 1, "", "multiply"], [228, 1, 1, "", "ne"], [229, 1, 1, "", "ne_"], [230, 1, 1, "", "neg"], [231, 1, 1, "", "neg_bw"], [232, 1, 1, "", "nextafter"], [233, 1, 1, "", "nez"], [234, 1, 1, "", "nonzero"], [235, 1, 1, "", "normalize_global"], [236, 1, 1, "", "normalize_hw"], [237, 1, 1, "", "ones"], [238, 1, 1, "", "ones_like"], [239, 1, 1, "", "open_device"], [240, 1, 1, "", "outer"], [241, 1, 1, "", "pad"], [242, 1, 1, "", "pad_to_tile_shape"], [243, 1, 1, "", "permute"], [244, 1, 1, "", "polar"], [245, 1, 1, "", "polar_bw"], [246, 1, 1, "", "polygamma"], [247, 1, 1, "", "polygamma_bw"], [248, 1, 1, "", "polyval"], [249, 1, 1, "", "pow"], [250, 1, 1, "", "pow_bw"], [251, 1, 1, "", "prelu"], [252, 1, 1, "", "prod"], [253, 1, 1, "", "prod_bw"], [254, 1, 1, "", "rad2deg"], [255, 1, 1, "", "rad2deg_bw"], [256, 1, 1, "", "rdiv"], [257, 1, 1, "", "rdiv_bw"], [258, 1, 1, "", "real"], [259, 1, 1, "", "real_bw"], [260, 1, 1, "", "reallocate"], [261, 1, 1, "", "reciprocal"], [262, 1, 1, "", "reciprocal_bw"], [263, 1, 1, "", "reduce_scatter"], [264, 1, 1, "", "register_post_operation_hook"], [265, 1, 1, "", "register_pre_operation_hook"], [266, 1, 1, "", "reglu"], [267, 1, 1, "", "relu"], [268, 1, 1, "", "relu6"], [269, 1, 1, "", "relu6_bw"], [270, 1, 1, "", "relu_bw"], [271, 1, 1, "", "relu_max"], [272, 1, 1, "", "relu_min"], [273, 1, 1, "", "remainder"], [274, 1, 1, "", "remainder_bw"], [275, 1, 1, "", "repeat"], [276, 1, 1, "", "repeat_bw"], [277, 1, 1, "", "repeat_interleave"], [278, 1, 1, "", "reshape"], [279, 1, 1, "", "rms_norm"], [280, 1, 1, "", "round"], [281, 1, 1, "", "round_bw"], [282, 1, 1, "", "rpow"], [283, 1, 1, "", "rpow_bw"], [284, 1, 1, "", "rsqrt"], [285, 1, 1, "", "rsqrt_bw"], [286, 1, 1, "", "rsub"], [287, 1, 1, "", "rsub_bw"], [288, 1, 1, "", "scatter"], [289, 1, 1, "", "selu"], [290, 1, 1, "", "selu_bw"], [291, 1, 1, "", "set_printoptions"], [292, 1, 1, "", "sigmoid"], [293, 1, 1, "", "sigmoid_accurate"], [294, 1, 1, "", "sigmoid_bw"], [295, 1, 1, "", "sign"], [296, 1, 1, "", "sign_bw"], [297, 1, 1, "", "signbit"], [298, 1, 1, "", "silu"], [299, 1, 1, "", "silu_bw"], [300, 1, 1, "", "sin"], [301, 1, 1, "", "sin_bw"], [302, 1, 1, "", "sinh"], [303, 1, 1, "", "sinh_bw"], [304, 1, 1, "", "slice"], [305, 1, 1, "", "softmax"], [306, 1, 1, "", "softplus"], [307, 1, 1, "", "softplus_bw"], [308, 1, 1, "", "softshrink"], [309, 1, 1, "", "softshrink_bw"], [310, 1, 1, "", "softsign"], [311, 1, 1, "", "softsign_bw"], [312, 1, 1, "", "sqrt"], [313, 1, 1, "", "sqrt_bw"], [314, 1, 1, "", "square"], [315, 1, 1, "", "square_bw"], [316, 1, 1, "", "squared_difference"], [317, 1, 1, "", "squared_difference_bw"], [318, 1, 1, "", "std"], [319, 1, 1, "", "sub_bw"], [320, 1, 1, "", "subalpha"], [321, 1, 1, "", "subalpha_bw"], [322, 1, 1, "", "subtract"], [323, 1, 1, "", "sum"], [324, 1, 1, "", "swiglu"], [325, 1, 1, "", "swish"], [326, 1, 1, "", "synchronize_device"], [327, 1, 1, "", "tan"], [328, 1, 1, "", "tan_bw"], [329, 1, 1, "", "tanh"], [330, 1, 1, "", "tanh_bw"], [331, 1, 1, "", "tanhshrink"], [332, 1, 1, "", "tanhshrink_bw"], [333, 1, 1, "", "threshold"], [334, 1, 1, "", "threshold_bw"], [335, 1, 1, "", "tilize"], [336, 1, 1, "", "tilize_with_val_padding"], [337, 1, 1, "", "to_device"], [338, 1, 1, "", "to_layout"], [339, 1, 1, "", "to_memory_config"], [340, 1, 1, "", "to_torch"], [341, 1, 1, "", "topk"], [348, 1, 1, "", "tril"], [349, 1, 1, "", "triu"], [350, 1, 1, "", "trunc"], [351, 1, 1, "", "trunc_bw"], [352, 1, 1, "", "unary_chain"], [353, 1, 1, "", "untilize"], [354, 1, 1, "", "untilize_with_unpadding"], [355, 1, 1, "", "upsample"], [356, 1, 1, "", "var"], [357, 1, 1, "", "where"], [358, 1, 1, "", "where_bw"], [359, 1, 1, "", "xlogy"], [360, 1, 1, "", "xlogy_bw"], [361, 1, 1, "", "zeros"], [362, 1, 1, "", "zeros_like"]], "ttnn.MemoryConfig": [[367, 2, 1, "", "__init__"]], "ttnn.Shape": [[373, 3, 1, "", "rank"], [373, 2, 1, "", "to_rank"]], "ttnn.Tensor": [[367, 2, 1, "", "__init__"], [367, 2, 1, "", "buffer"], [368, 1, 1, "", "cpu"], [367, 2, 1, "", "device"], [367, 2, 1, "", "get_dtype"], [367, 2, 1, "", "get_layout"], [367, 2, 1, "", "pad"], [367, 2, 1, "", "pad_to_tile"], [367, 2, 1, "", "storage_type"], [367, 2, 1, "", "to"], [367, 2, 1, "", "unpad"], [367, 2, 1, "", "unpad_from_tile"]], "ttnn.experimental": [[99, 1, 1, "", "all_reduce"], [100, 1, 1, "", "dropout"], [101, 1, 1, "", "gelu_bw"], [102, 1, 1, "", "rotary_embedding"], [103, 1, 1, "", "sort"]], "ttnn.kv_cache": [[162, 1, 1, "", "fill_cache_for_user_"], [163, 1, 1, "", "update_cache_for_token_"]], "ttnn.model_preprocessing": [[220, 1, 1, "", "preprocess_model"], [221, 1, 1, "", "preprocess_model_parameters"]], "ttnn.operations.moreh": [[368, 1, 1, "", "group_norm"], [368, 1, 1, "", "group_norm_backward"], [368, 1, 1, "", "logsoftmax"], [368, 1, 1, "", "logsoftmax_backward"], [368, 1, 1, "", "mean"], [368, 1, 1, "", "mean_backward"], [368, 1, 1, "", "norm"], [368, 1, 1, "", "norm_backward"], [368, 1, 1, "", "softmax"], [368, 1, 1, "", "softmax_backward"], [368, 1, 1, "", "softmin"], [368, 1, 1, "", "softmin_backward"]], "ttnn.transformer": [[342, 1, 1, "", "attention_softmax"], [343, 1, 1, "", "attention_softmax_"], [344, 1, 1, "", "concatenate_heads"], [345, 1, 1, "", "scaled_dot_product_attention"], [346, 1, 1, "", "scaled_dot_product_attention_decode"], [347, 1, 1, "", "split_query_key_value_and_split_heads"]]}, "objtypes": {"0": "py:class", "1": "py:function", "2": "py:method", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "function", "Python function"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "tt": [0, 365, 367, 368, 369, 370], "nn": [0, 369, 370], "document": 0, "ttnn": [0, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 372, 375, 378, 381, 382, 384, 385, 386, 387, 389], "model": [0, 4, 7, 363, 369, 370, 384, 385, 388], "resourc": 0, "indic": 0, "tabl": 0, "contribut": [1, 370], "develop": 1, "support": [2, 389], "report": [2, 7, 372], "bug": 2, "featur": [2, 5], "propos": 2, "request": 2, "troubleshoot": 2, "debug": [2, 389], "tip": 2, "commun": 2, "perform": [3, 383], "prerequisit": [3, 4, 370], "run": [3, 4, 365, 384, 387, 389], "perf": [3, 372], "file": 3, "all": [3, 370, 389], "get": [4, 369, 387], "start": [4, 369], "an": [4, 389], "exampl": [4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 338, 339, 340, 348, 349, 350, 351, 352, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 370, 389], "next": 4, "step": [4, 6, 363, 370], "what": [5, 6], "i": [5, 6], "kei": 5, "ad": 6, "new": [6, 368, 371], "oper": [6, 7, 363, 368, 372, 376, 380, 382, 385, 386, 389], "faq": 6, "ar": [6, 370], "need": 6, "add": [6, 16, 380, 382], "c": [6, 389], "python": [6, 389], "devic": [6, 7, 365, 368, 370, 382, 383, 384, 389], "implement": [6, 384, 387], "1": [6, 363, 369, 370, 389], "2": [6, 363, 368, 369, 370, 388, 389], "bind": 6, "option": [6, 368, 370], "golden": 6, "function": [6, 371, 385, 389], "api": [7, 367, 368, 373], "memori": [7, 373], "config": [7, 373, 383], "core": 7, "tensor": [7, 365, 367, 368, 373, 380, 382, 383, 389], "creation": 7, "matrix": [7, 383], "multipl": [7, 373, 383], "pointwis": 7, "unari": 7, "binari": 7, "ternari": 7, "loss": 7, "reduct": 7, "data": [7, 373, 382], "movement": 7, "normal": 7, "moreh": 7, "transform": [7, 342, 343, 344, 345, 346, 347], "ccl": 7, "embed": [7, 82], "pool": 7, "vision": 7, "kv": 7, "cach": [7, 368, 383, 384, 389], "convers": 7, "hook": [7, 389], "getdefaultdevic": 8, "setdefaultdevic": 9, "ab": 10, "abs_bw": 11, "aco": 12, "acos_bw": 13, "acosh": 14, "acosh_bw": 15, "add_bw": 17, "addalpha": 18, "addalpha_bw": 19, "addcdiv": 20, "addcdiv_bw": 21, "addcmul": 22, "addcmul_bw": 23, "all_gath": 24, "angl": 25, "angle_bw": 26, "arang": 27, "argmax": 28, "as_tensor": 29, "asin": 30, "asin_bw": 31, "asinh": 32, "asinh_bw": 33, "assign_bw": 34, "atan": 35, "atan2": 36, "atan2_bw": 37, "atan_bw": 38, "atanh": 39, "atanh_bw": 40, "batch_norm": 41, "bias_gelu_bw": 42, "bitwise_and": 43, "bitwise_left_shift": 44, "bitwise_not": 45, "bitwise_or": 46, "bitwise_right_shift": 47, "bitwise_xor": 48, "cbrt": 49, "ceil": 50, "ceil_bw": 51, "celu": 52, "celu_bw": 53, "clamp": 54, "clamp_bw": 55, "clip": 56, "clip_bw": 57, "clone": [58, 370, 388], "close_devic": 59, "concat": 60, "concat_bw": 61, "conj": 62, "conj_bw": 63, "co": 64, "cos_bw": 65, "cosh": 66, "cosh_bw": 67, "create_sharded_memory_config": 68, "dealloc": 69, "deg2rad": 70, "deg2rad_bw": 71, "digamma": 72, "digamma_bw": 73, "div": 74, "div_bw": 75, "div_no_nan": 76, "div_no_nan_bw": 77, "downsampl": 78, "dump_tensor": 79, "elu": 80, "elu_bw": 81, "embedding_bw": 83, "empti": 84, "empty_lik": 85, "eq": 86, "eq_": 87, "eqz": 88, "erf": 89, "erf_bw": 90, "erfc": 91, "erfc_bw": 92, "erfinv": 93, "erfinv_bw": 94, "exp": 95, "exp2": 96, "exp2_bw": 97, "exp_bw": 98, "experiment": [99, 100, 101, 102, 103, 368], "all_reduc": 99, "dropout": 100, "gelu_bw": [101, 129], "rotary_embed": 102, "sort": 103, "expm1": 104, "expm1_bw": 105, "fill": 106, "fill_bw": 107, "fill_ones_rm": 108, "fill_rm": 109, "fill_zero_bw": 110, "floor": 111, "floor_bw": 112, "floor_div": 113, "fmod": 114, "fmod_bw": 115, "format_input_tensor": 116, "format_output_tensor": 117, "frac": 118, "frac_bw": 119, "from_devic": 120, "from_torch": 121, "full": 122, "full_lik": 123, "gcd": 124, "ge": 125, "ge_": 126, "geglu": 127, "gelu": 128, "gez": 130, "global_avg_pool2d": 131, "glu": 132, "group_norm": 133, "gt": 134, "gt_": 135, "gtz": 136, "hardshrink": 137, "hardshrink_bw": 138, "hardsigmoid": 139, "hardsigmoid_bw": 140, "hardswish": 141, "hardswish_bw": 142, "hardtanh": 143, "hardtanh_bw": 144, "heavisid": 145, "hypot": 146, "hypot_bw": 147, "i0": 148, "i0_bw": 149, "ident": 150, "imag": [151, 370], "imag_bw": 152, "indexed_fil": 153, "is_imag": 154, "is_real": 155, "isclos": 156, "isfinit": 157, "isinf": 158, "isnan": 159, "isneginf": 160, "isposinf": 161, "kv_cach": [162, 163], "fill_cache_for_user_": 162, "update_cache_for_token_": 163, "l1_loss": 164, "layer_norm": 165, "lcm": 166, "ldexp": 167, "ldexp_bw": 168, "le": 169, "le_": 170, "leaky_relu": 171, "leaky_relu_bw": 172, "lerp": 173, "lerp_bw": 174, "lez": 175, "lgamma": 176, "lgamma_bw": 177, "linear": 178, "load_tensor": 179, "log": [180, 368, 389], "log10": 181, "log10_bw": 182, "log1p": 183, "log1p_bw": 184, "log2": 185, "log2_bw": 186, "log_bw": 187, "log_sigmoid": 188, "log_sigmoid_bw": 189, "logaddexp": 190, "logaddexp2": 191, "logaddexp2_bw": 192, "logaddexp_bw": 193, "logical_and": 194, "logical_and_": 195, "logical_not": 196, "logical_not_": 197, "logical_or": 198, "logical_or_": 199, "logical_xor": 200, "logical_xor_": 201, "logit": 202, "logit_bw": 203, "logiteps_bw": 204, "lt": 205, "lt_": 206, "ltz": 207, "mac": 208, "manage_devic": 209, "matmul": [210, 376], "max": 211, "max_bw": 212, "max_pool2d": 213, "maximum": 214, "mean": 215, "min": 216, "min_bw": 217, "minimum": 218, "mish": 219, "model_preprocess": [220, 221], "preprocess_model": 220, "preprocess_model_paramet": 221, "moreh_sum": 222, "mse_loss": 223, "mul_bw": 224, "multigammaln": 225, "multigammaln_bw": 226, "multipli": [227, 383], "ne": 228, "ne_": 229, "neg": 230, "neg_bw": 231, "nextaft": 232, "nez": 233, "nonzero": 234, "normalize_glob": 235, "normalize_hw": 236, "ones": 237, "ones_lik": 238, "open_devic": 239, "outer": 240, "pad": 241, "pad_to_tile_shap": 242, "permut": 243, "polar": 244, "polar_bw": 245, "polygamma": 246, "polygamma_bw": 247, "polyv": 248, "pow": 249, "pow_bw": 250, "prelu": 251, "prod": 252, "prod_bw": 253, "rad2deg": 254, "rad2deg_bw": 255, "rdiv": 256, "rdiv_bw": 257, "real": 258, "real_bw": 259, "realloc": 260, "reciproc": 261, "reciprocal_bw": 262, "reduce_scatt": 263, "register_post_operation_hook": 264, "register_pre_operation_hook": 265, "reglu": 266, "relu": 267, "relu6": 268, "relu6_bw": 269, "relu_bw": 270, "relu_max": 271, "relu_min": 272, "remaind": 273, "remainder_bw": 274, "repeat": 275, "repeat_bw": 276, "repeat_interleav": 277, "reshap": 278, "rms_norm": 279, "round": 280, "round_bw": 281, "rpow": 282, "rpow_bw": 283, "rsqrt": 284, "rsqrt_bw": 285, "rsub": 286, "rsub_bw": 287, "scatter": 288, "selu": 289, "selu_bw": 290, "set_printopt": 291, "sigmoid": 292, "sigmoid_accur": 293, "sigmoid_bw": 294, "sign": 295, "sign_bw": 296, "signbit": 297, "silu": 298, "silu_bw": 299, "sin": 300, "sin_bw": 301, "sinh": 302, "sinh_bw": 303, "slice": [304, 389], "softmax": 305, "softplu": 306, "softplus_bw": 307, "softshrink": 308, "softshrink_bw": 309, "softsign": 310, "softsign_bw": 311, "sqrt": 312, "sqrt_bw": 313, "squar": 314, "square_bw": 315, "squared_differ": 316, "squared_difference_bw": 317, "std": 318, "sub_bw": 319, "subalpha": 320, "subalpha_bw": 321, "subtract": 322, "sum": 323, "swiglu": 324, "swish": 325, "synchronize_devic": 326, "tan": 327, "tan_bw": 328, "tanh": 329, "tanh_bw": 330, "tanhshrink": 331, "tanhshrink_bw": 332, "threshold": 333, "threshold_bw": 334, "tiliz": 335, "tilize_with_val_pad": 336, "to_devic": 337, "to_layout": 338, "to_memory_config": 339, "to_torch": 340, "topk": 341, "attention_softmax": 342, "attention_softmax_": 343, "concatenate_head": 344, "scaled_dot_product_attent": 345, "scaled_dot_product_attention_decod": 346, "split_query_key_value_and_split_head": 347, "tril": 348, "triu": 349, "trunc": 350, "trunc_bw": 351, "unary_chain": 352, "until": 353, "untilize_with_unpad": 354, "upsampl": 355, "var": 356, "where": [357, 369], "where_bw": 358, "xlogi": 359, "xlogy_bw": 360, "zero": 361, "zeros_lik": 362, "convert": [363, 367, 382, 384, 389], "torch": [363, 375, 382, 383, 384, 385, 387, 389], "rewrit": 363, "switch": 363, "3": [363, 369, 370, 389], "optim": [363, 369, 384], "more": [363, 383], "build": [364, 369, 370, 388], "uplift": 364, "demo": [364, 369], "lib": [365, 368], "us": [365, 382, 383, 384, 385, 389], "one": 365, "op": 365, "from": [365, 368, 369, 370, 387, 388, 389], "acceler": 365, "pytorch": [365, 367, 388], "odd": 365, "size": 365, "last": 365, "dim": 365, "depend": [366, 370], "overview": [367, 368], "storag": [367, 373, 382], "memoryconfig": 367, "between": 367, "infrastructur": 368, "member": 368, "input": 368, "output": [368, 382, 383, 384], "profil": [368, 372, 378, 386], "fast": 368, "dispatch": 368, "program": [368, 370, 383, 384, 389], "through": 368, "tt_lib": [368, 389], "primari": 368, "enum": 368, "fallback": 368, "fuse": 368, "mini": 368, "graph": [368, 375, 387, 388, 389], "librari": [368, 388], "complex": 368, "type": [368, 373, 382], "instal": [369, 370], "explor": 369, "our": [369, 370], "tutori": [369, 374], "multi": [369, 370, 377, 384], "head": [369, 377, 384], "attent": [369, 377, 384], "simpl": 369, "4": [369, 389], "To": [369, 370], "go": 369, "here": 369, "set": 370, "up": 370, "hardwar": 370, "driver": 370, "firmwar": 370, "system": 370, "level": 370, "kmd": 370, "updat": 370, "flash": 370, "manag": 370, "interfac": 370, "smi": 370, "card": 370, "configur": [370, 383, 384], "topologi": 370, "metalium": 370, "There": 370, "three": 370, "sourc": 370, "repositori": 370, "invok": 370, "script": 370, "docker": 370, "releas": 370, "wheel": 370, "download": [370, 388], "latest": 370, "For": 370, "user": 370, "onli": 370, "environ": 370, "you": 370, "verifi": 370, "your": 370, "try": 370, "execut": 370, "interest": 370, "onboard": 371, "header": 372, "profile_thi": 372, "descript": 372, "shape": 373, "layout": [373, 382, 383], "requir": 373, "width": 373, "limit": 373, "bfloat8_b": 373, "shard": 373, "dit_xl_2": 375, "With": 375, "resnet": [379, 387], "basic": [379, 389], "block": [379, 387], "tracer": 381, "creat": [382, 387], "host": 382, "borrow": 382, "v": 382, "own": 382, "open": 382, "initi": [382, 383, 384], "b": [382, 383], "random": [382, 383], "valu": [382, 383], "inspect": [382, 383], "attribut": 382, "close": [382, 383, 384], "enabl": [383, 384, 389], "result": 383, "write": 384, "activ": 384, "weight": 384, "first": 384, "iter": 384, "subsequ": 384, "version": [384, 387], "pre": [384, 388, 389], "process": 384, "paramet": [384, 387], "check": 384, "match": 384, "origin": 384, "trace": [385, 387, 389], "modul": [385, 387], "written": 385, "torchvis": 387, "preprocess": 387, "displai": [387, 388], "pass": 387, "constructor": 387, "base": 388, "http": 388, "github": 388, "com": 388, "facebookresearch": 388, "dit": 388, "git": 388, "xl": 388, "sampl": 388, "train": 388, "__getitem__": 389, "5": 389, "intermedi": 389, "6": 389, "7": 389, "8": 389, "9": 389, "10": 389, "chang": 389, "string": 389, "represent": 389, "11": 389, "visual": 389, "web": 389, "browser": 389, "12": 389, "regist": 389, "post": 389, "13": 389, "queri": 389, "14": 389, "fall": 389, "back": 389, "15": 389, "captur": 389, "buffer": 389, "alloc": 389, "etc": 389}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Welcome to TT-NN documentation!": [[0, "welcome-to-tt-nn-documentation"]], "TTNN": [[0, null]], "Models": [[0, null]], "Resources": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Contributing as a developer": [[1, "contributing-as-a-developer"]], "Support": [[2, "support"]], "Reporting bugs, feature proposals, or support requests": [[2, "reporting-bugs-feature-proposals-or-support-requests"]], "Troubleshooting and debugging tips": [[2, "troubleshooting-and-debugging-tips"]], "Community": [[2, "community"]], "Performance": [[3, "performance"]], "Prerequisites": [[3, "prerequisites"], [4, "prerequisites"]], "Running a perf file": [[3, "running-a-perf-file"]], "Running all the perf files": [[3, "running-all-the-perf-files"]], "Getting Started": [[4, "getting-started"], [369, "getting-started"]], "Running an example model": [[4, "running-an-example-model"]], "Next steps": [[4, "next-steps"]], "What is ttnn?": [[5, "what-is-ttnn"]], "Key features of ttnn": [[5, "key-features-of-ttnn"]], "Adding New ttnn Operation": [[6, "adding-new-ttnn-operation"]], "FAQ": [[6, "faq"]], "What is a ttnn operation?": [[6, "what-is-a-ttnn-operation"]], "What steps are needed to add ttnn operation in C++?": [[6, "what-steps-are-needed-to-add-ttnn-operation-in-c"]], "What steps are needed to add ttnn operation in Python?": [[6, "what-steps-are-needed-to-add-ttnn-operation-in-python"]], "Example of Adding a new Device Operation": [[6, "example-of-adding-a-new-device-operation"]], "C++ Implementation": [[6, "c-implementation"]], "Step 1: Implement device operation": [[6, "step-1-implement-device-operation"]], "Step 2: Implement the operation in C++": [[6, "step-2-implement-the-operation-in-c"]], "Python Implementation": [[6, "python-implementation"]], "Step 1: Add Python binding": [[6, "step-1-add-python-binding"]], "Step 2: (Optional) Add golden function for the operation in Python": [[6, "step-2-optional-add-golden-function-for-the-operation-in-python"]], "APIs": [[7, "apis"], [373, "apis"]], "Device": [[7, "device"]], "Memory Config": [[7, "memory-config"], [373, "memory-config"]], "Operations": [[7, "operations"]], "Core": [[7, "core"]], "Tensor Creation": [[7, "tensor-creation"]], "Matrix Multiplication": [[7, "matrix-multiplication"], [383, "Matrix-Multiplication"]], "Pointwise Unary": [[7, "pointwise-unary"]], "Pointwise Binary": [[7, "pointwise-binary"]], "Pointwise Ternary": [[7, "pointwise-ternary"]], "Losses": [[7, "losses"]], "Reduction": [[7, "reduction"]], "Data Movement": [[7, "data-movement"]], "Normalization": [[7, "normalization"]], "Moreh Operations": [[7, "moreh-operations"]], "Transformer": [[7, "transformer"]], "CCL": [[7, "ccl"]], "Embedding": [[7, "embedding"]], "Pooling": [[7, "pooling"]], "Vision": [[7, "vision"]], "KV Cache": [[7, "kv-cache"]], "Model Conversion": [[7, "model-conversion"]], "Reports": [[7, "reports"]], "Operation Hooks": [[7, "operation-hooks"]], "ttnn.GetDefaultDevice": [[8, "ttnn-getdefaultdevice"]], "Example": [[8, null], [9, null], [10, null], [11, null], [12, null], [13, null], [14, null], [15, null], [16, null], [17, null], [18, null], [19, null], [20, null], [21, null], [22, null], [23, null], [24, null], [25, null], [26, null], [27, null], [30, null], [31, null], [32, null], [33, null], [34, null], [35, null], [36, null], [37, null], [38, null], [39, null], [40, null], [41, null], [42, null], [43, null], [44, null], [45, null], [46, null], [47, null], [48, null], [49, null], [50, null], [51, null], [52, null], [53, null], [54, null], [55, null], [56, null], [57, null], [59, null], [60, null], [61, null], [62, null], [63, null], [64, null], [65, null], [66, null], [67, null], [68, null], [69, null], [70, null], [71, null], [72, null], [73, null], [74, null], [75, null], [76, null], [77, null], [79, null], [80, null], [81, null], [82, null], [83, null], [84, null], [85, null], [86, null], [87, null], [88, null], [89, null], [90, null], [91, null], [92, null], [93, null], [94, null], [95, null], [96, null], [97, null], [98, null], [99, null], [100, null], [101, null], [104, null], [105, null], [106, null], [107, null], [110, null], [111, null], [112, null], [113, null], [114, null], [115, null], [116, null], [117, null], [118, null], [119, null], [120, null], [121, null], [122, null], [123, null], [124, null], [125, null], [126, null], [127, null], [128, null], [129, null], [130, null], [131, null], [132, null], [134, null], [135, null], [136, null], [137, null], [138, null], [139, null], [140, null], [141, null], [142, null], [143, null], [144, null], [145, null], [146, null], [147, null], [148, null], [149, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [157, null], [158, null], [159, null], [160, null], [161, null], [164, null], [166, null], [167, null], [168, null], [169, null], [170, null], [171, null], [172, null], [173, null], [174, null], [175, null], [176, null], [177, null], [178, null], [179, null], [180, null], [181, null], [182, null], [183, null], [184, null], [185, null], [186, null], [187, null], [188, null], [189, null], [190, null], [191, null], [192, null], [193, null], [194, null], [195, null], [196, null], [197, null], [198, null], [199, null], [200, null], [201, null], [202, null], [203, null], [204, null], [205, null], [206, null], [207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null], [214, null], [215, null], [216, null], [217, null], [218, null], [219, null], [223, null], [224, null], [225, null], [226, null], [227, null], [228, null], [229, null], [230, null], [231, null], [232, null], [233, null], [234, null], [235, null], [236, null], [237, null], [238, null], [239, null], [240, null], [242, null], [244, null], [245, null], [246, null], [247, null], [248, null], [249, null], [250, null], [251, null], [253, null], [254, null], [255, null], [256, null], [257, null], [258, null], [259, null], [260, null], [261, null], [262, null], [263, null], [266, null], [267, null], [268, null], [269, null], [270, null], [271, null], [272, null], [273, null], [274, null], [275, null], [276, null], [278, null], [280, null], [281, null], [282, null], [283, null], [284, null], [285, null], [286, null], [287, null], [288, null], [289, null], [290, null], [292, null], [293, null], [294, null], [295, null], [296, null], [297, null], [298, null], [299, null], [300, null], [301, null], [302, null], [303, null], [304, null], [305, null], [306, null], [307, null], [308, null], [309, null], [310, null], [311, null], [312, null], [313, null], [314, null], [315, null], [316, null], [317, null], [318, null], [319, null], [320, null], [321, null], [322, null], [323, null], [324, null], [325, null], [327, null], [328, null], [329, null], [330, null], [331, null], [332, null], [333, null], [334, null], [338, null], [339, null], [340, null], [348, null], [349, null], [350, null], [351, null], [352, null], [356, null], [357, null], [358, null], [359, null], [360, null], [361, null], [362, null]], "ttnn.SetDefaultDevice": [[9, "ttnn-setdefaultdevice"]], "ttnn.abs": [[10, "ttnn-abs"]], "ttnn.abs_bw": [[11, "ttnn-abs-bw"]], "ttnn.acos": [[12, "ttnn-acos"]], "ttnn.acos_bw": [[13, "ttnn-acos-bw"]], "ttnn.acosh": [[14, "ttnn-acosh"]], "ttnn.acosh_bw": [[15, "ttnn-acosh-bw"]], "ttnn.add": [[16, "ttnn-add"]], "ttnn.add_bw": [[17, "ttnn-add-bw"]], "ttnn.addalpha": [[18, "ttnn-addalpha"]], "ttnn.addalpha_bw": [[19, "ttnn-addalpha-bw"]], "ttnn.addcdiv": [[20, "ttnn-addcdiv"]], "ttnn.addcdiv_bw": [[21, "ttnn-addcdiv-bw"]], "ttnn.addcmul": [[22, "ttnn-addcmul"]], "ttnn.addcmul_bw": [[23, "ttnn-addcmul-bw"]], "ttnn.all_gather": [[24, "ttnn-all-gather"]], "ttnn.angle": [[25, "ttnn-angle"]], "ttnn.angle_bw": [[26, "ttnn-angle-bw"]], "ttnn.arange": [[27, "ttnn-arange"]], "ttnn.argmax": [[28, "ttnn-argmax"]], "ttnn.as_tensor": [[29, "ttnn-as-tensor"]], "Examples": [[29, null], [291, null]], "ttnn.asin": [[30, "ttnn-asin"]], "ttnn.asin_bw": [[31, "ttnn-asin-bw"]], "ttnn.asinh": [[32, "ttnn-asinh"]], "ttnn.asinh_bw": [[33, "ttnn-asinh-bw"]], "ttnn.assign_bw": [[34, "ttnn-assign-bw"]], "ttnn.atan": [[35, "ttnn-atan"]], "ttnn.atan2": [[36, "ttnn-atan2"]], "ttnn.atan2_bw": [[37, "ttnn-atan2-bw"]], "ttnn.atan_bw": [[38, "ttnn-atan-bw"]], "ttnn.atanh": [[39, "ttnn-atanh"]], "ttnn.atanh_bw": [[40, "ttnn-atanh-bw"]], "ttnn.batch_norm": [[41, "ttnn-batch-norm"]], "ttnn.bias_gelu_bw": [[42, "ttnn-bias-gelu-bw"]], "ttnn.bitwise_and": [[43, "ttnn-bitwise-and"]], "ttnn.bitwise_left_shift": [[44, "ttnn-bitwise-left-shift"]], "ttnn.bitwise_not": [[45, "ttnn-bitwise-not"]], "ttnn.bitwise_or": [[46, "ttnn-bitwise-or"]], "ttnn.bitwise_right_shift": [[47, "ttnn-bitwise-right-shift"]], "ttnn.bitwise_xor": [[48, "ttnn-bitwise-xor"]], "ttnn.cbrt": [[49, "ttnn-cbrt"]], "ttnn.ceil": [[50, "ttnn-ceil"]], "ttnn.ceil_bw": [[51, "ttnn-ceil-bw"]], "ttnn.celu": [[52, "ttnn-celu"]], "ttnn.celu_bw": [[53, "ttnn-celu-bw"]], "ttnn.clamp": [[54, "ttnn-clamp"]], "ttnn.clamp_bw": [[55, "ttnn-clamp-bw"]], "ttnn.clip": [[56, "ttnn-clip"]], "ttnn.clip_bw": [[57, "ttnn-clip-bw"]], "ttnn.clone": [[58, "ttnn-clone"]], "ttnn.close_device": [[59, "ttnn-close-device"]], "ttnn.concat": [[60, "ttnn-concat"]], "ttnn.concat_bw": [[61, "ttnn-concat-bw"]], "ttnn.conj": [[62, "ttnn-conj"]], "ttnn.conj_bw": [[63, "ttnn-conj-bw"]], "ttnn.cos": [[64, "ttnn-cos"]], "ttnn.cos_bw": [[65, "ttnn-cos-bw"]], "ttnn.cosh": [[66, "ttnn-cosh"]], "ttnn.cosh_bw": [[67, "ttnn-cosh-bw"]], "ttnn.create_sharded_memory_config": [[68, "ttnn-create-sharded-memory-config"]], "ttnn.deallocate": [[69, "ttnn-deallocate"]], "ttnn.deg2rad": [[70, "ttnn-deg2rad"]], "ttnn.deg2rad_bw": [[71, "ttnn-deg2rad-bw"]], "ttnn.digamma": [[72, "ttnn-digamma"]], "ttnn.digamma_bw": [[73, "ttnn-digamma-bw"]], "ttnn.div": [[74, "ttnn-div"]], "ttnn.div_bw": [[75, "ttnn-div-bw"]], "ttnn.div_no_nan": [[76, "ttnn-div-no-nan"]], "ttnn.div_no_nan_bw": [[77, "ttnn-div-no-nan-bw"]], "ttnn.downsample": [[78, "ttnn-downsample"]], "ttnn.dump_tensor": [[79, "ttnn-dump-tensor"]], "ttnn.elu": [[80, "ttnn-elu"]], "ttnn.elu_bw": [[81, "ttnn-elu-bw"]], "ttnn.embedding": [[82, "ttnn-embedding"]], "ttnn.embedding_bw": [[83, "ttnn-embedding-bw"]], "ttnn.empty": [[84, "ttnn-empty"]], "ttnn.empty_like": [[85, "ttnn-empty-like"]], "ttnn.eq": [[86, "ttnn-eq"]], "ttnn.eq_": [[87, "ttnn-eq"]], "ttnn.eqz": [[88, "ttnn-eqz"]], "ttnn.erf": [[89, "ttnn-erf"]], "ttnn.erf_bw": [[90, "ttnn-erf-bw"]], "ttnn.erfc": [[91, "ttnn-erfc"]], "ttnn.erfc_bw": [[92, "ttnn-erfc-bw"]], "ttnn.erfinv": [[93, "ttnn-erfinv"]], "ttnn.erfinv_bw": [[94, "ttnn-erfinv-bw"]], "ttnn.exp": [[95, "ttnn-exp"]], "ttnn.exp2": [[96, "ttnn-exp2"]], "ttnn.exp2_bw": [[97, "ttnn-exp2-bw"]], "ttnn.exp_bw": [[98, "ttnn-exp-bw"]], "ttnn.experimental.all_reduce": [[99, "ttnn-experimental-all-reduce"]], "ttnn.experimental.dropout": [[100, "ttnn-experimental-dropout"]], "ttnn.experimental.gelu_bw": [[101, "ttnn-experimental-gelu-bw"]], "ttnn.experimental.rotary_embedding": [[102, "ttnn-experimental-rotary-embedding"]], "ttnn.experimental.sort": [[103, "ttnn-experimental-sort"]], "ttnn.expm1": [[104, "ttnn-expm1"]], "ttnn.expm1_bw": [[105, "ttnn-expm1-bw"]], "ttnn.fill": [[106, "ttnn-fill"]], "ttnn.fill_bw": [[107, "ttnn-fill-bw"]], "ttnn.fill_ones_rm": [[108, "ttnn-fill-ones-rm"]], "ttnn.fill_rm": [[109, "ttnn-fill-rm"]], "ttnn.fill_zero_bw": [[110, "ttnn-fill-zero-bw"]], "ttnn.floor": [[111, "ttnn-floor"]], "ttnn.floor_bw": [[112, "ttnn-floor-bw"]], "ttnn.floor_div": [[113, "ttnn-floor-div"]], "ttnn.fmod": [[114, "ttnn-fmod"]], "ttnn.fmod_bw": [[115, "ttnn-fmod-bw"]], "ttnn.format_input_tensor": [[116, "ttnn-format-input-tensor"]], "ttnn.format_output_tensor": [[117, "ttnn-format-output-tensor"]], "ttnn.frac": [[118, "ttnn-frac"]], "ttnn.frac_bw": [[119, "ttnn-frac-bw"]], "ttnn.from_device": [[120, "ttnn-from-device"]], "ttnn.from_torch": [[121, "ttnn-from-torch"]], "ttnn.full": [[122, "ttnn-full"]], "ttnn.full_like": [[123, "ttnn-full-like"]], "ttnn.gcd": [[124, "ttnn-gcd"]], "ttnn.ge": [[125, "ttnn-ge"]], "ttnn.ge_": [[126, "ttnn-ge"]], "ttnn.geglu": [[127, "ttnn-geglu"]], "ttnn.gelu": [[128, "ttnn-gelu"]], "ttnn.gelu_bw": [[129, "ttnn-gelu-bw"]], "ttnn.gez": [[130, "ttnn-gez"]], "ttnn.global_avg_pool2d": [[131, "ttnn-global-avg-pool2d"]], "ttnn.glu": [[132, "ttnn-glu"]], "ttnn.group_norm": [[133, "ttnn-group-norm"]], "ttnn.gt": [[134, "ttnn-gt"]], "ttnn.gt_": [[135, "ttnn-gt"]], "ttnn.gtz": [[136, "ttnn-gtz"]], "ttnn.hardshrink": [[137, "ttnn-hardshrink"]], "ttnn.hardshrink_bw": [[138, "ttnn-hardshrink-bw"]], "ttnn.hardsigmoid": [[139, "ttnn-hardsigmoid"]], "ttnn.hardsigmoid_bw": [[140, "ttnn-hardsigmoid-bw"]], "ttnn.hardswish": [[141, "ttnn-hardswish"]], "ttnn.hardswish_bw": [[142, "ttnn-hardswish-bw"]], "ttnn.hardtanh": [[143, "ttnn-hardtanh"]], "ttnn.hardtanh_bw": [[144, "ttnn-hardtanh-bw"]], "ttnn.heaviside": [[145, "ttnn-heaviside"]], "ttnn.hypot": [[146, "ttnn-hypot"]], "ttnn.hypot_bw": [[147, "ttnn-hypot-bw"]], "ttnn.i0": [[148, "ttnn-i0"]], "ttnn.i0_bw": [[149, "ttnn-i0-bw"]], "ttnn.identity": [[150, "ttnn-identity"]], "ttnn.imag": [[151, "ttnn-imag"]], "ttnn.imag_bw": [[152, "ttnn-imag-bw"]], "ttnn.indexed_fill": [[153, "ttnn-indexed-fill"]], "ttnn.is_imag": [[154, "ttnn-is-imag"]], "ttnn.is_real": [[155, "ttnn-is-real"]], "ttnn.isclose": [[156, "ttnn-isclose"]], "ttnn.isfinite": [[157, "ttnn-isfinite"]], "ttnn.isinf": [[158, "ttnn-isinf"]], "ttnn.isnan": [[159, "ttnn-isnan"]], "ttnn.isneginf": [[160, "ttnn-isneginf"]], "ttnn.isposinf": [[161, "ttnn-isposinf"]], "ttnn.kv_cache.fill_cache_for_user_": [[162, "ttnn-kv-cache-fill-cache-for-user"]], "ttnn.kv_cache.update_cache_for_token_": [[163, "ttnn-kv-cache-update-cache-for-token"]], "ttnn.l1_loss": [[164, "ttnn-l1-loss"]], "ttnn.layer_norm": [[165, "ttnn-layer-norm"]], "ttnn.lcm": [[166, "ttnn-lcm"]], "ttnn.ldexp": [[167, "ttnn-ldexp"]], "ttnn.ldexp_bw": [[168, "ttnn-ldexp-bw"]], "ttnn.le": [[169, "ttnn-le"]], "ttnn.le_": [[170, "ttnn-le"]], "ttnn.leaky_relu": [[171, "ttnn-leaky-relu"]], "ttnn.leaky_relu_bw": [[172, "ttnn-leaky-relu-bw"]], "ttnn.lerp": [[173, "ttnn-lerp"]], "ttnn.lerp_bw": [[174, "ttnn-lerp-bw"]], "ttnn.lez": [[175, "ttnn-lez"]], "ttnn.lgamma": [[176, "ttnn-lgamma"]], "ttnn.lgamma_bw": [[177, "ttnn-lgamma-bw"]], "ttnn.linear": [[178, "ttnn-linear"]], "ttnn.load_tensor": [[179, "ttnn-load-tensor"]], "ttnn.log": [[180, "ttnn-log"]], "ttnn.log10": [[181, "ttnn-log10"]], "ttnn.log10_bw": [[182, "ttnn-log10-bw"]], "ttnn.log1p": [[183, "ttnn-log1p"]], "ttnn.log1p_bw": [[184, "ttnn-log1p-bw"]], "ttnn.log2": [[185, "ttnn-log2"]], "ttnn.log2_bw": [[186, "ttnn-log2-bw"]], "ttnn.log_bw": [[187, "ttnn-log-bw"]], "ttnn.log_sigmoid": [[188, "ttnn-log-sigmoid"]], "ttnn.log_sigmoid_bw": [[189, "ttnn-log-sigmoid-bw"]], "ttnn.logaddexp": [[190, "ttnn-logaddexp"]], "ttnn.logaddexp2": [[191, "ttnn-logaddexp2"]], "ttnn.logaddexp2_bw": [[192, "ttnn-logaddexp2-bw"]], "ttnn.logaddexp_bw": [[193, "ttnn-logaddexp-bw"]], "ttnn.logical_and": [[194, "ttnn-logical-and"]], "ttnn.logical_and_": [[195, "ttnn-logical-and"]], "ttnn.logical_not": [[196, "ttnn-logical-not"]], "ttnn.logical_not_": [[197, "ttnn-logical-not"]], "ttnn.logical_or": [[198, "ttnn-logical-or"]], "ttnn.logical_or_": [[199, "ttnn-logical-or"]], "ttnn.logical_xor": [[200, "ttnn-logical-xor"]], "ttnn.logical_xor_": [[201, "ttnn-logical-xor"]], "ttnn.logit": [[202, "ttnn-logit"]], "ttnn.logit_bw": [[203, "ttnn-logit-bw"]], "ttnn.logiteps_bw": [[204, "ttnn-logiteps-bw"]], "ttnn.lt": [[205, "ttnn-lt"]], "ttnn.lt_": [[206, "ttnn-lt"]], "ttnn.ltz": [[207, "ttnn-ltz"]], "ttnn.mac": [[208, "ttnn-mac"]], "ttnn.manage_device": [[209, "ttnn-manage-device"]], "ttnn.matmul": [[210, "ttnn-matmul"]], "ttnn.max": [[211, "ttnn-max"]], "ttnn.max_bw": [[212, "ttnn-max-bw"]], "ttnn.max_pool2d": [[213, "ttnn-max-pool2d"]], "ttnn.maximum": [[214, "ttnn-maximum"]], "ttnn.mean": [[215, "ttnn-mean"]], "ttnn.min": [[216, "ttnn-min"]], "ttnn.min_bw": [[217, "ttnn-min-bw"]], "ttnn.minimum": [[218, "ttnn-minimum"]], "ttnn.mish": [[219, "ttnn-mish"]], "ttnn.model_preprocessing.preprocess_model": [[220, "ttnn-model-preprocessing-preprocess-model"]], "ttnn.model_preprocessing.preprocess_model_parameters": [[221, "ttnn-model-preprocessing-preprocess-model-parameters"]], "ttnn.moreh_sum": [[222, "ttnn-moreh-sum"]], "ttnn.mse_loss": [[223, "ttnn-mse-loss"]], "ttnn.mul_bw": [[224, "ttnn-mul-bw"]], "ttnn.multigammaln": [[225, "ttnn-multigammaln"]], "ttnn.multigammaln_bw": [[226, "ttnn-multigammaln-bw"]], "ttnn.multiply": [[227, "ttnn-multiply"]], "ttnn.ne": [[228, "ttnn-ne"]], "ttnn.ne_": [[229, "ttnn-ne"]], "ttnn.neg": [[230, "ttnn-neg"]], "ttnn.neg_bw": [[231, "ttnn-neg-bw"]], "ttnn.nextafter": [[232, "ttnn-nextafter"]], "ttnn.nez": [[233, "ttnn-nez"]], "ttnn.nonzero": [[234, "ttnn-nonzero"]], "ttnn.normalize_global": [[235, "ttnn-normalize-global"]], "ttnn.normalize_hw": [[236, "ttnn-normalize-hw"]], "ttnn.ones": [[237, "ttnn-ones"]], "ttnn.ones_like": [[238, "ttnn-ones-like"]], "ttnn.open_device": [[239, "ttnn-open-device"]], "ttnn.outer": [[240, "ttnn-outer"]], "ttnn.pad": [[241, "ttnn-pad"]], "ttnn.pad_to_tile_shape": [[242, "ttnn-pad-to-tile-shape"]], "ttnn.permute": [[243, "ttnn-permute"]], "ttnn.polar": [[244, "ttnn-polar"]], "ttnn.polar_bw": [[245, "ttnn-polar-bw"]], "ttnn.polygamma": [[246, "ttnn-polygamma"]], "ttnn.polygamma_bw": [[247, "ttnn-polygamma-bw"]], "ttnn.polyval": [[248, "ttnn-polyval"]], "ttnn.pow": [[249, "ttnn-pow"]], "ttnn.pow_bw": [[250, "ttnn-pow-bw"]], "ttnn.prelu": [[251, "ttnn-prelu"]], "ttnn.prod": [[252, "ttnn-prod"]], "ttnn.prod_bw": [[253, "ttnn-prod-bw"]], "ttnn.rad2deg": [[254, "ttnn-rad2deg"]], "ttnn.rad2deg_bw": [[255, "ttnn-rad2deg-bw"]], "ttnn.rdiv": [[256, "ttnn-rdiv"]], "ttnn.rdiv_bw": [[257, "ttnn-rdiv-bw"]], "ttnn.real": [[258, "ttnn-real"]], "ttnn.real_bw": [[259, "ttnn-real-bw"]], "ttnn.reallocate": [[260, "ttnn-reallocate"]], "ttnn.reciprocal": [[261, "ttnn-reciprocal"]], "ttnn.reciprocal_bw": [[262, "ttnn-reciprocal-bw"]], "ttnn.reduce_scatter": [[263, "ttnn-reduce-scatter"]], "ttnn.register_post_operation_hook": [[264, "ttnn-register-post-operation-hook"]], "ttnn.register_pre_operation_hook": [[265, "ttnn-register-pre-operation-hook"]], "ttnn.reglu": [[266, "ttnn-reglu"]], "ttnn.relu": [[267, "ttnn-relu"]], "ttnn.relu6": [[268, "ttnn-relu6"]], "ttnn.relu6_bw": [[269, "ttnn-relu6-bw"]], "ttnn.relu_bw": [[270, "ttnn-relu-bw"]], "ttnn.relu_max": [[271, "ttnn-relu-max"]], "ttnn.relu_min": [[272, "ttnn-relu-min"]], "ttnn.remainder": [[273, "ttnn-remainder"]], "ttnn.remainder_bw": [[274, "ttnn-remainder-bw"]], "ttnn.repeat": [[275, "ttnn-repeat"]], "ttnn.repeat_bw": [[276, "ttnn-repeat-bw"]], "ttnn.repeat_interleave": [[277, "ttnn-repeat-interleave"]], "ttnn.reshape": [[278, "ttnn-reshape"]], "ttnn.rms_norm": [[279, "ttnn-rms-norm"]], "ttnn.round": [[280, "ttnn-round"]], "ttnn.round_bw": [[281, "ttnn-round-bw"]], "ttnn.rpow": [[282, "ttnn-rpow"]], "ttnn.rpow_bw": [[283, "ttnn-rpow-bw"]], "ttnn.rsqrt": [[284, "ttnn-rsqrt"]], "ttnn.rsqrt_bw": [[285, "ttnn-rsqrt-bw"]], "ttnn.rsub": [[286, "ttnn-rsub"]], "ttnn.rsub_bw": [[287, "ttnn-rsub-bw"]], "ttnn.scatter": [[288, "ttnn-scatter"]], "ttnn.selu": [[289, "ttnn-selu"]], "ttnn.selu_bw": [[290, "ttnn-selu-bw"]], "ttnn.set_printoptions": [[291, "ttnn-set-printoptions"]], "ttnn.sigmoid": [[292, "ttnn-sigmoid"]], "ttnn.sigmoid_accurate": [[293, "ttnn-sigmoid-accurate"]], "ttnn.sigmoid_bw": [[294, "ttnn-sigmoid-bw"]], "ttnn.sign": [[295, "ttnn-sign"]], "ttnn.sign_bw": [[296, "ttnn-sign-bw"]], "ttnn.signbit": [[297, "ttnn-signbit"]], "ttnn.silu": [[298, "ttnn-silu"]], "ttnn.silu_bw": [[299, "ttnn-silu-bw"]], "ttnn.sin": [[300, "ttnn-sin"]], "ttnn.sin_bw": [[301, "ttnn-sin-bw"]], "ttnn.sinh": [[302, "ttnn-sinh"]], "ttnn.sinh_bw": [[303, "ttnn-sinh-bw"]], "ttnn.slice": [[304, "ttnn-slice"]], "ttnn.softmax": [[305, "ttnn-softmax"]], "ttnn.softplus": [[306, "ttnn-softplus"]], "ttnn.softplus_bw": [[307, "ttnn-softplus-bw"]], "ttnn.softshrink": [[308, "ttnn-softshrink"]], "ttnn.softshrink_bw": [[309, "ttnn-softshrink-bw"]], "ttnn.softsign": [[310, "ttnn-softsign"]], "ttnn.softsign_bw": [[311, "ttnn-softsign-bw"]], "ttnn.sqrt": [[312, "ttnn-sqrt"]], "ttnn.sqrt_bw": [[313, "ttnn-sqrt-bw"]], "ttnn.square": [[314, "ttnn-square"]], "ttnn.square_bw": [[315, "ttnn-square-bw"]], "ttnn.squared_difference": [[316, "ttnn-squared-difference"]], "ttnn.squared_difference_bw": [[317, "ttnn-squared-difference-bw"]], "ttnn.std": [[318, "ttnn-std"]], "ttnn.sub_bw": [[319, "ttnn-sub-bw"]], "ttnn.subalpha": [[320, "ttnn-subalpha"]], "ttnn.subalpha_bw": [[321, "ttnn-subalpha-bw"]], "ttnn.subtract": [[322, "ttnn-subtract"]], "ttnn.sum": [[323, "ttnn-sum"]], "ttnn.swiglu": [[324, "ttnn-swiglu"]], "ttnn.swish": [[325, "ttnn-swish"]], "ttnn.synchronize_device": [[326, "ttnn-synchronize-device"]], "ttnn.tan": [[327, "ttnn-tan"]], "ttnn.tan_bw": [[328, "ttnn-tan-bw"]], "ttnn.tanh": [[329, "ttnn-tanh"]], "ttnn.tanh_bw": [[330, "ttnn-tanh-bw"]], "ttnn.tanhshrink": [[331, "ttnn-tanhshrink"]], "ttnn.tanhshrink_bw": [[332, "ttnn-tanhshrink-bw"]], "ttnn.threshold": [[333, "ttnn-threshold"]], "ttnn.threshold_bw": [[334, "ttnn-threshold-bw"]], "ttnn.tilize": [[335, "ttnn-tilize"]], "ttnn.tilize_with_val_padding": [[336, "ttnn-tilize-with-val-padding"]], "ttnn.to_device": [[337, "ttnn-to-device"]], "ttnn.to_layout": [[338, "ttnn-to-layout"]], "ttnn.to_memory_config": [[339, "ttnn-to-memory-config"]], "ttnn.to_torch": [[340, "ttnn-to-torch"]], "ttnn.topk": [[341, "ttnn-topk"]], "ttnn.transformer.attention_softmax": [[342, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.attention_softmax_": [[343, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.concatenate_heads": [[344, "ttnn-transformer-concatenate-heads"]], "ttnn.transformer.scaled_dot_product_attention": [[345, "ttnn-transformer-scaled-dot-product-attention"]], "ttnn.transformer.scaled_dot_product_attention_decode": [[346, "ttnn-transformer-scaled-dot-product-attention-decode"]], "ttnn.transformer.split_query_key_value_and_split_heads": [[347, "ttnn-transformer-split-query-key-value-and-split-heads"]], "ttnn.tril": [[348, "ttnn-tril"]], "ttnn.triu": [[349, "ttnn-triu"]], "ttnn.trunc": [[350, "ttnn-trunc"]], "ttnn.trunc_bw": [[351, "ttnn-trunc-bw"]], "ttnn.unary_chain": [[352, "ttnn-unary-chain"]], "ttnn.untilize": [[353, "ttnn-untilize"]], "ttnn.untilize_with_unpadding": [[354, "ttnn-untilize-with-unpadding"]], "ttnn.upsample": [[355, "ttnn-upsample"]], "ttnn.var": [[356, "ttnn-var"]], "ttnn.where": [[357, "ttnn-where"]], "ttnn.where_bw": [[358, "ttnn-where-bw"]], "ttnn.xlogy": [[359, "ttnn-xlogy"]], "ttnn.xlogy_bw": [[360, "ttnn-xlogy-bw"]], "ttnn.zeros": [[361, "ttnn-zeros"]], "ttnn.zeros_like": [[362, "ttnn-zeros-like"]], "Converting torch Model to ttnn": [[363, "converting-torch-model-to-ttnn"]], "Step 1 - Rewriting the Model": [[363, "step-1-rewriting-the-model"]], "Step 2 - Switching to ttnn Operations": [[363, "step-2-switching-to-ttnn-operations"]], "Step 3 - Optimizing the Model": [[363, "step-3-optimizing-the-model"]], "More examples": [[363, "more-examples"]], "Building and Uplifting Demos": [[364, "building-and-uplifting-demos"]], "Examples of Tensor and TT-LIB Use": [[365, "examples-of-tensor-and-tt-lib-use"]], "Run one OP from TT-LIB on TT Accelerator device": [[365, "run-one-op-from-tt-lib-on-tt-accelerator-device"]], "Run TT-LIB and PyTorch OPs": [[365, "run-tt-lib-and-pytorch-ops"]], "Tensors with odd size of last dim": [[365, "tensors-with-odd-size-of-last-dim"]], "Dependencies": [[366, "dependencies"]], "Tensor": [[367, "tensor"], [373, "tensor"]], "Overview": [[367, "overview"], [368, "overview"]], "Tensor Storage": [[367, "tensor-storage"]], "Tensor API": [[367, "tensor-api"]], "MemoryConfig": [[367, "memoryconfig"]], "Examples of converting between PyTorch Tensor and TT Tensor": [[367, "examples-of-converting-between-pytorch-tensor-and-tt-tensor"]], "Converting a PyTorch Tensor to a TT Tensor": [[367, "converting-a-pytorch-tensor-to-a-tt-tensor"]], "Converting a TT Tensor to a PyTorch Tensor": [[367, "converting-a-tt-tensor-to-a-pytorch-tensor"]], "TT-LIB": [[368, "tt-lib"]], "Operation Infrastructure": [[368, "operation-infrastructure"]], "New Device Operation": [[368, "new-device-operation"]], "New Device Operation with a member": [[368, "new-device-operation-with-a-member"]], "New Device Operation with Optional Input Tensors": [[368, "new-device-operation-with-optional-input-tensors"]], "New Device Operation with Optional Output Tensors": [[368, "new-device-operation-with-optional-output-tensors"]], "Profiler": [[368, "profiler"]], "Fast Dispatch": [[368, "fast-dispatch"]], "Program Caching": [[368, "program-caching"]], "Logs": [[368, "logs"]], "TT-LIB API through tt_lib": [[368, "tt-lib-api-through-tt-lib"]], "Primary Operations": [[368, "primary-operations"]], "Enums": [[368, "enums"]], "Fallback Operations": [[368, "fallback-operations"]], "Experimental Operations": [[368, "experimental-operations"]], "Fused Operations from tt_lib Mini-Graph Library": [[368, "fused-operations-from-tt-lib-mini-graph-library"]], "Complex Operations (Type 2)": [[368, "complex-operations-type-2"]], "1. Install and Build": [[369, "install-and-build"]], "2. Explore Our Model Demos": [[369, "explore-our-model-demos"]], "3. TT-NN Tutorial: Multi-Head Attention (Simple)": [[369, "tt-nn-tutorial-multi-head-attention-simple"]], "4. TT-NN Tutorial: Multi-Head Attention (Optimized)": [[369, "tt-nn-tutorial-multi-head-attention-optimized"]], "Where To Go From Here": [[369, "where-to-go-from-here"]], "Install": [[370, "install"]], "Prerequisites:": [[370, "prerequisites"]], "1: Set Up the Hardware": [[370, "set-up-the-hardware"]], "2: Install Driver & Firmware": [[370, "install-driver-firmware"]], "Install System-level Dependencies": [[370, "install-system-level-dependencies"]], "Install the Driver (TT-KMD)": [[370, "install-the-driver-tt-kmd"]], "Update Device TT-Firmware with TT-Flash": [[370, "update-device-tt-firmware-with-tt-flash"]], "Install System Management Interface (TT-SMI)": [[370, "install-system-management-interface-tt-smi"]], "(Optional) Multi-Card Configuration (TT-Topology)": [[370, "optional-multi-card-configuration-tt-topology"]], "TT-NN / TT-Metalium Installation": [[370, "tt-nn-tt-metalium-installation"]], "There are three options for installing TT-Metalium:": [[370, "there-are-three-options-for-installing-tt-metalium"]], "Option 1: From Source": [[370, "option-1-from-source"]], "Step 1. Clone the Repository:": [[370, "step-1-clone-the-repository"]], "Step 2. Invoke our Build Scripts:": [[370, "step-2-invoke-our-build-scripts"]], "Option 2: From Docker Release Image": [[370, "option-2-from-docker-release-image"]], "Option 3: From Wheel": [[370, "option-3-from-wheel"]], "Step 1. Download and Install the Latest Wheel:": [[370, "step-1-download-and-install-the-latest-wheel"]], "Step 2. (For models users only) Set Up Environment for Models:": [[370, "step-2-for-models-users-only-set-up-environment-for-models"]], "You are All Set!": [[370, "you-are-all-set"]], "To verify your installation, try executing a programming example:": [[370, "to-verify-your-installation-try-executing-a-programming-example"]], "Interested in Contributing?": [[370, "interested-in-contributing"]], "Onboarding New Functionality": [[371, "onboarding-new-functionality"]], "Profiling ttnn Operations": [[372, "profiling-ttnn-operations"]], "Perf Report Headers": [[372, "perf-report-headers"]], "profile_this description": [[372, "profile-this-description"]], "Shape": [[373, "shape"]], "Layout": [[373, "layout"], [382, "Layout"]], "Data Type": [[373, "data-type"], [382, "Data-Type"]], "Required Width Multiples for Data Types": [[373, "id4"]], "Limitation of BFLOAT8_B": [[373, "limitation-of-bfloat8-b"]], "Storage": [[373, "storage"]], "Tensor Sharding": [[373, "tensor-sharding"]], "Tutorials": [[374, "id1"]], "Graphing Torch DiT_XL_2 With TTNN": [[375, "graphing-torch-dit-xl-2-with-ttnn"]], "Matmul Operation": [[376, "matmul-operation"]], "Multi-Head Attention": [[377, "multi-head-attention"], [384, "Multi-Head-Attention"]], "ttnn Profiling": [[378, "ttnn-profiling"]], "Resnet Basic Block": [[379, "resnet-basic-block"]], "Tensor and Add Operation": [[380, "tensor-and-add-operation"], [382, "Tensor-and-Add-Operation"]], "ttnn Tracer": [[381, "ttnn-tracer"]], "Creating a tensor": [[382, "Creating-a-tensor"]], "Host Storage: Borrowed vs Owned": [[382, "Host-Storage:-Borrowed-vs-Owned"]], "Device storage": [[382, "Device-storage"]], "Open the device": [[382, "Open-the-device"]], "Initialize tensors a and b with random values using torch": [[382, "Initialize-tensors-a-and-b-with-random-values-using-torch"], [383, "Initialize-tensors-a-and-b-with-random-values-using-torch"]], "Add tensor a and b": [[382, "Add-tensor-a-and-b"]], "Inspect the output tensor of the add in ttnn": [[382, "Inspect-the-output-tensor-of-the-add-in-ttnn"]], "Convert to torch and inspect the attributes of the torch tensor": [[382, "Convert-to-torch-and-inspect-the-attributes-of-the-torch-tensor"]], "Close the device": [[382, "Close-the-device"], [383, "Close-the-device"], [384, "Close-the-device"]], "Enable program cache": [[383, "Enable-program-cache"], [384, "Enable-program-cache"]], "Configuration": [[383, "Configuration"], [384, "Configuration"]], "Matrix multiply tensor a and b": [[383, "Matrix-multiply-tensor-a-and-b"]], "Inspect the layout of matrix multiplication output": [[383, "Inspect-the-layout-of-matrix-multiplication-output"]], "Inspect the result of the matrix multiplication": [[383, "Inspect-the-result-of-the-matrix-multiplication"]], "Matrix multiply tensor a and b by using more performant config": [[383, "Matrix-multiply-tensor-a-and-b-by-using-more-performant-config"]], "Write Multi-Head Attention using ttnn": [[384, "Write-Multi-Head-Attention-using-ttnn"]], "Initialize activations and weights using torch": [[384, "Initialize-activations-and-weights-using-torch"]], "Convert activations and weights to ttnn": [[384, "Convert-activations-and-weights-to-ttnn"]], "Run the first iteration of Multi-Head Attention": [[384, "Run-the-first-iteration-of-Multi-Head-Attention"]], "Run a subsequent iteration of Multi-Head Attention": [[384, "Run-a-subsequent-iteration-of-Multi-Head-Attention"]], "Write optimized version of Multi-Head Attention": [[384, "Write-optimized-version-of-Multi-Head-Attention"]], "Pre-process the parameters of the optimized model": [[384, "Pre-process-the-parameters-of-the-optimized-model"]], "Run the first iteration of the optimized Multi-Head Attention": [[384, "Run-the-first-iteration-of-the-optimized-Multi-Head-Attention"]], "Run a subsequent iteration of the optimized Multi-Head Attention": [[384, "Run-a-subsequent-iteration-of-the-optimized-Multi-Head-Attention"]], "Check that the output of the optimized version matches the output of the original implementation": [[384, "Check-that-the-output-of-the-optimized-version-matches-the-output-of-the-original-implementation"]], "Tracing ttnn operations and torch modules/functions": [[385, "Tracing-ttnn-operations-and-torch-modules/functions"]], "Trace torch functions": [[385, "Trace-torch-functions"]], "Trace torch functions and ttnn operations": [[385, "Trace-torch-functions-and-ttnn-operations"]], "Trace torch functions, torch modules and ttnn operations": [[385, "Trace-torch-functions,-torch-modules-and-ttnn-operations"]], "Trace models written using ttnn": [[385, "Trace-models-written-using-ttnn"]], "Profiling ttnn operations": [[386, "Profiling-ttnn-operations"]], "Resnet Block": [[387, "Resnet-Block"]], "Torch Module (from torchvision)": [[387, "Torch-Module-(from-torchvision)"]], "Create torch module and preprocess it to get ttnn parameters": [[387, "Create-torch-module-and-preprocess-it-to-get-ttnn-parameters"]], "Display the parameters of the module": [[387, "Display-the-parameters-of-the-module"]], "Display the traced torch graph": [[387, "Display-the-traced-torch-graph"]], "Implement ttnn version of the module. Pass in the parameters into the constructor.": [[387, "Implement-ttnn-version-of-the-module.-Pass-in-the-parameters-into-the-constructor."]], "Run ttnn module and display the traced graph": [[387, "Run-ttnn-module-and-display-the-traced-graph"]], "Build a graph of a pytorch based model": [[388, "Build-a-graph-of-a-pytorch-based-model"]], "Clone the library from https://github.com/facebookresearch/DiT.git": [[388, "Clone-the-library-from-https://github.com/facebookresearch/DiT.git"]], "Download DiT-XL/2 Models": [[388, "Download-DiT-XL/2-Models"]], "Sample from Pre-trained DiT Models and build the graph": [[388, "Sample-from-Pre-trained-DiT-Models-and-build-the-graph"]], "Display the graph": [[388, "Display-the-graph"]], "Using ttnn": [[389, "using-ttnn"]], "Basic Examples": [[389, "basic-examples"]], "1. Converting from and to torch tensor": [[389, "converting-from-and-to-torch-tensor"]], "2. Running an operation on the device": [[389, "running-an-operation-on-the-device"]], "3. Using __getitem__ to slice the tensor": [[389, "using-getitem-to-slice-the-tensor"]], "4. Enabling program cache": [[389, "enabling-program-cache"]], "5. Debugging intermediate tensors": [[389, "debugging-intermediate-tensors"]], "6. Tracing the graph of operations": [[389, "tracing-the-graph-of-operations"]], "7. Using tt_lib operation in ttnn": [[389, "using-tt-lib-operation-in-ttnn"]], "8. Enabling Logging": [[389, "enabling-logging"]], "9. Supported Python Operators": [[389, "supported-python-operators"]], "10. Changing the string representation of the tensor": [[389, "changing-the-string-representation-of-the-tensor"]], "11. Visualize using Web Browser": [[389, "visualize-using-web-browser"]], "12. Register pre- and/or post-operation hooks": [[389, "register-pre-and-or-post-operation-hooks"]], "13. Query all operations": [[389, "query-all-operations"]], "14. Falling back to torch": [[389, "falling-back-to-torch"]], "15. Capturing graph of C++ functions, buffer allocations, etc": [[389, "capturing-graph-of-c-functions-buffer-allocations-etc"]]}, "indexentries": {"getdefaultdevice() (in module ttnn)": [[8, "ttnn.GetDefaultDevice"]], "setdefaultdevice() (in module ttnn)": [[9, "ttnn.SetDefaultDevice"]], "abs() (in module ttnn)": [[10, "ttnn.abs"]], "abs_bw() (in module ttnn)": [[11, "ttnn.abs_bw"]], "acos() (in module ttnn)": [[12, "ttnn.acos"]], "acos_bw() (in module ttnn)": [[13, "ttnn.acos_bw"]], "acosh() (in module ttnn)": [[14, "ttnn.acosh"]], "acosh_bw() (in module ttnn)": [[15, "ttnn.acosh_bw"]], "add() (in module ttnn)": [[16, "ttnn.add"]], "add_bw() (in module ttnn)": [[17, "ttnn.add_bw"]], "addalpha() (in module ttnn)": [[18, "ttnn.addalpha"]], "addalpha_bw() (in module ttnn)": [[19, "ttnn.addalpha_bw"]], "addcdiv() (in module ttnn)": [[20, "ttnn.addcdiv"]], "addcdiv_bw() (in module ttnn)": [[21, "ttnn.addcdiv_bw"]], "addcmul() (in module ttnn)": [[22, "ttnn.addcmul"]], "addcmul_bw() (in module ttnn)": [[23, "ttnn.addcmul_bw"]], "all_gather() (in module ttnn)": [[24, "ttnn.all_gather"]], "angle() (in module ttnn)": [[25, "ttnn.angle"]], "angle_bw() (in module ttnn)": [[26, "ttnn.angle_bw"]], "arange() (in module ttnn)": [[27, "ttnn.arange"]], "argmax() (in module ttnn)": [[28, "ttnn.argmax"]], "as_tensor() (in module ttnn)": [[29, "ttnn.as_tensor"]], "asin() (in module ttnn)": [[30, "ttnn.asin"]], "asin_bw() (in module ttnn)": [[31, "ttnn.asin_bw"]], "asinh() (in module ttnn)": [[32, "ttnn.asinh"]], "asinh_bw() (in module ttnn)": [[33, "ttnn.asinh_bw"]], "assign_bw() (in module ttnn)": [[34, "ttnn.assign_bw"]], "atan() (in module ttnn)": [[35, "ttnn.atan"]], "atan2() (in module ttnn)": [[36, "ttnn.atan2"]], "atan2_bw() (in module ttnn)": [[37, "ttnn.atan2_bw"]], "atan_bw() (in module ttnn)": [[38, "ttnn.atan_bw"]], "atanh() (in module ttnn)": [[39, "ttnn.atanh"]], "atanh_bw() (in module ttnn)": [[40, "ttnn.atanh_bw"]], "batch_norm() (in module ttnn)": [[41, "ttnn.batch_norm"]], "bias_gelu_bw() (in module ttnn)": [[42, "ttnn.bias_gelu_bw"]], "bitwise_and() (in module ttnn)": [[43, "ttnn.bitwise_and"]], "bitwise_left_shift() (in module ttnn)": [[44, "ttnn.bitwise_left_shift"]], "bitwise_not() (in module ttnn)": [[45, "ttnn.bitwise_not"]], "bitwise_or() (in module ttnn)": [[46, "ttnn.bitwise_or"]], "bitwise_right_shift() (in module ttnn)": [[47, "ttnn.bitwise_right_shift"]], "bitwise_xor() (in module ttnn)": [[48, "ttnn.bitwise_xor"]], "cbrt() (in module ttnn)": [[49, "ttnn.cbrt"]], "ceil() (in module ttnn)": [[50, "ttnn.ceil"]], "ceil_bw() (in module ttnn)": [[51, "ttnn.ceil_bw"]], "celu() (in module ttnn)": [[52, "ttnn.celu"]], "celu_bw() (in module ttnn)": [[53, "ttnn.celu_bw"]], "clamp() (in module ttnn)": [[54, "ttnn.clamp"]], "clamp_bw() (in module ttnn)": [[55, "ttnn.clamp_bw"]], "clip() (in module ttnn)": [[56, "ttnn.clip"]], "clip_bw() (in module ttnn)": [[57, "ttnn.clip_bw"]], "clone() (in module ttnn)": [[58, "ttnn.clone"]], "close_device() (in module ttnn)": [[59, "ttnn.close_device"]], "concat() (in module ttnn)": [[60, "ttnn.concat"]], "concat_bw() (in module ttnn)": [[61, "ttnn.concat_bw"]], "conj() (in module ttnn)": [[62, "ttnn.conj"]], "conj_bw() (in module ttnn)": [[63, "ttnn.conj_bw"]], "cos() (in module ttnn)": [[64, "ttnn.cos"]], "cos_bw() (in module ttnn)": [[65, "ttnn.cos_bw"]], "cosh() (in module ttnn)": [[66, "ttnn.cosh"]], "cosh_bw() (in module ttnn)": [[67, "ttnn.cosh_bw"]], "create_sharded_memory_config() (in module ttnn)": [[68, "ttnn.create_sharded_memory_config"]], "deallocate() (in module ttnn)": [[69, "ttnn.deallocate"]], "deg2rad() (in module ttnn)": [[70, "ttnn.deg2rad"]], "deg2rad_bw() (in module ttnn)": [[71, "ttnn.deg2rad_bw"]], "digamma() (in module ttnn)": [[72, "ttnn.digamma"]], "digamma_bw() (in module ttnn)": [[73, "ttnn.digamma_bw"]], "div() (in module ttnn)": [[74, "ttnn.div"]], "div_bw() (in module ttnn)": [[75, "ttnn.div_bw"]], "div_no_nan() (in module ttnn)": [[76, "ttnn.div_no_nan"]], "div_no_nan_bw() (in module ttnn)": [[77, "ttnn.div_no_nan_bw"]], "downsample() (in module ttnn)": [[78, "ttnn.downsample"]], "dump_tensor() (in module ttnn)": [[79, "ttnn.dump_tensor"]], "elu() (in module ttnn)": [[80, "ttnn.elu"]], "elu_bw() (in module ttnn)": [[81, "ttnn.elu_bw"]], "embedding() (in module ttnn)": [[82, "ttnn.embedding"]], "embedding_bw() (in module ttnn)": [[83, "ttnn.embedding_bw"]], "empty() (in module ttnn)": [[84, "ttnn.empty"]], "empty_like() (in module ttnn)": [[85, "ttnn.empty_like"]], "eq() (in module ttnn)": [[86, "ttnn.eq"]], "eq_() (in module ttnn)": [[87, "ttnn.eq_"]], "eqz() (in module ttnn)": [[88, "ttnn.eqz"]], "erf() (in module ttnn)": [[89, "ttnn.erf"]], "erf_bw() (in module ttnn)": [[90, "ttnn.erf_bw"]], "erfc() (in module ttnn)": [[91, "ttnn.erfc"]], "erfc_bw() (in module ttnn)": [[92, "ttnn.erfc_bw"]], "erfinv() (in module ttnn)": [[93, "ttnn.erfinv"]], "erfinv_bw() (in module ttnn)": [[94, "ttnn.erfinv_bw"]], "exp() (in module ttnn)": [[95, "ttnn.exp"]], "exp2() (in module ttnn)": [[96, "ttnn.exp2"]], "exp2_bw() (in module ttnn)": [[97, "ttnn.exp2_bw"]], "exp_bw() (in module ttnn)": [[98, "ttnn.exp_bw"]], "all_reduce() (in module ttnn.experimental)": [[99, "ttnn.experimental.all_reduce"]], "dropout() (in module ttnn.experimental)": [[100, "ttnn.experimental.dropout"]], "gelu_bw() (in module ttnn.experimental)": [[101, "ttnn.experimental.gelu_bw"]], "rotary_embedding() (in module ttnn.experimental)": [[102, "ttnn.experimental.rotary_embedding"]], "sort() (in module ttnn.experimental)": [[103, "ttnn.experimental.sort"]], "expm1() (in module ttnn)": [[104, "ttnn.expm1"]], "expm1_bw() (in module ttnn)": [[105, "ttnn.expm1_bw"]], "fill() (in module ttnn)": [[106, "ttnn.fill"]], "fill_bw() (in module ttnn)": [[107, "ttnn.fill_bw"]], "fill_ones_rm() (in module ttnn)": [[108, "ttnn.fill_ones_rm"]], "fill_rm() (in module ttnn)": [[109, "ttnn.fill_rm"]], "fill_zero_bw() (in module ttnn)": [[110, "ttnn.fill_zero_bw"]], "floor() (in module ttnn)": [[111, "ttnn.floor"]], "floor_bw() (in module ttnn)": [[112, "ttnn.floor_bw"]], "floor_div() (in module ttnn)": [[113, "ttnn.floor_div"]], "fmod() (in module ttnn)": [[114, "ttnn.fmod"]], "fmod_bw() (in module ttnn)": [[115, "ttnn.fmod_bw"]], "format_input_tensor() (in module ttnn)": [[116, "ttnn.format_input_tensor"]], "format_output_tensor() (in module ttnn)": [[117, "ttnn.format_output_tensor"]], "frac() (in module ttnn)": [[118, "ttnn.frac"]], "frac_bw() (in module ttnn)": [[119, "ttnn.frac_bw"]], "from_device() (in module ttnn)": [[120, "ttnn.from_device"]], "from_torch() (in module ttnn)": [[121, "ttnn.from_torch"]], "full() (in module ttnn)": [[122, "ttnn.full"]], "full_like() (in module ttnn)": [[123, "ttnn.full_like"]], "gcd() (in module ttnn)": [[124, "ttnn.gcd"]], "ge() (in module ttnn)": [[125, "ttnn.ge"]], "ge_() (in module ttnn)": [[126, "ttnn.ge_"]], "geglu() (in module ttnn)": [[127, "ttnn.geglu"]], "gelu() (in module ttnn)": [[128, "ttnn.gelu"]], "gelu_bw() (in module ttnn)": [[129, "ttnn.gelu_bw"]], "gez() (in module ttnn)": [[130, "ttnn.gez"]], "global_avg_pool2d() (in module ttnn)": [[131, "ttnn.global_avg_pool2d"]], "glu() (in module ttnn)": [[132, "ttnn.glu"]], "group_norm() (in module ttnn)": [[133, "ttnn.group_norm"]], "gt() (in module ttnn)": [[134, "ttnn.gt"]], "gt_() (in module ttnn)": [[135, "ttnn.gt_"]], "gtz() (in module ttnn)": [[136, "ttnn.gtz"]], "hardshrink() (in module ttnn)": [[137, "ttnn.hardshrink"]], "hardshrink_bw() (in module ttnn)": [[138, "ttnn.hardshrink_bw"]], "hardsigmoid() (in module ttnn)": [[139, "ttnn.hardsigmoid"]], "hardsigmoid_bw() (in module ttnn)": [[140, "ttnn.hardsigmoid_bw"]], "hardswish() (in module ttnn)": [[141, "ttnn.hardswish"]], "hardswish_bw() (in module ttnn)": [[142, "ttnn.hardswish_bw"]], "hardtanh() (in module ttnn)": [[143, "ttnn.hardtanh"]], "hardtanh_bw() (in module ttnn)": [[144, "ttnn.hardtanh_bw"]], "heaviside() (in module ttnn)": [[145, "ttnn.heaviside"]], "hypot() (in module ttnn)": [[146, "ttnn.hypot"]], "hypot_bw() (in module ttnn)": [[147, "ttnn.hypot_bw"]], "i0() (in module ttnn)": [[148, "ttnn.i0"]], "i0_bw() (in module ttnn)": [[149, "ttnn.i0_bw"]], "identity() (in module ttnn)": [[150, "ttnn.identity"]], "imag() (in module ttnn)": [[151, "ttnn.imag"]], "imag_bw() (in module ttnn)": [[152, "ttnn.imag_bw"]], "indexed_fill() (in module ttnn)": [[153, "ttnn.indexed_fill"]], "is_imag() (in module ttnn)": [[154, "ttnn.is_imag"]], "is_real() (in module ttnn)": [[155, "ttnn.is_real"]], "isclose() (in module ttnn)": [[156, "ttnn.isclose"]], "isfinite() (in module ttnn)": [[157, "ttnn.isfinite"]], "isinf() (in module ttnn)": [[158, "ttnn.isinf"]], "isnan() (in module ttnn)": [[159, "ttnn.isnan"]], "isneginf() (in module ttnn)": [[160, "ttnn.isneginf"]], "isposinf() (in module ttnn)": [[161, "ttnn.isposinf"]], "fill_cache_for_user_() (in module ttnn.kv_cache)": [[162, "ttnn.kv_cache.fill_cache_for_user_"]], "update_cache_for_token_() (in module ttnn.kv_cache)": [[163, "ttnn.kv_cache.update_cache_for_token_"]], "l1_loss() (in module ttnn)": [[164, "ttnn.l1_loss"]], "layer_norm() (in module ttnn)": [[165, "ttnn.layer_norm"]], "lcm() (in module ttnn)": [[166, "ttnn.lcm"]], "ldexp() (in module ttnn)": [[167, "ttnn.ldexp"]], "ldexp_bw() (in module ttnn)": [[168, "ttnn.ldexp_bw"]], "le() (in module ttnn)": [[169, "ttnn.le"]], "le_() (in module ttnn)": [[170, "ttnn.le_"]], "leaky_relu() (in module ttnn)": [[171, "ttnn.leaky_relu"]], "leaky_relu_bw() (in module ttnn)": [[172, "ttnn.leaky_relu_bw"]], "lerp() (in module ttnn)": [[173, "ttnn.lerp"]], "lerp_bw() (in module ttnn)": [[174, "ttnn.lerp_bw"]], "lez() (in module ttnn)": [[175, "ttnn.lez"]], "lgamma() (in module ttnn)": [[176, "ttnn.lgamma"]], "lgamma_bw() (in module ttnn)": [[177, "ttnn.lgamma_bw"]], "linear() (in module ttnn)": [[178, "ttnn.linear"]], "load_tensor() (in module ttnn)": [[179, "ttnn.load_tensor"]], "log() (in module ttnn)": [[180, "ttnn.log"]], "log10() (in module ttnn)": [[181, "ttnn.log10"]], "log10_bw() (in module ttnn)": [[182, "ttnn.log10_bw"]], "log1p() (in module ttnn)": [[183, "ttnn.log1p"]], "log1p_bw() (in module ttnn)": [[184, "ttnn.log1p_bw"]], "log2() (in module ttnn)": [[185, "ttnn.log2"]], "log2_bw() (in module ttnn)": [[186, "ttnn.log2_bw"]], "log_bw() (in module ttnn)": [[187, "ttnn.log_bw"]], "log_sigmoid() (in module ttnn)": [[188, "ttnn.log_sigmoid"]], "log_sigmoid_bw() (in module ttnn)": [[189, "ttnn.log_sigmoid_bw"]], "logaddexp() (in module ttnn)": [[190, "ttnn.logaddexp"]], "logaddexp2() (in module ttnn)": [[191, "ttnn.logaddexp2"]], "logaddexp2_bw() (in module ttnn)": [[192, "ttnn.logaddexp2_bw"]], "logaddexp_bw() (in module ttnn)": [[193, "ttnn.logaddexp_bw"]], "logical_and() (in module ttnn)": [[194, "ttnn.logical_and"]], "logical_and_() (in module ttnn)": [[195, "ttnn.logical_and_"]], "logical_not() (in module ttnn)": [[196, "ttnn.logical_not"]], "logical_not_() (in module ttnn)": [[197, "ttnn.logical_not_"]], "logical_or() (in module ttnn)": [[198, "ttnn.logical_or"]], "logical_or_() (in module ttnn)": [[199, "ttnn.logical_or_"]], "logical_xor() (in module ttnn)": [[200, "ttnn.logical_xor"]], "logical_xor_() (in module ttnn)": [[201, "ttnn.logical_xor_"]], "logit() (in module ttnn)": [[202, "ttnn.logit"]], "logit_bw() (in module ttnn)": [[203, "ttnn.logit_bw"]], "logiteps_bw() (in module ttnn)": [[204, "ttnn.logiteps_bw"]], "lt() (in module ttnn)": [[205, "ttnn.lt"]], "lt_() (in module ttnn)": [[206, "ttnn.lt_"]], "ltz() (in module ttnn)": [[207, "ttnn.ltz"]], "mac() (in module ttnn)": [[208, "ttnn.mac"]], "manage_device() (in module ttnn)": [[209, "ttnn.manage_device"]], "matmul() (in module ttnn)": [[210, "ttnn.matmul"]], "max() (in module ttnn)": [[211, "ttnn.max"]], "max_bw() (in module ttnn)": [[212, "ttnn.max_bw"]], "max_pool2d() (in module ttnn)": [[213, "ttnn.max_pool2d"]], "maximum() (in module ttnn)": [[214, "ttnn.maximum"]], "mean() (in module ttnn)": [[215, "ttnn.mean"]], "min() (in module ttnn)": [[216, "ttnn.min"]], "min_bw() (in module ttnn)": [[217, "ttnn.min_bw"]], "minimum() (in module ttnn)": [[218, "ttnn.minimum"]], "mish() (in module ttnn)": [[219, "ttnn.mish"]], "preprocess_model() (in module ttnn.model_preprocessing)": [[220, "ttnn.model_preprocessing.preprocess_model"]], "preprocess_model_parameters() (in module ttnn.model_preprocessing)": [[221, "ttnn.model_preprocessing.preprocess_model_parameters"]], "moreh_sum() (in module ttnn)": [[222, "ttnn.moreh_sum"]], "mse_loss() (in module ttnn)": [[223, "ttnn.mse_loss"]], "mul_bw() (in module ttnn)": [[224, "ttnn.mul_bw"]], "multigammaln() (in module ttnn)": [[225, "ttnn.multigammaln"]], "multigammaln_bw() (in module ttnn)": [[226, "ttnn.multigammaln_bw"]], "multiply() (in module ttnn)": [[227, "ttnn.multiply"]], "ne() (in module ttnn)": [[228, "ttnn.ne"]], "ne_() (in module ttnn)": [[229, "ttnn.ne_"]], "neg() (in module ttnn)": [[230, "ttnn.neg"]], "neg_bw() (in module ttnn)": [[231, "ttnn.neg_bw"]], "nextafter() (in module ttnn)": [[232, "ttnn.nextafter"]], "nez() (in module ttnn)": [[233, "ttnn.nez"]], "nonzero() (in module ttnn)": [[234, "ttnn.nonzero"]], "normalize_global() (in module ttnn)": [[235, "ttnn.normalize_global"]], "normalize_hw() (in module ttnn)": [[236, "ttnn.normalize_hw"]], "ones() (in module ttnn)": [[237, "ttnn.ones"]], "ones_like() (in module ttnn)": [[238, "ttnn.ones_like"]], "open_device() (in module ttnn)": [[239, "ttnn.open_device"]], "outer() (in module ttnn)": [[240, "ttnn.outer"]], "pad() (in module ttnn)": [[241, "ttnn.pad"]], "pad_to_tile_shape() (in module ttnn)": [[242, "ttnn.pad_to_tile_shape"]], "permute() (in module ttnn)": [[243, "ttnn.permute"]], "polar() (in module ttnn)": [[244, "ttnn.polar"]], "polar_bw() (in module ttnn)": [[245, "ttnn.polar_bw"]], "polygamma() (in module ttnn)": [[246, "ttnn.polygamma"]], "polygamma_bw() (in module ttnn)": [[247, "ttnn.polygamma_bw"]], "polyval() (in module ttnn)": [[248, "ttnn.polyval"]], "pow() (in module ttnn)": [[249, "ttnn.pow"]], "pow_bw() (in module ttnn)": [[250, "ttnn.pow_bw"]], "prelu() (in module ttnn)": [[251, "ttnn.prelu"]], "prod() (in module ttnn)": [[252, "ttnn.prod"]], "prod_bw() (in module ttnn)": [[253, "ttnn.prod_bw"]], "rad2deg() (in module ttnn)": [[254, "ttnn.rad2deg"]], "rad2deg_bw() (in module ttnn)": [[255, "ttnn.rad2deg_bw"]], "rdiv() (in module ttnn)": [[256, "ttnn.rdiv"]], "rdiv_bw() (in module ttnn)": [[257, "ttnn.rdiv_bw"]], "real() (in module ttnn)": [[258, "ttnn.real"]], "real_bw() (in module ttnn)": [[259, "ttnn.real_bw"]], "reallocate() (in module ttnn)": [[260, "ttnn.reallocate"]], "reciprocal() (in module ttnn)": [[261, "ttnn.reciprocal"]], "reciprocal_bw() (in module ttnn)": [[262, "ttnn.reciprocal_bw"]], "reduce_scatter() (in module ttnn)": [[263, "ttnn.reduce_scatter"]], "register_post_operation_hook() (in module ttnn)": [[264, "ttnn.register_post_operation_hook"]], "register_pre_operation_hook() (in module ttnn)": [[265, "ttnn.register_pre_operation_hook"]], "reglu() (in module ttnn)": [[266, "ttnn.reglu"]], "relu() (in module ttnn)": [[267, "ttnn.relu"]], "relu6() (in module ttnn)": [[268, "ttnn.relu6"]], "relu6_bw() (in module ttnn)": [[269, "ttnn.relu6_bw"]], "relu_bw() (in module ttnn)": [[270, "ttnn.relu_bw"]], "relu_max() (in module ttnn)": [[271, "ttnn.relu_max"]], "relu_min() (in module ttnn)": [[272, "ttnn.relu_min"]], "remainder() (in module ttnn)": [[273, "ttnn.remainder"]], "remainder_bw() (in module ttnn)": [[274, "ttnn.remainder_bw"]], "repeat() (in module ttnn)": [[275, "ttnn.repeat"]], "repeat_bw() (in module ttnn)": [[276, "ttnn.repeat_bw"]], "repeat_interleave() (in module ttnn)": [[277, "ttnn.repeat_interleave"]], "reshape() (in module ttnn)": [[278, "ttnn.reshape"]], "rms_norm() (in module ttnn)": [[279, "ttnn.rms_norm"]], "round() (in module ttnn)": [[280, "ttnn.round"]], "round_bw() (in module ttnn)": [[281, "ttnn.round_bw"]], "rpow() (in module ttnn)": [[282, "ttnn.rpow"]], "rpow_bw() (in module ttnn)": [[283, "ttnn.rpow_bw"]], "rsqrt() (in module ttnn)": [[284, "ttnn.rsqrt"]], "rsqrt_bw() (in module ttnn)": [[285, "ttnn.rsqrt_bw"]], "rsub() (in module ttnn)": [[286, "ttnn.rsub"]], "rsub_bw() (in module ttnn)": [[287, "ttnn.rsub_bw"]], "scatter() (in module ttnn)": [[288, "ttnn.scatter"]], "selu() (in module ttnn)": [[289, "ttnn.selu"]], "selu_bw() (in module ttnn)": [[290, "ttnn.selu_bw"]], "set_printoptions() (in module ttnn)": [[291, "ttnn.set_printoptions"]], "sigmoid() (in module ttnn)": [[292, "ttnn.sigmoid"]], "sigmoid_accurate() (in module ttnn)": [[293, "ttnn.sigmoid_accurate"]], "sigmoid_bw() (in module ttnn)": [[294, "ttnn.sigmoid_bw"]], "sign() (in module ttnn)": [[295, "ttnn.sign"]], "sign_bw() (in module ttnn)": [[296, "ttnn.sign_bw"]], "signbit() (in module ttnn)": [[297, "ttnn.signbit"]], "silu() (in module ttnn)": [[298, "ttnn.silu"]], "silu_bw() (in module ttnn)": [[299, "ttnn.silu_bw"]], "sin() (in module ttnn)": [[300, "ttnn.sin"]], "sin_bw() (in module ttnn)": [[301, "ttnn.sin_bw"]], "sinh() (in module ttnn)": [[302, "ttnn.sinh"]], "sinh_bw() (in module ttnn)": [[303, "ttnn.sinh_bw"]], "slice() (in module ttnn)": [[304, "ttnn.slice"]], "softmax() (in module ttnn)": [[305, "ttnn.softmax"]], "softplus() (in module ttnn)": [[306, "ttnn.softplus"]], "softplus_bw() (in module ttnn)": [[307, "ttnn.softplus_bw"]], "softshrink() (in module ttnn)": [[308, "ttnn.softshrink"]], "softshrink_bw() (in module ttnn)": [[309, "ttnn.softshrink_bw"]], "softsign() (in module ttnn)": [[310, "ttnn.softsign"]], "softsign_bw() (in module ttnn)": [[311, "ttnn.softsign_bw"]], "sqrt() (in module ttnn)": [[312, "ttnn.sqrt"]], "sqrt_bw() (in module ttnn)": [[313, "ttnn.sqrt_bw"]], "square() (in module ttnn)": [[314, "ttnn.square"]], "square_bw() (in module ttnn)": [[315, "ttnn.square_bw"]], "squared_difference() (in module ttnn)": [[316, "ttnn.squared_difference"]], "squared_difference_bw() (in module ttnn)": [[317, "ttnn.squared_difference_bw"]], "std() (in module ttnn)": [[318, "ttnn.std"]], "sub_bw() (in module ttnn)": [[319, "ttnn.sub_bw"]], "subalpha() (in module ttnn)": [[320, "ttnn.subalpha"]], "subalpha_bw() (in module ttnn)": [[321, "ttnn.subalpha_bw"]], "subtract() (in module ttnn)": [[322, "ttnn.subtract"]], "sum() (in module ttnn)": [[323, "ttnn.sum"]], "swiglu() (in module ttnn)": [[324, "ttnn.swiglu"]], "swish() (in module ttnn)": [[325, "ttnn.swish"]], "synchronize_device() (in module ttnn)": [[326, "ttnn.synchronize_device"]], "tan() (in module ttnn)": [[327, "ttnn.tan"]], "tan_bw() (in module ttnn)": [[328, "ttnn.tan_bw"]], "tanh() (in module ttnn)": [[329, "ttnn.tanh"]], "tanh_bw() (in module ttnn)": [[330, "ttnn.tanh_bw"]], "tanhshrink() (in module ttnn)": [[331, "ttnn.tanhshrink"]], "tanhshrink_bw() (in module ttnn)": [[332, "ttnn.tanhshrink_bw"]], "threshold() (in module ttnn)": [[333, "ttnn.threshold"]], "threshold_bw() (in module ttnn)": [[334, "ttnn.threshold_bw"]], "tilize() (in module ttnn)": [[335, "ttnn.tilize"]], "tilize_with_val_padding() (in module ttnn)": [[336, "ttnn.tilize_with_val_padding"]], "to_device() (in module ttnn)": [[337, "ttnn.to_device"]], "to_layout() (in module ttnn)": [[338, "ttnn.to_layout"]], "to_memory_config() (in module ttnn)": [[339, "ttnn.to_memory_config"]], "to_torch() (in module ttnn)": [[340, "ttnn.to_torch"]], "topk() (in module ttnn)": [[341, "ttnn.topk"]], "attention_softmax() (in module ttnn.transformer)": [[342, "ttnn.transformer.attention_softmax"]], "attention_softmax_() (in module ttnn.transformer)": [[343, "ttnn.transformer.attention_softmax_"]], "concatenate_heads() (in module ttnn.transformer)": [[344, "ttnn.transformer.concatenate_heads"]], "scaled_dot_product_attention() (in module ttnn.transformer)": [[345, "ttnn.transformer.scaled_dot_product_attention"]], "scaled_dot_product_attention_decode() (in module ttnn.transformer)": [[346, "ttnn.transformer.scaled_dot_product_attention_decode"]], "split_query_key_value_and_split_heads() (in module ttnn.transformer)": [[347, "ttnn.transformer.split_query_key_value_and_split_heads"]], "tril() (in module ttnn)": [[348, "ttnn.tril"]], "triu() (in module ttnn)": [[349, "ttnn.triu"]], "trunc() (in module ttnn)": [[350, "ttnn.trunc"]], "trunc_bw() (in module ttnn)": [[351, "ttnn.trunc_bw"]], "unary_chain() (in module ttnn)": [[352, "ttnn.unary_chain"]], "untilize() (in module ttnn)": [[353, "ttnn.untilize"]], "untilize_with_unpadding() (in module ttnn)": [[354, "ttnn.untilize_with_unpadding"]], "upsample() (in module ttnn)": [[355, "ttnn.upsample"]], "var() (in module ttnn)": [[356, "ttnn.var"]], "where() (in module ttnn)": [[357, "ttnn.where"]], "where_bw() (in module ttnn)": [[358, "ttnn.where_bw"]], "xlogy() (in module ttnn)": [[359, "ttnn.xlogy"]], "xlogy_bw() (in module ttnn)": [[360, "ttnn.xlogy_bw"]], "zeros() (in module ttnn)": [[361, "ttnn.zeros"]], "zeros_like() (in module ttnn)": [[362, "ttnn.zeros_like"]], "memoryconfig (class in ttnn)": [[367, "ttnn.MemoryConfig"]], "tensor (class in ttnn)": [[367, "ttnn.Tensor"]], "__init__() (ttnn.memoryconfig method)": [[367, "ttnn.MemoryConfig.__init__"]], "__init__() (ttnn.tensor method)": [[367, "ttnn.Tensor.__init__"]], "buffer() (ttnn.tensor method)": [[367, "ttnn.Tensor.buffer"]], "device() (ttnn.tensor method)": [[367, "ttnn.Tensor.device"]], "get_dtype() (ttnn.tensor method)": [[367, "ttnn.Tensor.get_dtype"]], "get_layout() (ttnn.tensor method)": [[367, "ttnn.Tensor.get_layout"]], "pad() (ttnn.tensor method)": [[367, "ttnn.Tensor.pad"]], "pad_to_tile() (ttnn.tensor method)": [[367, "ttnn.Tensor.pad_to_tile"]], "storage_type() (ttnn.tensor method)": [[367, "ttnn.Tensor.storage_type"]], "to() (ttnn.tensor method)": [[367, "ttnn.Tensor.to"]], "unpad() (ttnn.tensor method)": [[367, "ttnn.Tensor.unpad"]], "unpad_from_tile() (ttnn.tensor method)": [[367, "ttnn.Tensor.unpad_from_tile"]], "adaptiveavgpool2d (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.AdaptiveAvgPool2d"]], "addandnorm() (in module tt_lib.fused_ops.add_and_norm)": [[368, "tt_lib.fused_ops.add_and_norm.AddAndNorm"]], "batchnorm2d (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.BatchNorm2d"]], "bcastopdim (class in ttnn)": [[368, "ttnn.BcastOpDim"]], "bcastopmath (class in ttnn)": [[368, "ttnn.BcastOpMath"]], "conv2d (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.Conv2d"]], "groupnorm (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.GroupNorm"]], "layernorm (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.LayerNorm"]], "layernorm() (in module tt_lib.fused_ops.layernorm)": [[368, "tt_lib.fused_ops.layernorm.Layernorm"]], "linear() (in module tt_lib.fused_ops.linear)": [[368, "tt_lib.fused_ops.linear.Linear"]], "maxpool2d (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.MaxPool2d"]], "binary_bitwise_and (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.binary_bitwise_and"]], "binary_bitwise_left_shift (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.binary_bitwise_left_shift"]], "binary_bitwise_or (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.binary_bitwise_or"]], "binary_bitwise_right_shift (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.binary_bitwise_right_shift"]], "binary_bitwise_xor (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.binary_bitwise_xor"]], "binary_fmod (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.binary_fmod"]], "bitwise_not (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.bitwise_not"]], "ceil (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.ceil"]], "chunk() (in module tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.chunk"]], "concat() (in module tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.concat"]], "conv2d() (in module tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.conv2d"]], "cpu() (in module ttnn.tensor)": [[368, "ttnn.Tensor.cpu"]], "floor (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.floor"]], "full() (in module tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.full"]], "group_norm() (in module tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.group_norm"]], "group_norm() (in module ttnn.operations.moreh)": [[368, "ttnn.operations.moreh.group_norm"]], "group_norm_backward() (in module ttnn.operations.moreh)": [[368, "ttnn.operations.moreh.group_norm_backward"]], "interpolate() (in module tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.interpolate"]], "layer_norm() (in module tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.layer_norm"]], "logsoftmax() (in module ttnn.operations.moreh)": [[368, "ttnn.operations.moreh.logsoftmax"]], "logsoftmax_backward() (in module ttnn.operations.moreh)": [[368, "ttnn.operations.moreh.logsoftmax_backward"]], "mean() (in module ttnn.operations.moreh)": [[368, "ttnn.operations.moreh.mean"]], "mean_backward() (in module ttnn.operations.moreh)": [[368, "ttnn.operations.moreh.mean_backward"]], "norm() (in module ttnn.operations.moreh)": [[368, "ttnn.operations.moreh.norm"]], "norm_backward() (in module ttnn.operations.moreh)": [[368, "ttnn.operations.moreh.norm_backward"]], "pad() (in module tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.pad"]], "repeat() (in module tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.repeat"]], "repeat_interleave() (in module tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.repeat_interleave"]], "reshape() (in module tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.reshape"]], "silu() (in module tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.silu"]], "softmax() (in module tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.softmax"]], "softmax() (in module ttnn.operations.moreh)": [[368, "ttnn.operations.moreh.softmax"]], "softmax_backward() (in module ttnn.operations.moreh)": [[368, "ttnn.operations.moreh.softmax_backward"]], "softmin() (in module ttnn.operations.moreh)": [[368, "ttnn.operations.moreh.softmin"]], "softmin_backward() (in module ttnn.operations.moreh)": [[368, "ttnn.operations.moreh.softmin_backward"]], "tensor_slice() (in module tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.tensor_slice"]], "torch_argmax (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.torch_argmax"]], "torch_argmin (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.torch_argmin"]], "trunc (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.trunc"]], "unary_bitwise_and (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.unary_bitwise_and"]], "unary_bitwise_left_shift (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.unary_bitwise_left_shift"]], "unary_bitwise_or (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.unary_bitwise_or"]], "unary_bitwise_right_shift (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.unary_bitwise_right_shift"]], "unary_bitwise_xor (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.unary_bitwise_xor"]], "unary_fmod (class in tt_lib.fallback_ops)": [[368, "tt_lib.fallback_ops.unary_fmod"]], "shape (class in ttnn)": [[373, "ttnn.Shape"]], "rank (ttnn.shape property)": [[373, "ttnn.Shape.rank"]], "to_rank() (ttnn.shape method)": [[373, "ttnn.Shape.to_rank"]]}})