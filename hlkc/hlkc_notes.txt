// Datacopy hlk_main

#include "hlk.h"
#include <cstdint>

struct hlk_args_t {
    std::int32_t per_core_block_cnt;
    std::int32_t per_core_block_dim;
    std::int32_t per_block_r_tiles;
    std::int32_t per_block_c_tiles;
//    int fam[]; // an option
};

/*

// fixed structures: LLK lib to provide
struct unpack_A_args_t {
    int arg1;
    int arg2;
    int arg3;
}

// this goes to static global after .txt
// auto-generete with some C++ / trivial
// auto_gen_struct.h
static hlk_args_t user_args = {1,2,3,4};
static unpack_A_args_t unpack_arg = {1,2,3};
static loop_cnt = 16;


#include <auto_gen_struct.h>


void dispatch() {


    unpack_main(&user_args, &unpack_args, loop_cnt)
}


void unpack_main(void* void_args_ptr, void *void_unpack_args_ptr, int32_t loop_cnt) {
    
    hlk_args_t args = (hlk_args_t*) void_args_ptr;
    
    // tbd
  //  llk_configure_unpack(???);

    // this is it
    llk_init_unpack_A((unpack_A_args_t*)void_unpacker_args_ptr);


    // insert the batching loop
    for (int i=0; i < loop_cnt; i++) {

    }
}
*/

