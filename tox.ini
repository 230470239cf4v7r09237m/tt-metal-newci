[tox]
envlist = 
    post_commit_fd
    post_commit_sd
    post_commit_check_spdx_licenses
    run_profile_regression
    post_commit_fd_eager
    post_commit_fd_eager_sweep
    nightly_fast_dispatch
    nightly_fast_dispatch_common_models
    nightly_fast_dispatch_gs_only
    nightly_fast_dispatch_wh_only
    nightly_fast_dispatch_ttnn
    performance_device_models
    model_performance
skipsdist = true

[testenv]
allowlist_externals=
    ./tests/scripts/run_tests.sh
    tests/scripts/nightly/run_ttnn.sh
    tests/scripts/nightly/run_gs_only.sh
    tests/scripts/nightly/run_wh_b0_only.sh
    tests/scripts/nightly/run_common_models.sh
    python
    ./tests/scripts/run_profiler_regressions.sh
setenv =
    ARCH_NAME={env:ARCH_NAME}
    TT_METAL_HOME={env:TT_METAL_HOME}
    PYTHONPATH={env:PYTHONPATH}
    PIP_EXTRA_INDEX_URL=https://download.pytorch.org/whl/cpu
deps = 
    -r tt_metal/python_env/requirements-dev.txt
    loguru==0.6.0

[build:post_commit_check_spdx_licenses]
description = Check SPDX Licenses
setenv = 
    {[testenv]setenv}
deps = 
    -r infra/requirements-infra.txt
commands = 
    python -m check_copyright --verbose --dry-run --config ./check_copyright_config.yaml .

[testenv:run_profile_regression]
description = Run profile regressions
envdir = {env:VENV_DIR}
setenv = 
    {[testenv]setenv}
commands =
    ./tests/scripts/run_profiler_regressions.sh

[testenv:post_commit_sd]
description = Run post commit slow dispatch
setenv = 
    {[testenv]setenv}
    TT_METAL_SLOW_DISPATCH_MODE=1
deps = 
    {[testenv]deps}
commands = 
    ./tests/scripts/run_tests.sh --tt-arch {env:ARCH_NAME} --pipeline-type post_commit --dispatch-mode slow

[testenv:post_commit_fd_eager]
description = Run post commit fast dispatch eager tests
setenv = 
    {[testenv]setenv}
deps = 
    {[testenv]deps}
    -e ttnn
    -e .
commands = 
    pytest {env:TT_METAL_HOME}/tests/tt_eager/python_api_testing/unit_testing/ -vvv --splits 4 --group {env:GROUP_NUM}

[testenv:post_commit_fd_eager_sweep]
description = Run post commit fast dispatch eager tests
envdir = {env:VENV_DIR}
setenv = 
    {[testenv]setenv}
deps = 
    {[testenv]deps}
    -e ttnn
    -e .
commands = 
    pytest {env:TT_METAL_HOME}/tests/tt_eager/python_api_testing/sweep_tests/pytests/ -vvv

[testenv:nightly_fast_dispatch_common_models]
description = Run the nightly dispatch common models
envdir = {env:VENV_DIR}
setenv = 
    {[testenv]setenv}
deps = 
    {[testenv]deps}
    -r tt_metal/python_env/requirements-models.txt
commands = tests/scripts/nightly/run_common_models.sh

[testenv:nightly_fast_dispatch_ttnn]
description = Run the nightly dispatch TTNN tests
envdir = {env:VENV_DIR}
setenv = 
    {[testenv]setenv}
deps = 
    {[testenv]deps}
    -r tt_metal/python_env/requirements-models.txt
commands = tests/scripts/nightly/run_ttnn.sh

[testenv:nightly_fast_dispatch_gs_only]
description = Run the nightly dispatch GS only
envdir = {env:VENV_DIR}
setenv = 
    {[testenv]setenv}
deps = 
    {[testenv]deps}
    -r tt_metal/python_env/requirements-models.txt
commands = tests/scripts/nightly/run_gs_only.sh

[testenv:nightly_fast_dispatch_wh_only]
description = Run the nightly dispatch Wormhole BO only
envdir = {env:VENV_DIR}
setenv = 
    {[testenv]setenv}
deps = 
    {[testenv]deps}
    -r tt_metal/python_env/requirements-models.txt
commands = tests/scripts/nightly/run_wh_b0_only.sh

[testenv:nightly_fast_dispatch]
description = Run the nightly dispatch
envdir = {env:VENV_DIR}
setenv = 
    {[testenv]setenv}
deps = 
    {[testenv]deps}
    -r tt_metal/python_env/requirements-models.txt
commands = ./tests/scripts/run_tests.sh --tt-arch {env:ARCH_NAME} --pipeline-type frequent_{env:MODEL_TYPE} --dispatch-mode fast

[testenv:model_performance]
description = Run the tests for Model Performance Regressions
envdir = {env:VENV_DIR}
setenv = 
    {[testenv]setenv}
deps = 
    {[testenv]deps}
    -r tt_metal/python_env/requirements-models.txt
    loguru
commands = ./tests/scripts/run_tests.sh --tt-arch {env:ARCH_NAME} --pipeline-type {env:MODEL_TYPE}_models_performance_{env:MACHINE_TYPE}

[testenv:performance_device_models]
description = Run the tests for Performance Device Models
envdir = {env:VENV_DIR}
setenv = 
    {[testenv]setenv}
deps = 
    {[testenv]deps}
    -r tt_metal/python_env/requirements-models.txt
commands = ./tests/scripts/run_tests.sh  --tt-arch {env:ARCH_NAME} --pipeline-type models_device_performance_{env:MACHINE_TYPE}

[testenv:.pkg]
setenv = ARCH_NAME={env:ARCH_NAME}
passenv = ARCH_NAME
