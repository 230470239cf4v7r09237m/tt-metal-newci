name: "Bisect a failing step"
description: "Run git bisect to find the commit ID that introduced a failure"

inputs:
  cmd:
    description: 'Command to run on each bisect step'
    required: true
runs:
  using: "composite"
  steps:
    - name: Get Recent Passing Commit
      id: get-passing-commit
      shell: bash
      run: |
        set -euo pipefail
        workflow_ref="${{ github.workflow_ref}}"
        workflow_filename=$(basename "${workflow_ref%%@*}")

        RUN_ID=$(curl -s "https://api.github.com/repos/${{ github.repository }}/actions/workflows/${workflow_filename}/runs?branch=main&status=success" \
          | jq -r '.workflow_runs[0].head_sha')
        if [ -z "$RUN_ID" ]; then
          echo "No passing run found on main."
          exit 1
        fi
        echo "Passing commit: $RUN_ID"
        echo "passed_commit=$RUN_ID" >> $GITHUB_ENV

    - name: Start Git Bisect
      if: env.passed_commit
      shell: bash
      run: |
        set -euo pipefail
        # Initialize git bisect
        git bisect start
        git bisect bad $GITHUB_SHA  # Current (failing) commit
        git bisect good ${{ env.passed_commit }}

        # Run the bisect process
        echo "Bisect command: ${{ inputs.cmd }}"
        echo "TODO: run bisect"
        exit 1
        git bisect run bash -c "
          set -e
          source ${{ github.workspace }}/python_env/bin/activate
          cd \$TT_METAL_HOME
          export PYTHONPATH=\$TT_METAL_HOME
          ${{ matrix.test-group.cmd }}
        "
