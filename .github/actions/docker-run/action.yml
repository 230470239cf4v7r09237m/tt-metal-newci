name: "Run set of commands in Docker"
description: "Run commands in docker"

inputs:
  run_args:
    description: 'Commands to run in docker'
    required: true
  docker_os_arch:
    description: 'Docker image architecture'
    required: false
    default: ubuntu-20.04-amd64
  docker_username:
    description: docker login username
    required: true
  docker_password:
    description: docker login password
    required: true
  docker_opts:
    description: 'Docker options'
    required: false
  device:
    description: "Description of Device as it is used in docker run command."
    type: string
    required: false
    default: |
      -v /dev/hugepages-1G:/dev/hugepages-1G
      --device /dev/tenstorrent
runs:
  using: "composite"
  steps:
    - name: Determine docker image tag
      uses: ./.github/actions/generate-docker-tag
      with:
        image: ${{ inputs.docker_os_arch }}
    - name: Docker login
      uses: docker/login-action@v3
      with:
        registry: https://ghcr.io
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}
    - name: Pull docker image
      shell: bash
      run: |
        docker pull ${{ env.TT_METAL_DOCKER_IMAGE_TAG }}
    - uses: addnab/docker-run-action@v3
      with:
        shell: bash
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}
        registry: ghcr.io
        image: ${{ env.TT_METAL_DOCKER_IMAGE_TAG }}
        # The most important option below is `--rm`. The machines will fill up with containers.
        options: |
          --rm
          -v ${{ github.workspace }}:/github_workspace:ro
          --net=host
          ${{ inputs.docker_opts }}
          -e LOGURU_LEVEL=${{ env.LOGURU_LEVEL }}
          -e PYTHONPATH=/usr/app
          ${{ inputs.device }}
        run: |
          cp -r /github_workspace/* /usr/app/
          cd /usr/app/
          ${{ inputs.run_args }}
