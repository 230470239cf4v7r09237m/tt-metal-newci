name: "[internal] Single-card Demo tests impl"

on:
  workflow_call:
    inputs:
      build-artifact-name:
        required: true
        type: string
      docker-image:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string

jobs:
  single-card-demo-tests:
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          {
            name: "N150",
            arch: wormhole_b0,
            runs-on: ["cloud-virtual-machine", "N150", "in-service"],
            cmd: run_n150_tests
          },
          {
            name: "N300_functionality",
            arch: wormhole_b0,
            runs-on: ["cloud-virtual-machine", "N300", "in-service"],
            cmd: run_n300_func_tests
          },
          {
            name: "N300_performance",
            arch: wormhole_b0,
            runs-on: ["N300", "pipeline-perf", "bare-metal", "in-service"],
            cmd: run_n300_perf_tests
          }
        ]
    name: ${{ matrix.test-group.name }}
    env:
      ARCH_NAME: ${{ matrix.test-group.arch }}
      LOGURU_LEVEL: INFO
      LD_LIBRARY_PATH: ${{ github.workspace }}/build/lib  
    runs-on: ${{ matrix.test-group.runs-on }}
    steps:
      - uses: ./.github/actions/ensure-active-weka-mount
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: ⬇️ Download Build
        uses: actions/download-artifact@v4
        timeout-minutes: 10
        with:
          name: ${{ inputs.build-artifact-name }}
      - name: Extract files
        run: tar -xvf ttm_any.tar
      - name: ⬇️ Download Wheel
        uses: actions/download-artifact@v4
        timeout-minutes: 10
        with:
          name: ${{ inputs.wheel-artifact-name }}
      - name: Enable Performance mode
        if: ${{ matrix.test-group.name == 'N300_performance' }}
        run: |
          sudo cpupower frequency-set -g performance
      - name: Run demo regression tests
        uses: ./.github/actions/docker-run
        timeout-minutes: 90
        env:
          LOGURU_LEVEL: INFO
        with:
          docker_image: ${{ inputs.docker-image }}
          docker_password: ${{ secrets.GITHUB_TOKEN }}
          docker_opts: |
            -e TT_METAL_HOME=${{ github.workspace }}
            -e ARCH_NAME=${{ matrix.test-group.arch }}
            -e LD_LIBRARY_PATH=${{ github.workspace }}/build/lib
            -e GITHUB_ACTIONS=true
            -e CI=true
            -v /mnt/MLPerf:/mnt/MLPerf:ro
          install_wheel: true
          run_args: |
            source ${{ github.workspace }}/tests/scripts/single_card/run_single_card_demo_tests.sh
            ${{ matrix.test-group.cmd }}
      - name: Save environment data
        if: ${{ matrix.test-group.name == 'N300_performance' && !cancelled() }}
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          source ${{ github.workspace }}/python_env/bin/activate
          python3 .github/scripts/data_analysis/create_benchmark_with_environment_json.py
      - name: Upload benchmark data
        if: ${{ matrix.test-group.name == 'N300_performance' && !cancelled() }}
        uses: ./.github/actions/upload-data-via-sftp
        with:
          ssh-private-key: ${{ secrets.SFTP_BENCHMARK_WRITER_KEY }}
          sftp-batchfile: .github/actions/upload-data-via-sftp/benchmark_data_batchfile.txt
          username: ${{ secrets.SFTP_BENCHMARK_WRITER_USERNAME }}
          hostname: ${{ secrets.SFTP_BENCHMARK_WRITER_HOSTNAME }}
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          path: |
            generated/test_reports/
          prefix: "test_reports_"
      - name: Disable Performance mode
        if: ${{ matrix.test-group.name == 'N300_performance' }}
        run: |
          sudo cpupower frequency-set -g ondemand
      # env:
      # ARCH_NAME: ${{ matrix.test-group.arch }}
      # LOGURU_LEVEL: INFO
      # LD_LIBRARY_PATH: ${{ github.workspace }}/build/lib
    # steps:
    #   - uses: tenstorrent/tt-metal/.github/actions/checkout-with-submodule-lfs@main
    #   - name: Enable Performance mode
    #     if: ${{ matrix.test-group.name == 'N300_performance' }}
    #     run: |
    #       sudo cpupower frequency-set -g performance
    #   - uses: ./.github/actions/ensure-active-weka-mount
    #   - name: Set up dynamic env vars for build
    #     run: |
    #       echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
    #   - uses: ./.github/actions/prepare-metal-run
    #   - uses: ./.github/actions/install-python-deps
    #   - name: Run demo regression tests
      #   timeout-minutes: 70
      #   run: |
      #     source ${{ github.workspace }}/python_env/bin/activate
      #     cd $TT_METAL_HOME
      #     export PYTHONPATH=$TT_METAL_HOME
      #     source ${{ github.workspace }}/tests/scripts/single_card/run_single_card_demo_tests.sh
      #     ${{ matrix.test-group.cmd }}
      # - name: Save environment data
      #   if: ${{ matrix.test-group.name == 'N300_performance' && !cancelled() }}
      #   env:
      #     PYTHONPATH: ${{ github.workspace }}
      #   run: |
      #     source ${{ github.workspace }}/python_env/bin/activate
      #     python3 .github/scripts/data_analysis/create_benchmark_with_environment_json.py
      # - name: Upload benchmark data
      #   if: ${{ matrix.test-group.name == 'N300_performance' && !cancelled() }}
      #   uses: ./.github/actions/upload-data-via-sftp
      #   with:
      #     ssh-private-key: ${{ secrets.SFTP_BENCHMARK_WRITER_KEY }}
      #     sftp-batchfile: .github/actions/upload-data-via-sftp/benchmark_data_batchfile.txt
      #     username: ${{ secrets.SFTP_BENCHMARK_WRITER_USERNAME }}
      #     hostname: ${{ secrets.SFTP_BENCHMARK_WRITER_HOSTNAME }}
      # - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
      #   timeout-minutes: 10
      #   if: ${{ !cancelled() }}
      #   with:
      #     path: |
      #       generated/test_reports/
      #     prefix: "test_reports_"
      # - name: Disable Performance mode
      #   if: ${{ matrix.test-group.name == 'N300_performance' }}
      #   run: |
      #     sudo cpupower frequency-set -g ondemand
#-----------------------Dockerizing new way doesn't work----------------------------------------
    # name: ${{ matrix.test-group.name }}
    # runs-on: ${{ matrix.test-group.runs-on }}
    # container:
    #   image: ${{ inputs.docker-image }}
    #   env:
    #     TT_METAL_HOME: /work
    #     PYTHONPATH: /work
    #     ARCH_NAME: ${{ matrix.test-group.arch }}
    #     LOGURU_LEVEL: INFO
    #     LD_LIBRARY_PATH: /work/build/lib
    #     GITHUB_ACTIONS: true
    #   volumes:
    #     - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
    #     - /dev/hugepages-1G:/dev/hugepages-1G
    #     - /mnt/MLPerf:/mnt/MLPerf
    #   options: "--device /dev/tenstorrent"
    # defaults:
    #   run:
    #     shell: bash
    #     working-directory: /work # https://github.com/actions/runner/issues/878
    # steps:
    #   - name: ⬇️ Checkout
    #     uses: actions/checkout@v4
    #     with:
    #       submodules: recursive
    #       path: docker-job # Here be dragons; keep it scoped to our desired volume, yet must be under github.workspace and be sure to clean up at the end
    #   - name: ⬇️ Download Build
    #     uses: actions/download-artifact@v4
    #     timeout-minutes: 10
    #     with:
    #       name: ${{ inputs.build-artifact-name }}
    #       path: docker-job
    #   - name: Extract files
    #     run: tar -xvf ttm_any.tar
    #   - name: ⬇️ Download Wheel
    #     uses: actions/download-artifact@v4
    #     with:
    #       name: ${{ inputs.wheel-artifact-name }}
    #       path: docker-job
    #   - name: Install Wheel
    #     run: |
    #       WHEEL_FILENAME=$(ls -1 *.whl)
    #       pip3 install $WHEEL_FILENAME
    #   - name: Enable Performance mode
    #     if: ${{ matrix.test-group.name == 'N300_performance' }}
    #     run: |
    #       sudo cpupower frequency-set -g performance
    #   - name: Run demo regression tests
    #     timeout-minutes: 70
    #     run: |
    #       source ./tests/scripts/single_card/run_single_card_demo_tests.sh
    #       ${{ matrix.test-group.cmd }}
    #   - name: Save environment data
    #     if: ${{ matrix.test-group.name == 'N300_performance' && !cancelled() }}
    #     run: |
    #       python3 .github/scripts/data_analysis/create_benchmark_with_environment_json.py
    #   - name: Upload benchmark data
    #     if: ${{ matrix.test-group.name == 'N300_performance' && !cancelled() }}
    #     uses: ./.github/actions/upload-data-via-sftp
    #     with:
    #       ssh-private-key: ${{ secrets.SFTP_BENCHMARK_WRITER_KEY }}
    #       sftp-batchfile: .github/actions/upload-data-via-sftp/benchmark_data_batchfile.txt
    #       username: ${{ secrets.SFTP_BENCHMARK_WRITER_USERNAME }}
    #       hostname: ${{ secrets.SFTP_BENCHMARK_WRITER_HOSTNAME }}
    #   - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
    #     timeout-minutes: 10
    #     if: ${{ !cancelled() }}
    #     with:
    #       path: |
    #         generated/test_reports/
    #       prefix: "test_reports_"
