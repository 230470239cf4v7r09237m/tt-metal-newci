name: "[internal] Single-card Demo tests impl"

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string


jobs:
  single-card-demo-tests:
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          {
            name: "func_test1",
            cmd: run_n300_func_tests,
            test-category: "functionality",
            runner-label: "N150"
          },
          {
            name: "func_test2",
            cmd: run_n300_func_tests,
            test-category: "functionality",
            runner-label: "N300"
          },
          {
            name: "perf_test1",
            cmd: run_n300_perf_tests,
            test-category: "performance",
            runner-label: "N300"
          },
          {
            name: "perf_test2",
            cmd: run_n300_perf_tests,
            test-category: "performance",
            runner-label: "N150"
          },
          {
            name: "perf_test3",
            cmd: run_n300_perf_tests,
            test-category: "performance",
            runner-label: "N300"
          }
        ]

    name: ${{ matrix.test-group.name }}
    env:
      ARCH_NAME: ${{ inputs.arch }}
      LOGURU_LEVEL: INFO
      LD_LIBRARY_PATH: ${{ github.workspace }}/build/lib
    runs-on: ${{ matrix.test-group.test-category == 'performance' && matrix.test-group.runner-label == 'N300' && 'N300, pipeline-perf, bare-metal, in-service' || format('{0}, cloud-virtual-machine, in-service', matrix.test-group.runner-label) }}
    steps:
      - uses: tenstorrent/tt-metal/.github/actions/checkout-with-submodule-lfs@main
      - name: Enable Performance mode
        if: ${{ matrix.test-group.test-category == 'performance' && matrix.test-group.runner-label == 'N300' }}
        run: |
          sudo cpupower frequency-set -g performance
      - uses: ./.github/actions/ensure-active-weka-mount
      - name: Set up dynamic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - uses: ./.github/actions/prepare-metal-run
      - uses: ./.github/actions/install-python-deps
      - name: Run demo regression tests
        timeout-minutes: 90
        run: |
          source ${{ github.workspace }}/python_env/bin/activate
          cd $TT_METAL_HOME
          export PYTHONPATH=$TT_METAL_HOME
          source ${{ github.workspace }}/tests/scripts/single_card/run_single_card_demo_tests.sh
          ${{ matrix.test-group.cmd }}
      - name: Save environment data
        if: ${{ matrix.test-group.test-category == 'performance' && matrix.test-group.runner-label == 'N300' && !cancelled() }}
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          source ${{ github.workspace }}/python_env/bin/activate
          python3 .github/scripts/data_analysis/create_benchmark_with_environment_json.py
      - name: Upload benchmark data
        if: ${{ inputs.test-category == 'performance' && inputs.runner-label == 'N300' && !cancelled() }}
        uses: ./.github/actions/upload-data-via-sftp
        with:
          ssh-private-key: ${{ secrets.SFTP_BENCHMARK_WRITER_KEY }}
          sftp-batchfile: .github/actions/upload-data-via-sftp/benchmark_data_batchfile.txt
          username: ${{ secrets.SFTP_BENCHMARK_WRITER_USERNAME }}
          hostname: ${{ secrets.SFTP_BENCHMARK_WRITER_HOSTNAME }}
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          path: |
            generated/test_reports/
          prefix: "test_reports_"
      - name: Disable Performance mode
        if: ${{ inputs.test-category == 'performance' && inputs.runner-label == 'N300' }}
        run: |
          sudo cpupower frequency-set -g ondemand

#          {
#            name: "N150",
#            arch: wormhole_b0,
#            runs-on: ["cloud-virtual-machine", "N150", "in-service"],
#            cmd: [run_common_func_tests, run_common_perf_tests],
#            performance: false
#          },
