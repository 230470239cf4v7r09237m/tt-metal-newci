name: "[post-commit] Build C++ binaries with all configs"

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-lib:
    strategy:
      matrix:
        config: [
          { type: debug, runs-on: ubuntu-20.04 },
          { type: release, runs-on: ubuntu-20.04 },
          { type: assert, runs-on: build },
        ]
        arch: [grayskull, wormhole_b0]
        os: [ubuntu-20.04]
    env:
      ARCH_NAME: ${{ matrix.arch }}
      CONFIG: ${{ matrix.config.type }}
      # So we can get all the makefile output we want
      SILENT: 0
    runs-on: ${{ matrix.config.runs-on }}
    name: build ${{ matrix.config.type }} ${{ matrix.arch }}
    steps:
      - uses: tenstorrent-metal/metal-workflows/.github/actions/checkout-with-submodule-lfs@v2.0.0
      - uses: ./.github/actions/install-metal-deps
        with:
          os: ${{ matrix.os }}
      - uses: ./.github/actions/install-metal-dev-deps
        with:
          os: ${{ matrix.os }}
      - name: Set up dynamic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - name: Build tt-metal libraries
        run: make build
      - name: Remove unnecessary artifacts
        run: |
          rm -rf build/python_env build/git_hooks
          find build/ -name *.so -or -name *.a -or -name *.o | xargs strip -d
      - name: 'Tar files'
        run: tar -cvf ttm_${{ matrix.arch }}-${{ matrix.config.type}}.tar build
      - name: Upload libraries as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: metal-build-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.config.type }}
          path: ttm_${{ matrix.arch }}-${{ matrix.config.type}}.tar
  build-other:
    strategy:
      matrix:
        config: [debug, release, assert]
        arch: [grayskull, wormhole_b0]
        os: [ubuntu-20.04]
        test-group: [
          {name: C++ tests, cmd: make tests},
          {name: docs, cmd: ./tests/scripts/build_docs.sh},
        ]
    needs: build-lib
    name: build ${{ matrix.test-group.name }} ${{ matrix.config }} ${{ matrix.arch }}
    env:
      ARCH_NAME: ${{ matrix.arch }}
      CONFIG: ${{ matrix.config }}
      # So we can get all the makefile output we want
      SILENT: 0
    runs-on: ${{ matrix.os }}
    steps:
      - uses: tenstorrent-metal/metal-workflows/.github/actions/checkout-with-submodule-lfs@v2.0.0
      - uses: ./.github/actions/install-metal-deps
        with:
          os: ${{ matrix.os }}
      - uses: ./.github/actions/install-metal-dev-deps
        with:
          os: ${{ matrix.os }}
      - name: Set up dynamic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - uses: actions/download-artifact@v4
        with:
          name: metal-build-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.config }}
      - name: Extract files
        run: tar -xvf ttm_${{ matrix.arch }}-${{ matrix.config}}.tar
      - name: Build ${{ matrix.test-group.name }}
        run: |
          cd $GITHUB_WORKSPACE
          ${{ matrix.test-group.cmd }}
