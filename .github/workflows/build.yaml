name: "[post-commit] Build C++ binaries with all configs"

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-lib:
    strategy:
      matrix:
        build: [
          {type: Debug, cxx_compiler: clang++-17, c_compiler: clang-17, runs-on: ubuntu-20.04, os: ubuntu-20.04},
          {type: RelWithDebInfo,  cxx_compiler: clang++-17, c_compiler: clang-17, runs-on: ubuntu-20.04, os: ubuntu-20.04},
          # {type: Debug, cxx_compiler: clang++-17, c_compiler: clang-17, runs-on: ubuntu-22.04},
          # {type: RelWithDebInfo,  cxx_compiler: clang++-17, c_compiler: clang-17, runs-on: ubuntu-22.04},
          # {type: Release,  cxx_compiler: clang++-17, c_compiler: clang-17, runs-on: ubuntu-22.04},
          {type: Debug, cxx_compiler: g++-12, c_compiler: gcc-12, runs-on: ubuntu-22.04, os: ubuntu-22.04},
          # {type: RelWithDebInfo,  cxx_compiler: g++-12, c_compiler: gcc-12, runs-on: ubuntu-22.04},
          {type: Release,  cxx_compiler: g++-12, c_compiler: gcc-12, runs-on: ubuntu-22.04, os: ubuntu-22.04},
        ]
        arch: [grayskull, wormhole_b0, blackhole]
    env:
      ARCH_NAME: ${{ matrix.arch }}
      # So we can get all the makefile output we want
      VERBOSE: 1
    runs-on: ${{ matrix.build.runs-on }}
    name: cmake ${{ matrix.build.type }} ${{ matrix.build.cxx_compiler }} ${{ matrix.arch }} ${{ matrix.build.os }}
    steps:
      - uses: tenstorrent-metal/metal-workflows/.github/actions/checkout-with-submodule-lfs@v2.0.0
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}-${{ matrix.build.os }}-${{ matrix.build.type }} 
          max-size: 1G
      - name: Install dependencies
        if: ${{ matrix.build.runs-on != 'build' }}
        uses: ./.github/actions/install-metal-deps
        with:
          os: ${{ matrix.build.os }}
      - name: Install dev dependencies
        if: ${{ matrix.build.runs-on != 'build' }}
        uses: ./.github/actions/install-metal-dev-deps
        with:
          os: ${{ matrix.build.os }}
      - name: Set up dynamic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - name: Build C++ libraries and tests
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build.type }} -G Ninja -D CMAKE_C_COMPILER_LAUNCHER=ccache -D CMAKE_CXX_COMPILER_LAUNCHER=ccache
          cmake --build build --target tests
      - name: Check disk space
        run: |
          df -h      
      - uses: ./.github/actions/slack-report
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: U0593J2RQRZ # Bill Teng
