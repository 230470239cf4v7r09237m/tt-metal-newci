name: "[internal] Perf models impl"

on:
  workflow_call:

jobs:
  models-perf:
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        test-info: [
          {name: "GS", arch: grayskull, runs-on: ["E150", "pipeline-perf", "bare-metal", "in-service"], machine-type: "bare_metal"},
          {name: "N300 WH B0", arch: wormhole_b0, runs-on: ["N300", "pipeline-perf", "bare-metal", "in-service"], machine-type: "bare_metal"},
        ]
        model-type: [llm_javelin, cnn_javelin, other]
        include:
          - test-info: {name: "N300 Perf tests", arch: wormhole_b0, runs-on: ["N300", "pipeline-perf", "bare-metal", "in-service"], machine-type: "bare_metal", tracy: true, owner_id: ULMEPM2MA} # Sean Nijjar
            model-type: CCL
    name: "${{ matrix.model-type }} ${{ matrix.test-info.name }}"
    env:
      TT_METAL_ENV: ${{ vars.TT_METAL_ENV }}
      ARCH_NAME: ${{ matrix.test-info.arch }}
      LOGURU_LEVEL: INFO
      LD_LIBRARY_PATH: ${{ github.workspace }}/build/lib
    runs-on: ${{ matrix.test-info.runs-on }}
    steps:
      - uses: tenstorrent/tt-metal/.github/actions/checkout-with-submodule-lfs@main
      - name: Enable Performance mode
        run: |
          sudo cpupower frequency-set -g performance
      - uses: ./.github/actions/ensure-active-weka-mount
      - name: Set up dynamic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
          echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV
      - name: Download profiler build artifact
        id: download-profiler-artifact
        if: ${{ matrix.test-info.tracy }}
        uses: actions/download-artifact@v4
        with:
          name: TTMetal_build_${{ matrix.test-info.arch }}_profiler
        continue-on-error: true
      - name: Download build artifact
        id: download-artifact
        if: ${{ !matrix.test-info.tracy }}
        uses: actions/download-artifact@v4
        with:
          name: TTMetal_build_${{ matrix.test-info.arch }}
      - name: Extract files
        if: ${{ matrix.test-info.tracy && steps.download-profiler-artifact.outcome == 'success' || !matrix.test-info.tracy }}
        run: tar -xvf ttm_${{ matrix.test-info.arch }}.tar
      - uses: ./.github/actions/install-python-deps
      - name: Run performance regressions
        id: performance_tests
        if: ${{ matrix.test-info.tracy && steps.download-profiler-artifact.outcome == 'success' || !matrix.test-info.tracy }}
        timeout-minutes: 70
        run: |
          source ${{ github.workspace }}/python_env/bin/activate
          ./tests/scripts/run_tests.sh --tt-arch $ARCH_NAME --pipeline-type ${{ matrix.model-type }}_models_performance_${{ matrix.test-info.machine-type }}
      # TODO: Fix the pipeline before enabling notifications.
      #- uses: ./.github/actions/slack-report
      #  if: ${{ failure() }}
      #  with:
      #    slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Check perf report exists
        id: check-perf-report
        if: ${{ !cancelled() && (matrix.test-info.tracy && steps.download-profiler-artifact.outcome == 'success' || !matrix.test-info.tracy) }}
        run: |
          TODAY=$(date +%Y_%m_%d)
          PERF_REPORT_FILENAME_MODELS="Models_Perf_${TODAY}.csv"
          PERF_REPORT_FILENAME_CCL="CCL_Perf_${TODAY}.csv"
          if [ "${{ matrix.test-info.tracy }}" == "true" ]; then
            if [ -f "$PERF_REPORT_FILENAME_CCL" ]; then
              echo "Found CCL Perf report: $PERF_REPORT_FILENAME_CCL"
              echo "perf_report_filename=$PERF_REPORT_FILENAME_CCL" >> "$GITHUB_OUTPUT"
            else
              echo "No CCL perf report found for today."
              exit 1
            fi
          else
            if [ -f "$PERF_REPORT_FILENAME_MODELS" ]; then
              echo "Found Models Perf report: $PERF_REPORT_FILENAME_MODELS"
              echo "perf_report_filename=$PERF_REPORT_FILENAME_MODELS" >> "$GITHUB_OUTPUT"
            else
              echo "No Models perf report found for today."
              exit 1
            fi
          fi
      - name: Upload perf report
        if: ${{ !cancelled() && steps.check-perf-report.conclusion == 'success' }}
        uses: actions/upload-artifact@v4
        with:
          name: perf-report-csv-${{ matrix.model-type }}-${{ matrix.test-info.arch }}-${{ matrix.test-info.machine-type }}
          path: "${{ steps.check-perf-report.outputs.perf_report_filename }}"
      - name: Disable Performance mode
        if: always()
        run: |
          sudo cpupower frequency-set -g ondemand
