name: "[internal] Python wheels build and test impl"

on:
  workflow_call:
    inputs:
      from-precompiled:
        description: "Use precompiled assets for wheel build"
        default: True
        type: boolean

jobs:
  build-wheels:
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        arch: [grayskull, wormhole_b0]
    uses: ./.github/workflows/_build-wheels-impl.yaml
    with:
      os: ${{ matrix.os }}
      arch: ${{ matrix.arch }}
      from-precompiled: ${{ inputs.from-precompiled }}
  test-wheels-host:
    needs: build-wheels
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        runner-hw-info: [
          {arch: grayskull},
          {arch: wormhole_b0}
        ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-metal-deps
        with:
          os: ${{ matrix.os }}
      - uses: actions/download-artifact@v4
        with:
          name: eager-dist-${{ matrix.os }}-${{ matrix.runner-hw-info.arch }}
      - name: Set up end-to-end tests environment
        run: ./tests/scripts/set_up_end_to_end_tests_env.sh
      - name: Activate env and run release tests - host
        shell: bash
        run: |
          source tests/end_to_end_tests/env/bin/activate
          cd tests/end_to_end_tests
          pytest -c conftest.py . -m eager_host_side
  test-wheels-silicon:
    needs: build-wheels
    strategy:
      matrix:
        os: [ubuntu-20.04]
        runner-hw-info: [
          {arch: grayskull, type: E150},
          {arch: wormhole_b0, type: N150},
          {arch: wormhole_b0, type: N300}
        ]
    runs-on: ["cloud-virtual-machine", "${{ matrix.runner-hw-info.type }}", "in-service"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: eager-dist-${{ matrix.os }}-${{ matrix.runner-hw-info.arch }}
      - name: Set up end-to-end tests environment
        run: ./tests/scripts/set_up_end_to_end_tests_env.sh
      - name: Activate env and run release tests - silicon
        timeout-minutes: 2
        shell: bash
        run: |
          source tests/end_to_end_tests/env/bin/activate
          cd tests/end_to_end_tests
          pytest -c conftest.py . -m eager_package_silicon
