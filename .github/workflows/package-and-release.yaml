name: Package and release

on:
  push:
    branches: ["release"]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  get-params:
    runs-on: ubuntu-latest
    outputs:
      is-release-candidate: ${{ steps.get-is-release-candidate.outputs.is-release-candidate }}
    steps:
      - name: Get is-release-candidate
        id: get-is-release-candidate
        run: |
          isReleaseCandidate=${{ github.ref_type == 'branch' && github.event_name == 'push' }}
          echo "is-release-candidate=$isReleaseCandidate" >> "$GITHUB_OUTPUT"
  create-tag:
    needs: [get-params]
    uses: tenstorrent-metal/metal-workflows/.github/workflows/release-verify-or-create-tag.yaml@main
    with:
      fetch_depth: 0
      bump_each_commit: false
      release_candidate_suffix: ${{ needs.get-params.outputs.is-release-candidate && fromJSON(needs.get-params.outputs.is-release-candidate) }}
    secrets:
      CHECKOUT_TOKEN: ${{ secrets.CHECKOUT_TOKEN }}
  build-eager-package:
    needs: create-tag
    strategy:
      matrix:
        os: [ubuntu-20.04]
        arch: [grayskull, wormhole_b0]
    uses: ./.github/workflows/eager-package.yaml
    with:
      environment: dev
      os: ${{ matrix.os }}
      arch: ${{ matrix.arch }}
    secrets:
      CHECKOUT_TOKEN: ${{ secrets.CHECKOUT_TOKEN }}
  # Candidate for breaking up
  create-and-upload-draft-release:
    needs: [create-tag, build-eager-package]
    strategy:
      matrix:
        os: [ubuntu-20.04]
        arch: [grayskull, wormhole_b0]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download eager Python packages
        uses: actions/download-artifact@v3
        with:
          name: eager-dist-${{ matrix.os }}-${{ matrix.arch }}
      - name: Create VERSION
        run: echo ${{ needs.create-tag.outputs.version }} > VERSION
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create-tag.outputs.version }}
          name: ${{ needs.create-tag.outputs.version }}
          draft: true
          files: |
            metal_libs-*+*.whl
            VERSION
          fail_on_unmatched_files: true
