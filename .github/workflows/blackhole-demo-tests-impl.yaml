name: "[internal] Blackhole Demo tests impl"

on:
  workflow_call:

jobs:
  single-card-demo-tests:
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          {
            name: "BH_functionality",
            arch: blackhole,
            runs-on: ["cloud-virtual-machine", "BH", "in-service"],
            cmd:
          },
          {
            name: "BH_performance",
            arch: blackhole,
            # current blackhole baremetals are not tagged with bare-metal
            # will need to be tagged if running perf tests on BH
            runs-on: ["BH", "bare-metal", "in-service"],
            cmd:
          }
        ]
    name: ${{ matrix.test-group.name }}
    env:
      ARCH_NAME: ${{ matrix.test-group.arch }}
      LOGURU_LEVEL: INFO
      LD_LIBRARY_PATH: ${{ github.workspace }}/build/lib
    runs-on: ${{ matrix.test-group.runs-on }}
    steps:
      - uses: tenstorrent/tt-metal/.github/actions/checkout-with-submodule-lfs@main
      - name: Enable Performance mode
        if: ${{ matrix.test-group.name == 'BH_performance' }}
        run: |
          sudo cpupower frequency-set -g performance
      - name: Set up dynamic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - uses: ./.github/actions/prepare-metal-run
      - uses: ./.github/actions/install-python-deps
      - name: Run demo regression tests
        timeout-minutes: 70
        run: |
          source ${{ github.workspace }}/python_env/bin/activate
          cd $TT_METAL_HOME
          export PYTHONPATH=$TT_METAL_HOME
          source ${{ github.workspace }}/tests/scripts/single_card/run_single_card_demo_tests.sh
          ${{ matrix.test-group.cmd }}
      - name: Save environment data
        if: ${{ matrix.test-group.name == 'BH_performance' && !cancelled() }}
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          source ${{ github.workspace }}/python_env/bin/activate
          python3 .github/scripts/data_analysis/create_benchmark_with_environment_json.py
      - name: Upload benchmark data
        if: ${{ matrix.test-group.name == 'BH_performance' && !cancelled() }}
        uses: ./.github/actions/upload-data-via-sftp
        with:
          ssh-private-key: ${{ secrets.SFTP_BENCHMARK_WRITER_KEY }}
          sftp-batchfile: .github/actions/upload-data-via-sftp/benchmark_data_batchfile.txt
          username: ${{ secrets.SFTP_BENCHMARK_WRITER_USERNAME }}
          hostname: ${{ secrets.SFTP_BENCHMARK_WRITER_HOSTNAME }}
      - uses: ./.github/actions/upload-artifact-with-job-uuid
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          path: |
            generated/test_reports/
          prefix: "test_reports_"
      - name: Disable Performance mode
        if: ${{ matrix.test-group.name == 'BH_performance' }}
        run: |
          sudo cpupower frequency-set -g ondemand
