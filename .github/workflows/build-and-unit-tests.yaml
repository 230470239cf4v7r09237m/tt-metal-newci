name: "[post-commit] all - Slow Dispatch post-commit main build and unit tests"

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  workflow_call:

jobs:
  build-and-unit-tests:
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        runner-info: [
          {arch: grayskull, fw: "fw-date-2023-06-28"},
          {arch: wormhole_b0, fw: "fw-date-2023-08-08"},
        ]
    env:
      TT_METAL_ENV: ${{ vars.TT_METAL_ENV }}
      ARCH_NAME: ${{ matrix.runner-info.arch }}
      TT_METAL_SLOW_DISPATCH_MODE: 1
    environment: dev
    runs-on: ["${{ matrix.runner-info.arch }}", "${{ matrix.runner-info.fw }}"]
    steps:
      - uses: tenstorrent-metal/metal-workflows/.github/actions/checkout-with-submodule-lfs@main
        with:
          token: ${{ secrets.CHECKOUT_TOKEN }}
      - name: Set up dyanmic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - name: Build tt-metal and libs
        run: make build
      - name: Build tt-metal CPP tests
        run: make tests
      - name: Run pre/post regression tests
        timeout-minutes: 90
        run: |
          source build/python_env/bin/activate
          ./tests/scripts/run_tests.sh --tt-arch $ARCH_NAME --pipeline-type post_commit --dispatch-mode slow
  check-syseng-assets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CHECKOUT_TOKEN }}
      - name: Check asset download script
        env:
          GITHUB_TOKEN: ${{ secrets.CHECKOUT_TOKEN }}
        run: |
          cd infra/machine_setup
          ./scripts/download_public_machine_setup_assets.sh
  check-spdx-licenses:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CHECKOUT_TOKEN }}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'
          cache-dependency-path: infra/requirements-infra.txt
      - name: Install infra deps
        run: python -m pip install -r infra/requirements-infra.txt
      - name: Check SPDX licenses
        run: python -m check_copyright --verbose --dry-run --config ./check_copyright_config.yaml .
