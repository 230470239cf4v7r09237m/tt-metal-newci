name: "[internal] Single-card Demo tests impl"

on:
  workflow_call:
    inputs:
      build-artifact-name:
        required: true
        type: string
      docker-image:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string
      arch:
        required: true
        type: string

jobs:
  single-card-demo-tests:
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { name: "falcon7b", runner-label: "N150", performance: false, cmd: run_falcon7b_func},
          { name: "mistral7b", runner-label: "N150", performance: false, cmd: run_mistral7b_func},
          { name: "qwen7b", runner-label: "N150", performance: false, cmd: run_qwen7b_func},
          { name: "llama3", runner-label: "N150", performance: false, cmd: run_llama3_func},
          { name: "vgg", runner-label: "N150", performance: false, cmd: run_vgg_func},
          { name: "bert_tiny", runner-label: "N150", performance: false, cmd: run_bert_tiny_func},
          { name: "bert", runner-label: "N150", performance: false, cmd: run_bert_func},
          { name: "resnet", runner-label: "N150", performance: false, cmd: run_resnet_func},
          { name: "distilbert", runner-label: "N150", performance: false, cmd: run_distilbert_func},
          { name: "covnet_mnist", runner-label: "N150", performance: false, cmd: run_covnet_mnist_func},
          { name: "mnist", runner-label: "N150", performance: false, cmd: run_mnist_func},
          { name: "squeezebert", runner-label: "N150", performance: false, cmd: run_squeezebert_func},
          { name: "roberta", runner-label: "N150", performance: false, cmd: run_roberta_func},
        ]
    runs-on: 'N150, cloud-virtual-machine, in-service'
    name: ${{ matrix.test-group.name }}
    env:
      ARCH_NAME: ${{ inputs.arch }}
      LOGURU_LEVEL: INFO
      LD_LIBRARY_PATH: ${{ github.workspace }}/build/lib
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: ⬇️ Download Build
        uses: actions/download-artifact@v4
        timeout-minutes: 10
        with:
          name: ${{ inputs.build-artifact-name }}
      - name: Extract files
        run: tar -xvf ttm_any.tar
      - name: ⬇️ Download Wheel
        uses: actions/download-artifact@v4
        timeout-minutes: 10
        with:
          name: ${{ inputs.wheel-artifact-name }}
      - uses: ./.github/actions/ensure-active-weka-mount
      - name: Run demo regression tests
        uses: ./.github/actions/docker-run
        timeout-minutes: 90
        env:
          LOGURU_LEVEL: INFO
        with:
          docker_image: ${{ inputs.docker-image || 'docker-image-unresolved!' }}
          docker_password: ${{ secrets.GITHUB_TOKEN }}
          docker_opts: |
            -e TT_METAL_HOME=${{ github.workspace }}
            -e ARCH_NAME=${{ inputs.arch }}
            -e LD_LIBRARY_PATH=${{ github.workspace }}/build/lib
            -v /mnt/MLPerf:/mnt/MLPerf:ro
          install_wheel: true
          run_args: |
            source ${{ github.workspace }}/tests/scripts/single_card/run_single_card_demo_tests.sh
            ${{ matrix.test-group.cmd }}
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          path: |
            generated/test_reports/
          prefix: "test_reports_"

