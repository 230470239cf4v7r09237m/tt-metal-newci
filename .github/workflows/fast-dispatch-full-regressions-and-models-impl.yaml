name: "[internal] Nightly fast dispatch tests impl"

on:
  workflow_call:
    inputs:
      build-artifact-name:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string
      docker-image:
        required: true
        type: string

jobs:
  fd-nightly:
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        test-group:
          [
            {
              name: "WH N150 ttnn nightly",
              arch: wormhole_b0,
              runs-on: ["cloud-virtual-machine", "N150", "in-service"],
              cmd: tests/scripts/single_card/nightly/run_ttnn.sh,
              timeout: 70
            },
            {
              name: "WH N300 ttnn nightly",
              arch: wormhole_b0,
              runs-on: ["cloud-virtual-machine", "N300", "in-service"],
              cmd: tests/scripts/single_card/nightly/run_ttnn.sh,
              timeout: 70
            },
          ]
    name: FD ${{ matrix.test-group.name }} ${{ matrix.test-group.arch }}
    container:
      image: ${{ inputs.docker-image }}
      env:
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        ARCH_NAME: ${{ matrix.test-group.arch }}
        LOGURU_LEVEL: INFO
        GITHUB_ACTIONS: true
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /dev/hugepages-1G:/dev/hugepages-1G
        - /mnt/MLPerf:/mnt/MLPerf
      options: "--device /dev/tenstorrent"
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    runs-on: ${{ matrix.test-group.runs-on }}
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          path: docker-job # Here be dragons; keep it scoped to our desired volume, yet must be under github.workspace and be sure to clean up at the end
      - name: ⬇️ Download Build
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.build-artifact-name }}
          path: docker-job
      - name: Extract files
        run: tar -xvf ttm_any.tar
      - name: ⬇️ Download Wheel
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.wheel-artifact-name }}
          path: docker-job
      - name: Install Wheel
        run: |
          WHEEL_FILENAME=$(ls -1 *.whl)
          pip3 install $WHEEL_FILENAME
      - uses: ./.github/actions/ensure-active-weka-mount
      - name: Run frequent reg tests scripts
        timeout-minutes: ${{ matrix.test-group.timeout }}
        run: ${{ matrix.test-group.cmd }}
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          path: |
            generated/test_reports/
          prefix: "test_reports_"
      - name: Cleanup
        if: always()
        run: |
          # We are forced to checkout the repo into a subdir of the host's workdir; this pollutes the host
          # with root-owned files.  Be sure to clean up after ourselves in case we're on a non-ephemeral runner.
          echo "pre rm"
          ls -al /__w/tt-metal/tt-metal
          rm -rf /__w/tt-metal/tt-metal/docker-job
          echo "post rm"
          ls -al /__w/tt-metal/tt-metal
  nightly-wh-models:
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        card: [N150, N300]
        model: [common_models, functional_unet, llama3.2-1B, qwen, mistral7b, mistral7b_eth, resnet50, yolov4, whisper]
    name: Nightly ${{ matrix.card }} ${{ matrix.model }}
    container:
      image: ${{ inputs.docker-image }}
      env:
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        ARCH_NAME: wormhole_b0
        LOGURU_LEVEL: INFO
        GITHUB_ACTIONS: true
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /dev/hugepages-1G:/dev/hugepages-1G
        - /mnt/MLPerf:/mnt/MLPerf
      options: "--device /dev/tenstorrent"
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    runs-on: ["cloud-virtual-machine", "in-service", "${{ matrix.card }}"]
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          path: docker-job # Here be dragons; keep it scoped to our desired volume, yet must be under github.workspace and be sure to clean up at the end
      - name: ⬇️ Download Build
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.build-artifact-name }}
          path: docker-job
      - name: Extract files
        run: tar -xvf ttm_any.tar
      - name: ⬇️ Download Wheel
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.wheel-artifact-name }}
          path: docker-job
      - name: Install Wheel
        run: |
          WHEEL_FILENAME=$(ls -1 *.whl)
          pip3 install $WHEEL_FILENAME
      - uses: ./.github/actions/ensure-active-weka-mount
      - name: Set up WH_ARCH_YAML for eth-enabled models
        if: ${{ matrix.model != 'mistral7b' }}
        run: |
          echo "WH_ARCH_YAML=wormhole_b0_80_arch_eth_dispatch.yaml" >> $GITHUB_ENV
      - name: Run frequent reg tests scripts
        timeout-minutes: 30
        # Llama3 has a single pytest for multiple llama models, hence it requires calling it multiple times.
        # Due to host OOM issues in CI vm, we currently only run llama-1B in the model matrix.
        run: |
          if [[ "${{ matrix.model }}" == *"llama3"* ]]; then
            pytest -n auto tests/nightly/single_card/llama3 -k ${{ matrix.model }}
          else
            pytest -n auto tests/nightly/single_card/${{ matrix.model }}
          fi
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          path: |
            generated/test_reports/
          prefix: "test_reports_"
      - name: Cleanup
        if: always()
        run: |
          # We are forced to checkout the repo into a subdir of the host's workdir; this pollutes the host
          # with root-owned files.  Be sure to clean up after ourselves in case we're on a non-ephemeral runner.
          echo "pre rm"
          ls -al /__w/tt-metal/tt-metal
          rm -rf /__w/tt-metal/tt-metal/docker-job
          echo "post rm"
          ls -al /__w/tt-metal/tt-metal
  nightly-wh-unstable-models:
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        test-config:
          - model: "stable_diffusion"
            cmd: SLOW_MATMULS=1 pytest --timeout 1000 -n auto tests/nightly/single_card/stable_diffusion
              # Skipping due to issue #15932
              # - model: "mamba 1"
              # cmd: pytest --timeout 900 -n auto tests/nightly/single_card/mamba --splits 6 --group 1
              # - model: "mamba 2"
              # cmd: pytest --timeout 900 -n auto tests/nightly/single_card/mamba --splits 6 --group 2
              # - model: "mamba 3"
              # cmd: pytest --timeout 900 -n auto tests/nightly/single_card/mamba --splits 6 --group 3
              # - model: "mamba 4"
              # cmd: pytest --timeout 900 -n auto tests/nightly/single_card/mamba --splits 6 --group 4
          - model: "mamba 5"
            cmd: pytest --timeout 900 -n auto tests/nightly/single_card/mamba --splits 6 --group 5
              # - model: "mamba 6"
              # cmd: pytest --timeout 900 -n auto tests/nightly/single_card/mamba --splits 6 --group 6
        card: [N150, N300]
    name: "[Unstable] Nightly ${{ matrix.card }} ${{ matrix.test-config.model }}"
    container:
      image: ${{ inputs.docker-image }}
      env:
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        ARCH_NAME: wormhole_b0
        LOGURU_LEVEL: INFO
        GITHUB_ACTIONS: true
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /dev/hugepages-1G:/dev/hugepages-1G
        - /mnt/MLPerf:/mnt/MLPerf
      options: "--device /dev/tenstorrent"
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    runs-on: ["cloud-virtual-machine", "in-service", "${{ matrix.card }}"]
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          path: docker-job # Here be dragons; keep it scoped to our desired volume, yet must be under github.workspace and be sure to clean up at the end
      - name: ⬇️ Download Build
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.build-artifact-name }}
          path: docker-job
      - name: Extract files
        run: tar -xvf ttm_any.tar
      - name: ⬇️ Download Wheel
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.wheel-artifact-name }}
          path: docker-job
      - name: Install Wheel
        run: |
          WHEEL_FILENAME=$(ls -1 *.whl)
          pip3 install $WHEEL_FILENAME
      - uses: ./.github/actions/ensure-active-weka-mount
      - name: Set up WH_ARCH_YAML for eth-enabled models
        run: |
          echo "WH_ARCH_YAML=wormhole_b0_80_arch_eth_dispatch.yaml" >> $GITHUB_ENV
      - name: Run frequent reg tests scripts
        timeout-minutes: 60
        run: ${{ matrix.test-config.cmd }}
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          path: |
            generated/test_reports/
          prefix: "test_reports_"
      - name: Cleanup
        if: always()
        run: |
          # We are forced to checkout the repo into a subdir of the host's workdir; this pollutes the host
          # with root-owned files.  Be sure to clean up after ourselves in case we're on a non-ephemeral runner.
          echo "pre rm"
          ls -al /__w/tt-metal/tt-metal
          rm -rf /__w/tt-metal/tt-metal/docker-job
          echo "post rm"
          ls -al /__w/tt-metal/tt-metal
