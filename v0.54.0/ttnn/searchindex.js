Search.setIndex({"docnames": ["index", "resources/contributing", "resources/support", "tt_metal_models/get_performance", "tt_metal_models/get_started", "ttnn/about", "ttnn/adding_new_ttnn_operation", "ttnn/api", "ttnn/api/ttnn.GetDefaultDevice", "ttnn/api/ttnn.SetDefaultDevice", "ttnn/api/ttnn.abs", "ttnn/api/ttnn.abs_bw", "ttnn/api/ttnn.acos", "ttnn/api/ttnn.acos_bw", "ttnn/api/ttnn.acosh", "ttnn/api/ttnn.acosh_bw", "ttnn/api/ttnn.add", "ttnn/api/ttnn.add_bw", "ttnn/api/ttnn.addalpha", "ttnn/api/ttnn.addalpha_bw", "ttnn/api/ttnn.addcdiv", "ttnn/api/ttnn.addcdiv_bw", "ttnn/api/ttnn.addcmul", "ttnn/api/ttnn.addcmul_bw", "ttnn/api/ttnn.all_gather", "ttnn/api/ttnn.angle", "ttnn/api/ttnn.angle_bw", "ttnn/api/ttnn.arange", "ttnn/api/ttnn.argmax", "ttnn/api/ttnn.as_tensor", "ttnn/api/ttnn.asin", "ttnn/api/ttnn.asin_bw", "ttnn/api/ttnn.asinh", "ttnn/api/ttnn.asinh_bw", "ttnn/api/ttnn.assign_bw", "ttnn/api/ttnn.atan", "ttnn/api/ttnn.atan2", "ttnn/api/ttnn.atan2_bw", "ttnn/api/ttnn.atan_bw", "ttnn/api/ttnn.atanh", "ttnn/api/ttnn.atanh_bw", "ttnn/api/ttnn.bias_gelu_bw", "ttnn/api/ttnn.bitwise_and", "ttnn/api/ttnn.bitwise_left_shift", "ttnn/api/ttnn.bitwise_not", "ttnn/api/ttnn.bitwise_or", "ttnn/api/ttnn.bitwise_right_shift", "ttnn/api/ttnn.bitwise_xor", "ttnn/api/ttnn.cbrt", "ttnn/api/ttnn.ceil", "ttnn/api/ttnn.ceil_bw", "ttnn/api/ttnn.celu", "ttnn/api/ttnn.celu_bw", "ttnn/api/ttnn.clamp", "ttnn/api/ttnn.clamp_bw", "ttnn/api/ttnn.clip", "ttnn/api/ttnn.clip_bw", "ttnn/api/ttnn.clone", "ttnn/api/ttnn.close_device", "ttnn/api/ttnn.concat", "ttnn/api/ttnn.concat_bw", "ttnn/api/ttnn.conj", "ttnn/api/ttnn.conj_bw", "ttnn/api/ttnn.cos", "ttnn/api/ttnn.cos_bw", "ttnn/api/ttnn.cosh", "ttnn/api/ttnn.cosh_bw", "ttnn/api/ttnn.create_sharded_memory_config", "ttnn/api/ttnn.deallocate", "ttnn/api/ttnn.deg2rad", "ttnn/api/ttnn.deg2rad_bw", "ttnn/api/ttnn.digamma", "ttnn/api/ttnn.digamma_bw", "ttnn/api/ttnn.div", "ttnn/api/ttnn.div_bw", "ttnn/api/ttnn.div_no_nan", "ttnn/api/ttnn.div_no_nan_bw", "ttnn/api/ttnn.downsample", "ttnn/api/ttnn.dump_tensor", "ttnn/api/ttnn.elu", "ttnn/api/ttnn.elu_bw", "ttnn/api/ttnn.embedding", "ttnn/api/ttnn.embedding_bw", "ttnn/api/ttnn.empty", "ttnn/api/ttnn.empty_like", "ttnn/api/ttnn.eq", "ttnn/api/ttnn.eq_", "ttnn/api/ttnn.eqz", "ttnn/api/ttnn.erf", "ttnn/api/ttnn.erf_bw", "ttnn/api/ttnn.erfc", "ttnn/api/ttnn.erfc_bw", "ttnn/api/ttnn.erfinv", "ttnn/api/ttnn.erfinv_bw", "ttnn/api/ttnn.exp", "ttnn/api/ttnn.exp2", "ttnn/api/ttnn.exp2_bw", "ttnn/api/ttnn.exp_bw", "ttnn/api/ttnn.experimental.all_reduce", "ttnn/api/ttnn.experimental.dropout", "ttnn/api/ttnn.experimental.rotary_embedding", "ttnn/api/ttnn.expm1", "ttnn/api/ttnn.expm1_bw", "ttnn/api/ttnn.fill", "ttnn/api/ttnn.fill_bw", "ttnn/api/ttnn.fill_ones_rm", "ttnn/api/ttnn.fill_rm", "ttnn/api/ttnn.fill_zero_bw", "ttnn/api/ttnn.floor", "ttnn/api/ttnn.floor_bw", "ttnn/api/ttnn.floor_div", "ttnn/api/ttnn.fmod", "ttnn/api/ttnn.fmod_bw", "ttnn/api/ttnn.format_input_tensor", "ttnn/api/ttnn.format_output_tensor", "ttnn/api/ttnn.frac", "ttnn/api/ttnn.frac_bw", "ttnn/api/ttnn.from_device", "ttnn/api/ttnn.from_torch", "ttnn/api/ttnn.full", "ttnn/api/ttnn.full_like", "ttnn/api/ttnn.gcd", "ttnn/api/ttnn.ge", "ttnn/api/ttnn.ge_", "ttnn/api/ttnn.geglu", "ttnn/api/ttnn.gelu", "ttnn/api/ttnn.gelu_bw", "ttnn/api/ttnn.gez", "ttnn/api/ttnn.global_avg_pool2d", "ttnn/api/ttnn.glu", "ttnn/api/ttnn.group_norm", "ttnn/api/ttnn.gt", "ttnn/api/ttnn.gt_", "ttnn/api/ttnn.gtz", "ttnn/api/ttnn.hardshrink", "ttnn/api/ttnn.hardshrink_bw", "ttnn/api/ttnn.hardsigmoid", "ttnn/api/ttnn.hardsigmoid_bw", "ttnn/api/ttnn.hardswish", "ttnn/api/ttnn.hardswish_bw", "ttnn/api/ttnn.hardtanh", "ttnn/api/ttnn.hardtanh_bw", "ttnn/api/ttnn.heaviside", "ttnn/api/ttnn.hypot", "ttnn/api/ttnn.hypot_bw", "ttnn/api/ttnn.i0", "ttnn/api/ttnn.i0_bw", "ttnn/api/ttnn.identity", "ttnn/api/ttnn.imag", "ttnn/api/ttnn.imag_bw", "ttnn/api/ttnn.indexed_fill", "ttnn/api/ttnn.is_imag", "ttnn/api/ttnn.is_real", "ttnn/api/ttnn.isclose", "ttnn/api/ttnn.isfinite", "ttnn/api/ttnn.isinf", "ttnn/api/ttnn.isnan", "ttnn/api/ttnn.isneginf", "ttnn/api/ttnn.isposinf", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_", "ttnn/api/ttnn.kv_cache.update_cache_for_token_", "ttnn/api/ttnn.l1_loss", "ttnn/api/ttnn.layer_norm", "ttnn/api/ttnn.lcm", "ttnn/api/ttnn.ldexp", "ttnn/api/ttnn.ldexp_bw", "ttnn/api/ttnn.le", "ttnn/api/ttnn.le_", "ttnn/api/ttnn.leaky_relu", "ttnn/api/ttnn.leaky_relu_bw", "ttnn/api/ttnn.lerp", "ttnn/api/ttnn.lerp_bw", "ttnn/api/ttnn.lez", "ttnn/api/ttnn.lgamma", "ttnn/api/ttnn.lgamma_bw", "ttnn/api/ttnn.linear", "ttnn/api/ttnn.load_tensor", "ttnn/api/ttnn.log", "ttnn/api/ttnn.log10", "ttnn/api/ttnn.log10_bw", "ttnn/api/ttnn.log1p", "ttnn/api/ttnn.log1p_bw", "ttnn/api/ttnn.log2", "ttnn/api/ttnn.log2_bw", "ttnn/api/ttnn.log_bw", "ttnn/api/ttnn.log_sigmoid", "ttnn/api/ttnn.log_sigmoid_bw", "ttnn/api/ttnn.logaddexp", "ttnn/api/ttnn.logaddexp2", "ttnn/api/ttnn.logaddexp2_bw", "ttnn/api/ttnn.logaddexp_bw", "ttnn/api/ttnn.logical_and", "ttnn/api/ttnn.logical_and_", "ttnn/api/ttnn.logical_not", "ttnn/api/ttnn.logical_not_", "ttnn/api/ttnn.logical_or", "ttnn/api/ttnn.logical_or_", "ttnn/api/ttnn.logical_xor", "ttnn/api/ttnn.logical_xor_", "ttnn/api/ttnn.logit", "ttnn/api/ttnn.logit_bw", "ttnn/api/ttnn.logiteps_bw", "ttnn/api/ttnn.lt", "ttnn/api/ttnn.lt_", "ttnn/api/ttnn.ltz", "ttnn/api/ttnn.mac", "ttnn/api/ttnn.manage_device", "ttnn/api/ttnn.matmul", "ttnn/api/ttnn.max", "ttnn/api/ttnn.max_bw", "ttnn/api/ttnn.max_pool2d", "ttnn/api/ttnn.maximum", "ttnn/api/ttnn.mean", "ttnn/api/ttnn.min", "ttnn/api/ttnn.min_bw", "ttnn/api/ttnn.minimum", "ttnn/api/ttnn.mish", "ttnn/api/ttnn.model_preprocessing.preprocess_model", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters", "ttnn/api/ttnn.moreh_sum", "ttnn/api/ttnn.mse_loss", "ttnn/api/ttnn.mul_bw", "ttnn/api/ttnn.multigammaln", "ttnn/api/ttnn.multigammaln_bw", "ttnn/api/ttnn.multiply", "ttnn/api/ttnn.ne", "ttnn/api/ttnn.ne_", "ttnn/api/ttnn.neg", "ttnn/api/ttnn.neg_bw", "ttnn/api/ttnn.nextafter", "ttnn/api/ttnn.nez", "ttnn/api/ttnn.nonzero", "ttnn/api/ttnn.normalize_global", "ttnn/api/ttnn.normalize_hw", "ttnn/api/ttnn.ones", "ttnn/api/ttnn.ones_like", "ttnn/api/ttnn.open_device", "ttnn/api/ttnn.outer", "ttnn/api/ttnn.pad", "ttnn/api/ttnn.pad_to_tile_shape", "ttnn/api/ttnn.permute", "ttnn/api/ttnn.polar", "ttnn/api/ttnn.polar_bw", "ttnn/api/ttnn.polygamma", "ttnn/api/ttnn.polygamma_bw", "ttnn/api/ttnn.polyval", "ttnn/api/ttnn.pow", "ttnn/api/ttnn.pow_bw", "ttnn/api/ttnn.prelu", "ttnn/api/ttnn.prod", "ttnn/api/ttnn.prod_bw", "ttnn/api/ttnn.rad2deg", "ttnn/api/ttnn.rad2deg_bw", "ttnn/api/ttnn.rdiv", "ttnn/api/ttnn.rdiv_bw", "ttnn/api/ttnn.real", "ttnn/api/ttnn.real_bw", "ttnn/api/ttnn.reallocate", "ttnn/api/ttnn.reciprocal", "ttnn/api/ttnn.reciprocal_bw", "ttnn/api/ttnn.reduce_scatter", "ttnn/api/ttnn.register_post_operation_hook", "ttnn/api/ttnn.register_pre_operation_hook", "ttnn/api/ttnn.reglu", "ttnn/api/ttnn.relu", "ttnn/api/ttnn.relu6", "ttnn/api/ttnn.relu6_bw", "ttnn/api/ttnn.relu_bw", "ttnn/api/ttnn.relu_max", "ttnn/api/ttnn.relu_min", "ttnn/api/ttnn.remainder", "ttnn/api/ttnn.remainder_bw", "ttnn/api/ttnn.repeat", "ttnn/api/ttnn.repeat_bw", "ttnn/api/ttnn.repeat_interleave", "ttnn/api/ttnn.reshape", "ttnn/api/ttnn.rms_norm", "ttnn/api/ttnn.round", "ttnn/api/ttnn.round_bw", "ttnn/api/ttnn.rpow", "ttnn/api/ttnn.rpow_bw", "ttnn/api/ttnn.rsqrt", "ttnn/api/ttnn.rsqrt_bw", "ttnn/api/ttnn.rsub", "ttnn/api/ttnn.rsub_bw", "ttnn/api/ttnn.scatter", "ttnn/api/ttnn.selu", "ttnn/api/ttnn.selu_bw", "ttnn/api/ttnn.set_printoptions", "ttnn/api/ttnn.sigmoid", "ttnn/api/ttnn.sigmoid_accurate", "ttnn/api/ttnn.sigmoid_bw", "ttnn/api/ttnn.sign", "ttnn/api/ttnn.sign_bw", "ttnn/api/ttnn.signbit", "ttnn/api/ttnn.silu", "ttnn/api/ttnn.silu_bw", "ttnn/api/ttnn.sin", "ttnn/api/ttnn.sin_bw", "ttnn/api/ttnn.sinh", "ttnn/api/ttnn.sinh_bw", "ttnn/api/ttnn.slice", "ttnn/api/ttnn.softmax", "ttnn/api/ttnn.softplus", "ttnn/api/ttnn.softplus_bw", "ttnn/api/ttnn.softshrink", "ttnn/api/ttnn.softshrink_bw", "ttnn/api/ttnn.softsign", "ttnn/api/ttnn.softsign_bw", "ttnn/api/ttnn.sqrt", "ttnn/api/ttnn.sqrt_bw", "ttnn/api/ttnn.square", "ttnn/api/ttnn.square_bw", "ttnn/api/ttnn.squared_difference", "ttnn/api/ttnn.squared_difference_bw", "ttnn/api/ttnn.std", "ttnn/api/ttnn.sub_bw", "ttnn/api/ttnn.subalpha", "ttnn/api/ttnn.subalpha_bw", "ttnn/api/ttnn.subtract", "ttnn/api/ttnn.sum", "ttnn/api/ttnn.swiglu", "ttnn/api/ttnn.swish", "ttnn/api/ttnn.synchronize_device", "ttnn/api/ttnn.tan", "ttnn/api/ttnn.tan_bw", "ttnn/api/ttnn.tanh", "ttnn/api/ttnn.tanh_bw", "ttnn/api/ttnn.tanhshrink", "ttnn/api/ttnn.tanhshrink_bw", "ttnn/api/ttnn.threshold", "ttnn/api/ttnn.threshold_bw", "ttnn/api/ttnn.tilize", "ttnn/api/ttnn.tilize_with_val_padding", "ttnn/api/ttnn.to_device", "ttnn/api/ttnn.to_layout", "ttnn/api/ttnn.to_memory_config", "ttnn/api/ttnn.to_torch", "ttnn/api/ttnn.topk", "ttnn/api/ttnn.transformer.attention_softmax", "ttnn/api/ttnn.transformer.attention_softmax_", "ttnn/api/ttnn.transformer.concatenate_heads", "ttnn/api/ttnn.transformer.scaled_dot_product_attention", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads", "ttnn/api/ttnn.tril", "ttnn/api/ttnn.triu", "ttnn/api/ttnn.trunc", "ttnn/api/ttnn.trunc_bw", "ttnn/api/ttnn.unary_chain", "ttnn/api/ttnn.untilize", "ttnn/api/ttnn.untilize_with_halo_v2", "ttnn/api/ttnn.untilize_with_unpadding", "ttnn/api/ttnn.upsample", "ttnn/api/ttnn.var", "ttnn/api/ttnn.where", "ttnn/api/ttnn.where_bw", "ttnn/api/ttnn.xlogy", "ttnn/api/ttnn.xlogy_bw", "ttnn/api/ttnn.zeros", "ttnn/api/ttnn.zeros_like", "ttnn/converting_torch_model_to_ttnn", "ttnn/demos", "ttnn/dependencies/examples", "ttnn/dependencies/index", "ttnn/dependencies/tensor", "ttnn/dependencies/tt_lib", "ttnn/get_started", "ttnn/installing", "ttnn/onboarding", "ttnn/profiling_ttnn_operations", "ttnn/tensor", "ttnn/tutorials", "ttnn/tutorials/graphing_torch_dit", "ttnn/tutorials/matmul", "ttnn/tutorials/multihead-attention", "ttnn/tutorials/profiling", "ttnn/tutorials/resnet-basic-block", "ttnn/tutorials/tensor_and_add_operation", "ttnn/tutorials/ttnn-tracer", "ttnn/tutorials/ttnn_tutorials/001", "ttnn/tutorials/ttnn_tutorials/002", "ttnn/tutorials/ttnn_tutorials/003", "ttnn/tutorials/ttnn_tutorials/004", "ttnn/tutorials/ttnn_tutorials/005", "ttnn/tutorials/ttnn_tutorials/006", "ttnn/tutorials/ttnn_tutorials/007", "ttnn/usage"], "filenames": ["index.rst", "resources/contributing.rst", "resources/support.rst", "tt_metal_models/get_performance.rst", "tt_metal_models/get_started.rst", "ttnn/about.rst", "ttnn/adding_new_ttnn_operation.rst", "ttnn/api.rst", "ttnn/api/ttnn.GetDefaultDevice.rst", "ttnn/api/ttnn.SetDefaultDevice.rst", "ttnn/api/ttnn.abs.rst", "ttnn/api/ttnn.abs_bw.rst", "ttnn/api/ttnn.acos.rst", "ttnn/api/ttnn.acos_bw.rst", "ttnn/api/ttnn.acosh.rst", "ttnn/api/ttnn.acosh_bw.rst", "ttnn/api/ttnn.add.rst", "ttnn/api/ttnn.add_bw.rst", "ttnn/api/ttnn.addalpha.rst", "ttnn/api/ttnn.addalpha_bw.rst", "ttnn/api/ttnn.addcdiv.rst", "ttnn/api/ttnn.addcdiv_bw.rst", "ttnn/api/ttnn.addcmul.rst", "ttnn/api/ttnn.addcmul_bw.rst", "ttnn/api/ttnn.all_gather.rst", "ttnn/api/ttnn.angle.rst", "ttnn/api/ttnn.angle_bw.rst", "ttnn/api/ttnn.arange.rst", "ttnn/api/ttnn.argmax.rst", "ttnn/api/ttnn.as_tensor.rst", "ttnn/api/ttnn.asin.rst", "ttnn/api/ttnn.asin_bw.rst", "ttnn/api/ttnn.asinh.rst", "ttnn/api/ttnn.asinh_bw.rst", "ttnn/api/ttnn.assign_bw.rst", "ttnn/api/ttnn.atan.rst", "ttnn/api/ttnn.atan2.rst", "ttnn/api/ttnn.atan2_bw.rst", "ttnn/api/ttnn.atan_bw.rst", "ttnn/api/ttnn.atanh.rst", "ttnn/api/ttnn.atanh_bw.rst", "ttnn/api/ttnn.bias_gelu_bw.rst", "ttnn/api/ttnn.bitwise_and.rst", "ttnn/api/ttnn.bitwise_left_shift.rst", "ttnn/api/ttnn.bitwise_not.rst", "ttnn/api/ttnn.bitwise_or.rst", "ttnn/api/ttnn.bitwise_right_shift.rst", "ttnn/api/ttnn.bitwise_xor.rst", "ttnn/api/ttnn.cbrt.rst", "ttnn/api/ttnn.ceil.rst", "ttnn/api/ttnn.ceil_bw.rst", "ttnn/api/ttnn.celu.rst", "ttnn/api/ttnn.celu_bw.rst", "ttnn/api/ttnn.clamp.rst", "ttnn/api/ttnn.clamp_bw.rst", "ttnn/api/ttnn.clip.rst", "ttnn/api/ttnn.clip_bw.rst", "ttnn/api/ttnn.clone.rst", "ttnn/api/ttnn.close_device.rst", "ttnn/api/ttnn.concat.rst", "ttnn/api/ttnn.concat_bw.rst", "ttnn/api/ttnn.conj.rst", "ttnn/api/ttnn.conj_bw.rst", "ttnn/api/ttnn.cos.rst", "ttnn/api/ttnn.cos_bw.rst", "ttnn/api/ttnn.cosh.rst", "ttnn/api/ttnn.cosh_bw.rst", "ttnn/api/ttnn.create_sharded_memory_config.rst", "ttnn/api/ttnn.deallocate.rst", "ttnn/api/ttnn.deg2rad.rst", "ttnn/api/ttnn.deg2rad_bw.rst", "ttnn/api/ttnn.digamma.rst", "ttnn/api/ttnn.digamma_bw.rst", "ttnn/api/ttnn.div.rst", "ttnn/api/ttnn.div_bw.rst", "ttnn/api/ttnn.div_no_nan.rst", "ttnn/api/ttnn.div_no_nan_bw.rst", "ttnn/api/ttnn.downsample.rst", "ttnn/api/ttnn.dump_tensor.rst", "ttnn/api/ttnn.elu.rst", "ttnn/api/ttnn.elu_bw.rst", "ttnn/api/ttnn.embedding.rst", "ttnn/api/ttnn.embedding_bw.rst", "ttnn/api/ttnn.empty.rst", "ttnn/api/ttnn.empty_like.rst", "ttnn/api/ttnn.eq.rst", "ttnn/api/ttnn.eq_.rst", "ttnn/api/ttnn.eqz.rst", "ttnn/api/ttnn.erf.rst", "ttnn/api/ttnn.erf_bw.rst", "ttnn/api/ttnn.erfc.rst", "ttnn/api/ttnn.erfc_bw.rst", "ttnn/api/ttnn.erfinv.rst", "ttnn/api/ttnn.erfinv_bw.rst", "ttnn/api/ttnn.exp.rst", "ttnn/api/ttnn.exp2.rst", "ttnn/api/ttnn.exp2_bw.rst", "ttnn/api/ttnn.exp_bw.rst", "ttnn/api/ttnn.experimental.all_reduce.rst", "ttnn/api/ttnn.experimental.dropout.rst", "ttnn/api/ttnn.experimental.rotary_embedding.rst", "ttnn/api/ttnn.expm1.rst", "ttnn/api/ttnn.expm1_bw.rst", "ttnn/api/ttnn.fill.rst", "ttnn/api/ttnn.fill_bw.rst", "ttnn/api/ttnn.fill_ones_rm.rst", "ttnn/api/ttnn.fill_rm.rst", "ttnn/api/ttnn.fill_zero_bw.rst", "ttnn/api/ttnn.floor.rst", "ttnn/api/ttnn.floor_bw.rst", "ttnn/api/ttnn.floor_div.rst", "ttnn/api/ttnn.fmod.rst", "ttnn/api/ttnn.fmod_bw.rst", "ttnn/api/ttnn.format_input_tensor.rst", "ttnn/api/ttnn.format_output_tensor.rst", "ttnn/api/ttnn.frac.rst", "ttnn/api/ttnn.frac_bw.rst", "ttnn/api/ttnn.from_device.rst", "ttnn/api/ttnn.from_torch.rst", "ttnn/api/ttnn.full.rst", "ttnn/api/ttnn.full_like.rst", "ttnn/api/ttnn.gcd.rst", "ttnn/api/ttnn.ge.rst", "ttnn/api/ttnn.ge_.rst", "ttnn/api/ttnn.geglu.rst", "ttnn/api/ttnn.gelu.rst", "ttnn/api/ttnn.gelu_bw.rst", "ttnn/api/ttnn.gez.rst", "ttnn/api/ttnn.global_avg_pool2d.rst", "ttnn/api/ttnn.glu.rst", "ttnn/api/ttnn.group_norm.rst", "ttnn/api/ttnn.gt.rst", "ttnn/api/ttnn.gt_.rst", "ttnn/api/ttnn.gtz.rst", "ttnn/api/ttnn.hardshrink.rst", "ttnn/api/ttnn.hardshrink_bw.rst", "ttnn/api/ttnn.hardsigmoid.rst", "ttnn/api/ttnn.hardsigmoid_bw.rst", "ttnn/api/ttnn.hardswish.rst", "ttnn/api/ttnn.hardswish_bw.rst", "ttnn/api/ttnn.hardtanh.rst", "ttnn/api/ttnn.hardtanh_bw.rst", "ttnn/api/ttnn.heaviside.rst", "ttnn/api/ttnn.hypot.rst", "ttnn/api/ttnn.hypot_bw.rst", "ttnn/api/ttnn.i0.rst", "ttnn/api/ttnn.i0_bw.rst", "ttnn/api/ttnn.identity.rst", "ttnn/api/ttnn.imag.rst", "ttnn/api/ttnn.imag_bw.rst", "ttnn/api/ttnn.indexed_fill.rst", "ttnn/api/ttnn.is_imag.rst", "ttnn/api/ttnn.is_real.rst", "ttnn/api/ttnn.isclose.rst", "ttnn/api/ttnn.isfinite.rst", "ttnn/api/ttnn.isinf.rst", "ttnn/api/ttnn.isnan.rst", "ttnn/api/ttnn.isneginf.rst", "ttnn/api/ttnn.isposinf.rst", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_.rst", "ttnn/api/ttnn.kv_cache.update_cache_for_token_.rst", "ttnn/api/ttnn.l1_loss.rst", "ttnn/api/ttnn.layer_norm.rst", "ttnn/api/ttnn.lcm.rst", "ttnn/api/ttnn.ldexp.rst", "ttnn/api/ttnn.ldexp_bw.rst", "ttnn/api/ttnn.le.rst", "ttnn/api/ttnn.le_.rst", "ttnn/api/ttnn.leaky_relu.rst", "ttnn/api/ttnn.leaky_relu_bw.rst", "ttnn/api/ttnn.lerp.rst", "ttnn/api/ttnn.lerp_bw.rst", "ttnn/api/ttnn.lez.rst", "ttnn/api/ttnn.lgamma.rst", "ttnn/api/ttnn.lgamma_bw.rst", "ttnn/api/ttnn.linear.rst", "ttnn/api/ttnn.load_tensor.rst", "ttnn/api/ttnn.log.rst", "ttnn/api/ttnn.log10.rst", "ttnn/api/ttnn.log10_bw.rst", "ttnn/api/ttnn.log1p.rst", "ttnn/api/ttnn.log1p_bw.rst", "ttnn/api/ttnn.log2.rst", "ttnn/api/ttnn.log2_bw.rst", "ttnn/api/ttnn.log_bw.rst", "ttnn/api/ttnn.log_sigmoid.rst", "ttnn/api/ttnn.log_sigmoid_bw.rst", "ttnn/api/ttnn.logaddexp.rst", "ttnn/api/ttnn.logaddexp2.rst", "ttnn/api/ttnn.logaddexp2_bw.rst", "ttnn/api/ttnn.logaddexp_bw.rst", "ttnn/api/ttnn.logical_and.rst", "ttnn/api/ttnn.logical_and_.rst", "ttnn/api/ttnn.logical_not.rst", "ttnn/api/ttnn.logical_not_.rst", "ttnn/api/ttnn.logical_or.rst", "ttnn/api/ttnn.logical_or_.rst", "ttnn/api/ttnn.logical_xor.rst", "ttnn/api/ttnn.logical_xor_.rst", "ttnn/api/ttnn.logit.rst", "ttnn/api/ttnn.logit_bw.rst", "ttnn/api/ttnn.logiteps_bw.rst", "ttnn/api/ttnn.lt.rst", "ttnn/api/ttnn.lt_.rst", "ttnn/api/ttnn.ltz.rst", "ttnn/api/ttnn.mac.rst", "ttnn/api/ttnn.manage_device.rst", "ttnn/api/ttnn.matmul.rst", "ttnn/api/ttnn.max.rst", "ttnn/api/ttnn.max_bw.rst", "ttnn/api/ttnn.max_pool2d.rst", "ttnn/api/ttnn.maximum.rst", "ttnn/api/ttnn.mean.rst", "ttnn/api/ttnn.min.rst", "ttnn/api/ttnn.min_bw.rst", "ttnn/api/ttnn.minimum.rst", "ttnn/api/ttnn.mish.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters.rst", "ttnn/api/ttnn.moreh_sum.rst", "ttnn/api/ttnn.mse_loss.rst", "ttnn/api/ttnn.mul_bw.rst", "ttnn/api/ttnn.multigammaln.rst", "ttnn/api/ttnn.multigammaln_bw.rst", "ttnn/api/ttnn.multiply.rst", "ttnn/api/ttnn.ne.rst", "ttnn/api/ttnn.ne_.rst", "ttnn/api/ttnn.neg.rst", "ttnn/api/ttnn.neg_bw.rst", "ttnn/api/ttnn.nextafter.rst", "ttnn/api/ttnn.nez.rst", "ttnn/api/ttnn.nonzero.rst", "ttnn/api/ttnn.normalize_global.rst", "ttnn/api/ttnn.normalize_hw.rst", "ttnn/api/ttnn.ones.rst", "ttnn/api/ttnn.ones_like.rst", "ttnn/api/ttnn.open_device.rst", "ttnn/api/ttnn.outer.rst", "ttnn/api/ttnn.pad.rst", "ttnn/api/ttnn.pad_to_tile_shape.rst", "ttnn/api/ttnn.permute.rst", "ttnn/api/ttnn.polar.rst", "ttnn/api/ttnn.polar_bw.rst", "ttnn/api/ttnn.polygamma.rst", "ttnn/api/ttnn.polygamma_bw.rst", "ttnn/api/ttnn.polyval.rst", "ttnn/api/ttnn.pow.rst", "ttnn/api/ttnn.pow_bw.rst", "ttnn/api/ttnn.prelu.rst", "ttnn/api/ttnn.prod.rst", "ttnn/api/ttnn.prod_bw.rst", "ttnn/api/ttnn.rad2deg.rst", "ttnn/api/ttnn.rad2deg_bw.rst", "ttnn/api/ttnn.rdiv.rst", "ttnn/api/ttnn.rdiv_bw.rst", "ttnn/api/ttnn.real.rst", "ttnn/api/ttnn.real_bw.rst", "ttnn/api/ttnn.reallocate.rst", "ttnn/api/ttnn.reciprocal.rst", "ttnn/api/ttnn.reciprocal_bw.rst", "ttnn/api/ttnn.reduce_scatter.rst", "ttnn/api/ttnn.register_post_operation_hook.rst", "ttnn/api/ttnn.register_pre_operation_hook.rst", "ttnn/api/ttnn.reglu.rst", "ttnn/api/ttnn.relu.rst", "ttnn/api/ttnn.relu6.rst", "ttnn/api/ttnn.relu6_bw.rst", "ttnn/api/ttnn.relu_bw.rst", "ttnn/api/ttnn.relu_max.rst", "ttnn/api/ttnn.relu_min.rst", "ttnn/api/ttnn.remainder.rst", "ttnn/api/ttnn.remainder_bw.rst", "ttnn/api/ttnn.repeat.rst", "ttnn/api/ttnn.repeat_bw.rst", "ttnn/api/ttnn.repeat_interleave.rst", "ttnn/api/ttnn.reshape.rst", "ttnn/api/ttnn.rms_norm.rst", "ttnn/api/ttnn.round.rst", "ttnn/api/ttnn.round_bw.rst", "ttnn/api/ttnn.rpow.rst", "ttnn/api/ttnn.rpow_bw.rst", "ttnn/api/ttnn.rsqrt.rst", "ttnn/api/ttnn.rsqrt_bw.rst", "ttnn/api/ttnn.rsub.rst", "ttnn/api/ttnn.rsub_bw.rst", "ttnn/api/ttnn.scatter.rst", "ttnn/api/ttnn.selu.rst", "ttnn/api/ttnn.selu_bw.rst", "ttnn/api/ttnn.set_printoptions.rst", "ttnn/api/ttnn.sigmoid.rst", "ttnn/api/ttnn.sigmoid_accurate.rst", "ttnn/api/ttnn.sigmoid_bw.rst", "ttnn/api/ttnn.sign.rst", "ttnn/api/ttnn.sign_bw.rst", "ttnn/api/ttnn.signbit.rst", "ttnn/api/ttnn.silu.rst", "ttnn/api/ttnn.silu_bw.rst", "ttnn/api/ttnn.sin.rst", "ttnn/api/ttnn.sin_bw.rst", "ttnn/api/ttnn.sinh.rst", "ttnn/api/ttnn.sinh_bw.rst", "ttnn/api/ttnn.slice.rst", "ttnn/api/ttnn.softmax.rst", "ttnn/api/ttnn.softplus.rst", "ttnn/api/ttnn.softplus_bw.rst", "ttnn/api/ttnn.softshrink.rst", "ttnn/api/ttnn.softshrink_bw.rst", "ttnn/api/ttnn.softsign.rst", "ttnn/api/ttnn.softsign_bw.rst", "ttnn/api/ttnn.sqrt.rst", "ttnn/api/ttnn.sqrt_bw.rst", "ttnn/api/ttnn.square.rst", "ttnn/api/ttnn.square_bw.rst", "ttnn/api/ttnn.squared_difference.rst", "ttnn/api/ttnn.squared_difference_bw.rst", "ttnn/api/ttnn.std.rst", "ttnn/api/ttnn.sub_bw.rst", "ttnn/api/ttnn.subalpha.rst", "ttnn/api/ttnn.subalpha_bw.rst", "ttnn/api/ttnn.subtract.rst", "ttnn/api/ttnn.sum.rst", "ttnn/api/ttnn.swiglu.rst", "ttnn/api/ttnn.swish.rst", "ttnn/api/ttnn.synchronize_device.rst", "ttnn/api/ttnn.tan.rst", "ttnn/api/ttnn.tan_bw.rst", "ttnn/api/ttnn.tanh.rst", "ttnn/api/ttnn.tanh_bw.rst", "ttnn/api/ttnn.tanhshrink.rst", "ttnn/api/ttnn.tanhshrink_bw.rst", "ttnn/api/ttnn.threshold.rst", "ttnn/api/ttnn.threshold_bw.rst", "ttnn/api/ttnn.tilize.rst", "ttnn/api/ttnn.tilize_with_val_padding.rst", "ttnn/api/ttnn.to_device.rst", "ttnn/api/ttnn.to_layout.rst", "ttnn/api/ttnn.to_memory_config.rst", "ttnn/api/ttnn.to_torch.rst", "ttnn/api/ttnn.topk.rst", "ttnn/api/ttnn.transformer.attention_softmax.rst", "ttnn/api/ttnn.transformer.attention_softmax_.rst", "ttnn/api/ttnn.transformer.concatenate_heads.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode.rst", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads.rst", "ttnn/api/ttnn.tril.rst", "ttnn/api/ttnn.triu.rst", "ttnn/api/ttnn.trunc.rst", "ttnn/api/ttnn.trunc_bw.rst", "ttnn/api/ttnn.unary_chain.rst", "ttnn/api/ttnn.untilize.rst", "ttnn/api/ttnn.untilize_with_halo_v2.rst", "ttnn/api/ttnn.untilize_with_unpadding.rst", "ttnn/api/ttnn.upsample.rst", "ttnn/api/ttnn.var.rst", "ttnn/api/ttnn.where.rst", "ttnn/api/ttnn.where_bw.rst", "ttnn/api/ttnn.xlogy.rst", "ttnn/api/ttnn.xlogy_bw.rst", "ttnn/api/ttnn.zeros.rst", "ttnn/api/ttnn.zeros_like.rst", "ttnn/converting_torch_model_to_ttnn.rst", "ttnn/demos.rst", "ttnn/dependencies/examples.rst", "ttnn/dependencies/index.rst", "ttnn/dependencies/tensor.rst", "ttnn/dependencies/tt_lib.rst", "ttnn/get_started.rst", "ttnn/installing.md", "ttnn/onboarding.rst", "ttnn/profiling_ttnn_operations.rst", "ttnn/tensor.rst", "ttnn/tutorials.rst", "ttnn/tutorials/graphing_torch_dit.rst", "ttnn/tutorials/matmul.rst", "ttnn/tutorials/multihead-attention.rst", "ttnn/tutorials/profiling.rst", "ttnn/tutorials/resnet-basic-block.rst", "ttnn/tutorials/tensor_and_add_operation.rst", "ttnn/tutorials/ttnn-tracer.rst", "ttnn/tutorials/ttnn_tutorials/001.ipynb", "ttnn/tutorials/ttnn_tutorials/002.ipynb", "ttnn/tutorials/ttnn_tutorials/003.ipynb", "ttnn/tutorials/ttnn_tutorials/004.ipynb", "ttnn/tutorials/ttnn_tutorials/005.ipynb", "ttnn/tutorials/ttnn_tutorials/006.ipynb", "ttnn/tutorials/ttnn_tutorials/007.ipynb", "ttnn/usage.rst"], "titles": ["Welcome to TT-NN documentation!", "Contributing as a developer", "Support", "Performance", "Getting Started", "What is ttnn?", "Adding New ttnn Operation", "APIs", "ttnn.GetDefaultDevice", "ttnn.SetDefaultDevice", "ttnn.abs", "ttnn.abs_bw", "ttnn.acos", "ttnn.acos_bw", "ttnn.acosh", "ttnn.acosh_bw", "ttnn.add", "ttnn.add_bw", "ttnn.addalpha", "ttnn.addalpha_bw", "ttnn.addcdiv", "ttnn.addcdiv_bw", "ttnn.addcmul", "ttnn.addcmul_bw", "ttnn.all_gather", "ttnn.angle", "ttnn.angle_bw", "ttnn.arange", "ttnn.argmax", "ttnn.as_tensor", "ttnn.asin", "ttnn.asin_bw", "ttnn.asinh", "ttnn.asinh_bw", "ttnn.assign_bw", "ttnn.atan", "ttnn.atan2", "ttnn.atan2_bw", "ttnn.atan_bw", "ttnn.atanh", "ttnn.atanh_bw", "ttnn.bias_gelu_bw", "ttnn.bitwise_and", "ttnn.bitwise_left_shift", "ttnn.bitwise_not", "ttnn.bitwise_or", "ttnn.bitwise_right_shift", "ttnn.bitwise_xor", "ttnn.cbrt", "ttnn.ceil", "ttnn.ceil_bw", "ttnn.celu", "ttnn.celu_bw", "ttnn.clamp", "ttnn.clamp_bw", "ttnn.clip", "ttnn.clip_bw", "ttnn.clone", "ttnn.close_device", "ttnn.concat", "ttnn.concat_bw", "ttnn.conj", "ttnn.conj_bw", "ttnn.cos", "ttnn.cos_bw", "ttnn.cosh", "ttnn.cosh_bw", "ttnn.create_sharded_memory_config", "ttnn.deallocate", "ttnn.deg2rad", "ttnn.deg2rad_bw", "ttnn.digamma", "ttnn.digamma_bw", "ttnn.div", "ttnn.div_bw", "ttnn.div_no_nan", "ttnn.div_no_nan_bw", "ttnn.downsample", "ttnn.dump_tensor", "ttnn.elu", "ttnn.elu_bw", "ttnn.embedding", "ttnn.embedding_bw", "ttnn.empty", "ttnn.empty_like", "ttnn.eq", "ttnn.eq_", "ttnn.eqz", "ttnn.erf", "ttnn.erf_bw", "ttnn.erfc", "ttnn.erfc_bw", "ttnn.erfinv", "ttnn.erfinv_bw", "ttnn.exp", "ttnn.exp2", "ttnn.exp2_bw", "ttnn.exp_bw", "ttnn.experimental.all_reduce", "ttnn.experimental.dropout", "ttnn.experimental.rotary_embedding", "ttnn.expm1", "ttnn.expm1_bw", "ttnn.fill", "ttnn.fill_bw", "ttnn.fill_ones_rm", "ttnn.fill_rm", "ttnn.fill_zero_bw", "ttnn.floor", "ttnn.floor_bw", "ttnn.floor_div", "ttnn.fmod", "ttnn.fmod_bw", "ttnn.format_input_tensor", "ttnn.format_output_tensor", "ttnn.frac", "ttnn.frac_bw", "ttnn.from_device", "ttnn.from_torch", "ttnn.full", "ttnn.full_like", "ttnn.gcd", "ttnn.ge", "ttnn.ge_", "ttnn.geglu", "ttnn.gelu", "ttnn.gelu_bw", "ttnn.gez", "ttnn.global_avg_pool2d", "ttnn.glu", "ttnn.group_norm", "ttnn.gt", "ttnn.gt_", "ttnn.gtz", "ttnn.hardshrink", "ttnn.hardshrink_bw", "ttnn.hardsigmoid", "ttnn.hardsigmoid_bw", "ttnn.hardswish", "ttnn.hardswish_bw", "ttnn.hardtanh", "ttnn.hardtanh_bw", "ttnn.heaviside", "ttnn.hypot", "ttnn.hypot_bw", "ttnn.i0", "ttnn.i0_bw", "ttnn.identity", "ttnn.imag", "ttnn.imag_bw", "ttnn.indexed_fill", "ttnn.is_imag", "ttnn.is_real", "ttnn.isclose", "ttnn.isfinite", "ttnn.isinf", "ttnn.isnan", "ttnn.isneginf", "ttnn.isposinf", "ttnn.kv_cache.fill_cache_for_user_", "ttnn.kv_cache.update_cache_for_token_", "ttnn.l1_loss", "ttnn.layer_norm", "ttnn.lcm", "ttnn.ldexp", "ttnn.ldexp_bw", "ttnn.le", "ttnn.le_", "ttnn.leaky_relu", "ttnn.leaky_relu_bw", "ttnn.lerp", "ttnn.lerp_bw", "ttnn.lez", "ttnn.lgamma", "ttnn.lgamma_bw", "ttnn.linear", "ttnn.load_tensor", "ttnn.log", "ttnn.log10", "ttnn.log10_bw", "ttnn.log1p", "ttnn.log1p_bw", "ttnn.log2", "ttnn.log2_bw", "ttnn.log_bw", "ttnn.log_sigmoid", "ttnn.log_sigmoid_bw", "ttnn.logaddexp", "ttnn.logaddexp2", "ttnn.logaddexp2_bw", "ttnn.logaddexp_bw", "ttnn.logical_and", "ttnn.logical_and_", "ttnn.logical_not", "ttnn.logical_not_", "ttnn.logical_or", "ttnn.logical_or_", "ttnn.logical_xor", "ttnn.logical_xor_", "ttnn.logit", "ttnn.logit_bw", "ttnn.logiteps_bw", "ttnn.lt", "ttnn.lt_", "ttnn.ltz", "ttnn.mac", "ttnn.manage_device", "ttnn.matmul", "ttnn.max", "ttnn.max_bw", "ttnn.max_pool2d", "ttnn.maximum", "ttnn.mean", "ttnn.min", "ttnn.min_bw", "ttnn.minimum", "ttnn.mish", "ttnn.model_preprocessing.preprocess_model", "ttnn.model_preprocessing.preprocess_model_parameters", "ttnn.moreh_sum", "ttnn.mse_loss", "ttnn.mul_bw", "ttnn.multigammaln", "ttnn.multigammaln_bw", "ttnn.multiply", "ttnn.ne", "ttnn.ne_", "ttnn.neg", "ttnn.neg_bw", "ttnn.nextafter", "ttnn.nez", "ttnn.nonzero", "ttnn.normalize_global", "ttnn.normalize_hw", "ttnn.ones", "ttnn.ones_like", "ttnn.open_device", "ttnn.outer", "ttnn.pad", "ttnn.pad_to_tile_shape", "ttnn.permute", "ttnn.polar", "ttnn.polar_bw", "ttnn.polygamma", "ttnn.polygamma_bw", "ttnn.polyval", "ttnn.pow", "ttnn.pow_bw", "ttnn.prelu", "ttnn.prod", "ttnn.prod_bw", "ttnn.rad2deg", "ttnn.rad2deg_bw", "ttnn.rdiv", "ttnn.rdiv_bw", "ttnn.real", "ttnn.real_bw", "ttnn.reallocate", "ttnn.reciprocal", "ttnn.reciprocal_bw", "ttnn.reduce_scatter", "ttnn.register_post_operation_hook", "ttnn.register_pre_operation_hook", "ttnn.reglu", "ttnn.relu", "ttnn.relu6", "ttnn.relu6_bw", "ttnn.relu_bw", "ttnn.relu_max", "ttnn.relu_min", "ttnn.remainder", "ttnn.remainder_bw", "ttnn.repeat", "ttnn.repeat_bw", "ttnn.repeat_interleave", "ttnn.reshape", "ttnn.rms_norm", "ttnn.round", "ttnn.round_bw", "ttnn.rpow", "ttnn.rpow_bw", "ttnn.rsqrt", "ttnn.rsqrt_bw", "ttnn.rsub", "ttnn.rsub_bw", "ttnn.scatter", "ttnn.selu", "ttnn.selu_bw", "ttnn.set_printoptions", "ttnn.sigmoid", "ttnn.sigmoid_accurate", "ttnn.sigmoid_bw", "ttnn.sign", "ttnn.sign_bw", "ttnn.signbit", "ttnn.silu", "ttnn.silu_bw", "ttnn.sin", "ttnn.sin_bw", "ttnn.sinh", "ttnn.sinh_bw", "ttnn.slice", "ttnn.softmax", "ttnn.softplus", "ttnn.softplus_bw", "ttnn.softshrink", "ttnn.softshrink_bw", "ttnn.softsign", "ttnn.softsign_bw", "ttnn.sqrt", "ttnn.sqrt_bw", "ttnn.square", "ttnn.square_bw", "ttnn.squared_difference", "ttnn.squared_difference_bw", "ttnn.std", "ttnn.sub_bw", "ttnn.subalpha", "ttnn.subalpha_bw", "ttnn.subtract", "ttnn.sum", "ttnn.swiglu", "ttnn.swish", "ttnn.synchronize_device", "ttnn.tan", "ttnn.tan_bw", "ttnn.tanh", "ttnn.tanh_bw", "ttnn.tanhshrink", "ttnn.tanhshrink_bw", "ttnn.threshold", "ttnn.threshold_bw", "ttnn.tilize", "ttnn.tilize_with_val_padding", "ttnn.to_device", "ttnn.to_layout", "ttnn.to_memory_config", "ttnn.to_torch", "ttnn.topk", "ttnn.transformer.attention_softmax", "ttnn.transformer.attention_softmax_", "ttnn.transformer.concatenate_heads", "ttnn.transformer.scaled_dot_product_attention", "ttnn.transformer.scaled_dot_product_attention_decode", "ttnn.transformer.split_query_key_value_and_split_heads", "ttnn.tril", "ttnn.triu", "ttnn.trunc", "ttnn.trunc_bw", "ttnn.unary_chain", "ttnn.untilize", "ttnn.untilize_with_halo_v2", "ttnn.untilize_with_unpadding", "ttnn.upsample", "ttnn.var", "ttnn.where", "ttnn.where_bw", "ttnn.xlogy", "ttnn.xlogy_bw", "ttnn.zeros", "ttnn.zeros_like", "Converting torch Model to ttnn", "Building and Uplifting Demos", "Examples of Tensor and TT-LIB Use", "Dependencies", "Tensor", "TT-LIB", "Getting Started", "Install", "Onboarding New Functionality", "Profiling ttnn Operations", "Tensor", "Tutorials", "Graphing Torch DiT_XL_2 With TTNN", "Matmul Operation", "Multi-Head Attention", "ttnn Profiling", "Resnet Basic Block", "Tensor and Add Operation", "ttnn Tracer", "Tensor and Add Operation", "Matrix Multiplication", "Multi-Head Attention", "Tracing ttnn operations and torch modules/functions", "Profiling ttnn operations", "Resnet Block", "Build a graph of a pytorch based model", "Using ttnn"], "terms": {"what": [0, 362, 370, 386], "i": [0, 3, 4, 8, 9, 14, 17, 19, 28, 32, 37, 39, 41, 44, 58, 59, 60, 67, 73, 74, 77, 81, 82, 85, 98, 100, 103, 105, 106, 113, 114, 116, 117, 118, 122, 124, 128, 129, 131, 144, 146, 151, 152, 165, 166, 171, 175, 178, 182, 189, 190, 202, 206, 207, 209, 210, 214, 217, 218, 221, 223, 225, 236, 238, 239, 241, 243, 245, 246, 248, 253, 260, 261, 262, 263, 268, 269, 274, 275, 279, 284, 301, 302, 314, 316, 318, 321, 323, 324, 325, 334, 335, 337, 338, 339, 340, 342, 343, 344, 353, 358, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387], "kei": [0, 344, 361, 371, 380, 382, 384], "featur": [0, 366, 369, 376, 387], "get": [0, 8, 341, 361, 363, 365, 368, 372, 377, 380, 381, 382, 383, 384], "start": [0, 27, 170, 238, 301, 361, 365, 366, 370, 382, 384], "1": [0, 3, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 64, 66, 70, 72, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 293, 296, 298, 300, 301, 302, 303, 304, 305, 306, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 327, 329, 330, 331, 335, 342, 343, 344, 347, 348, 354, 355, 356, 357, 358, 359, 360, 363, 365, 366, 369, 371, 380, 381, 382, 383, 384, 385, 386], "instal": [0, 3, 362, 370, 372, 384, 386], "build": [0, 363, 368, 372, 373, 376, 384], "2": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 327, 328, 329, 330, 331, 337, 342, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 364, 365, 371, 372, 373, 380, 381, 382, 383, 384, 385], "explor": 0, "our": [0, 3, 4, 5, 362, 368, 369, 371, 380], "demo": [0, 4, 368, 370, 383], "3": [0, 3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 214, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 240, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 335, 337, 344, 345, 346, 347, 348, 349, 355, 356, 357, 358, 359, 360, 365, 366, 371, 380, 381, 382, 383, 384, 385, 386], "tutori": [0, 368, 373, 376, 377, 382, 386], "multi": [0, 24, 29, 77, 78, 98, 260, 353, 371, 372, 380], "head": [0, 339, 340, 341, 342, 344, 372], "attent": [0, 339, 340, 342, 343, 344, 372], "simpl": [0, 368, 384, 386], "4": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 214, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 237, 239, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 345, 346, 347, 348, 349, 355, 356, 357, 358, 359, 360, 365, 366, 371, 380, 381, 382, 383, 384, 385, 386], "optim": [0, 372, 375, 380], "where": [0, 2, 3, 4, 27, 67, 83, 84, 113, 114, 175, 207, 231, 238, 248, 334, 335, 356, 362, 366, 368, 370, 371, 386], "go": [0, 368, 380], "from": [0, 2, 3, 4, 5, 6, 27, 29, 58, 59, 82, 117, 118, 159, 160, 176, 238, 283, 284, 319, 334, 352, 361, 362, 364, 365, 370, 371, 372, 373, 377, 380, 382, 383, 384], "here": [0, 2, 6, 368, 381, 386], "step": [0, 27, 301, 362, 363, 369, 380, 386], "driver": [0, 380, 381, 382, 383, 384, 385], "firmwar": 0, "system": [0, 14, 32, 39, 103, 124, 129, 253, 263, 268, 269, 279, 321, 370], "level": [0, 370], "depend": [0, 4, 5, 335, 362, 370, 371, 372, 384], "us": [0, 3, 4, 5, 6, 8, 9, 24, 29, 41, 59, 67, 81, 82, 84, 88, 90, 94, 98, 99, 100, 106, 117, 118, 120, 125, 126, 147, 175, 207, 210, 217, 218, 235, 236, 253, 254, 260, 261, 262, 273, 281, 288, 302, 303, 332, 333, 334, 335, 336, 337, 338, 343, 344, 350, 352, 360, 361, 362, 364, 365, 366, 367, 369, 370, 371, 372, 374, 375, 378, 379, 384, 386], "metalium": [0, 3, 4], "option": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 364, 365, 370, 386, 387], "sourc": [0, 3, 4, 159, 372, 376], "wheel": [0, 384], "docker": 0, "releas": [0, 68], "imag": [0, 151, 241, 362, 366, 370, 371, 386], "5": [0, 51, 54, 56, 67, 71, 81, 83, 120, 134, 135, 136, 138, 153, 199, 222, 248, 254, 305, 306, 365, 380, 381, 382, 383, 384, 385, 386], "softwar": [0, 372, 380, 381, 382, 383, 385], "codebas": 0, "contribut": [0, 2, 367], "basic": [0, 367, 368, 372], "exampl": [0, 5, 240, 249, 274, 334, 362, 364, 366, 367, 368, 369, 370, 371, 380, 386], "convert": [0, 5, 6, 29, 57, 118, 217, 218, 336, 337, 363, 364, 372, 375, 378, 381], "torch": [0, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 360, 363, 365, 371, 372, 374, 375, 377, 378, 379, 384, 386], "tensor": [0, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 370, 372, 374, 382, 383, 385, 386], "run": [0, 5, 6, 24, 98, 118, 217, 260, 261, 262, 362, 364, 366, 367, 368, 369, 370, 372, 375, 377, 380, 381, 384], "an": [0, 2, 3, 5, 6, 24, 59, 81, 98, 106, 107, 111, 128, 206, 207, 241, 248, 260, 270, 337, 362, 365, 366, 367, 368, 369, 370, 371, 380, 382, 386], "oper": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 362, 363, 364, 365, 367, 369, 372, 376, 379, 381, 382], "devic": [0, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 345, 346, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 368, 370, 371, 372, 374, 375, 378, 383, 384, 385, 386], "__getitem__": 0, "slice": [0, 366], "enabl": [0, 3, 366, 369, 370, 372, 374, 375, 380, 383, 384, 385, 386], "program": [0, 3, 5, 6, 24, 117, 175, 207, 260, 334, 339, 340, 364, 365, 370, 372, 374, 375, 380, 383, 384, 385], "cach": [0, 3, 5, 29, 58, 100, 159, 160, 217, 218, 364, 370, 371, 372, 374, 375, 380, 383, 384, 385, 386], "debug": [0, 5, 6, 366, 369, 380, 381, 382, 383, 385], "intermedi": 0, "6": [0, 27, 222, 365, 371, 380, 381, 382, 383, 384, 385, 386], "trace": [0, 5, 236, 372, 377, 379, 386], "graph": [0, 5, 217, 364, 372, 377, 383], "7": [0, 81, 119, 365, 380, 381, 382, 383, 384, 385, 386], "tt_lib": [0, 5, 105, 106, 363, 364], "8": [0, 24, 27, 67, 81, 98, 140, 260, 365, 368, 370, 371, 380, 381, 382, 383, 384, 385, 386], "log": [0, 186, 357, 364, 370, 381, 383, 384], "9": [0, 53, 55, 65, 81, 83, 299, 365, 368, 380, 381, 382, 383, 384, 385, 386], "support": [0, 1, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 115, 116, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 214, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 237, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 343, 345, 346, 347, 348, 349, 355, 356, 357, 358, 359, 360, 363, 365, 366, 368, 371, 380, 385], "python": [0, 4, 366, 368, 369, 370, 384, 386], "10": [0, 27, 68, 81, 117, 128, 146, 175, 207, 243, 257, 330, 334, 335, 336, 363, 365, 368, 380, 381, 382, 383, 384, 386], "chang": [0, 275, 332, 333, 350, 352, 366, 380, 384], "string": [0, 41, 73, 126, 217, 218, 253, 254, 288, 366], "represent": [0, 303, 366], "11": [0, 83, 380, 381, 382, 383, 384, 385], "visual": [0, 5, 383, 385, 386], "web": 0, "browser": [0, 372], "12": [0, 60, 130, 162, 276, 361, 380, 381, 382, 384, 385, 386], "regist": [0, 6, 261, 262], "pre": [0, 6, 210, 262, 368, 372, 373, 375, 384], "post": [0, 261, 370], "hook": [0, 261, 262, 384], "13": [0, 368, 380, 381, 382, 384, 386], "queri": [0, 344, 366, 382], "all": [0, 5, 6, 24, 28, 98, 117, 118, 128, 207, 217, 218, 245, 249, 250, 260, 323, 334, 337, 361, 362, 365, 366, 368, 369, 370, 371, 380, 382, 384], "14": [0, 3, 60, 371, 380, 381, 382, 384], "fall": [0, 165], "back": [0, 6, 341, 363, 370, 380], "15": [0, 382, 384], "captur": [0, 386], "c": [0, 77, 105, 106, 207, 210, 353, 366, 368, 370, 371, 380, 381, 382, 383, 384, 385], "function": [0, 8, 9, 14, 16, 26, 29, 32, 39, 48, 51, 53, 55, 62, 65, 69, 71, 79, 85, 97, 113, 114, 115, 118, 122, 124, 129, 131, 134, 136, 138, 140, 141, 142, 147, 149, 161, 164, 166, 168, 173, 175, 180, 187, 188, 191, 194, 195, 197, 199, 202, 207, 216, 217, 218, 220, 222, 223, 224, 225, 232, 233, 239, 242, 243, 244, 249, 251, 256, 263, 268, 269, 277, 279, 283, 286, 299, 303, 305, 307, 313, 319, 321, 322, 327, 328, 330, 334, 345, 346, 361, 362, 363, 365, 366, 372, 379, 380], "buffer": [0, 6, 24, 68, 98, 236, 260, 364, 365, 366, 370, 371], "alloc": [0, 6, 27, 83, 84, 119, 120, 234, 235, 359, 360, 371, 380, 381, 382, 383, 384, 385], "etc": [0, 6, 365, 368], "shape": [0, 6, 27, 59, 67, 83, 84, 103, 113, 114, 119, 120, 128, 175, 207, 210, 231, 234, 235, 238, 239, 240, 272, 273, 274, 275, 301, 333, 341, 344, 352, 359, 360, 361, 365, 366, 370, 380, 381, 382, 385, 386], "layout": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 211, 214, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338, 345, 346, 347, 348, 349, 350, 352, 355, 356, 357, 358, 359, 360, 361, 363, 365, 366, 370, 372, 374, 378, 382, 385, 387], "data": [0, 16, 27, 28, 29, 57, 77, 81, 82, 83, 84, 85, 105, 106, 118, 119, 120, 122, 128, 131, 164, 166, 175, 187, 188, 191, 195, 197, 202, 207, 224, 225, 234, 235, 253, 283, 313, 319, 332, 333, 335, 336, 337, 338, 350, 351, 352, 353, 359, 360, 361, 363, 365, 366, 370, 372, 378, 384, 387], "type": [0, 6, 16, 27, 28, 29, 41, 57, 74, 81, 82, 83, 84, 85, 105, 106, 118, 119, 120, 122, 126, 128, 131, 164, 166, 175, 187, 188, 191, 195, 197, 202, 207, 224, 225, 234, 235, 236, 253, 283, 313, 319, 332, 333, 335, 336, 337, 338, 350, 352, 359, 360, 361, 363, 364, 365, 368, 370, 372, 378, 384, 386], "storag": [0, 364, 366, 372, 378], "shard": [0, 59, 67, 175, 207, 210, 336, 344, 351], "memori": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 370, 380, 382], "config": [0, 24, 61, 81, 82, 98, 113, 114, 207, 241, 260, 275, 301, 339, 340, 341, 351, 361, 368, 372, 374, 380, 382, 383, 384, 385, 387], "api": [0, 4, 5, 6, 342, 361, 364, 367, 368, 369, 382, 387], "rank": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 115, 116, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 211, 214, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 237, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 337, 345, 346, 347, 348, 349, 355, 356, 357, 358, 359, 360, 365, 371], "to_rank": [0, 371], "with_tile_pad": [0, 371], "open_devic": [0, 9, 58, 68, 81, 82, 117, 176, 257, 323, 334, 335, 336, 365, 380, 381, 382, 383, 387], "close_devic": [0, 380, 381, 382, 383, 385, 387], "manage_devic": [0, 387], "synchronize_devic": 0, "setdefaultdevic": [0, 363, 366], "getdefaultdevic": 0, "format_input_tensor": 0, "format_output_tensor": 0, "pad_to_tile_shap": 0, "create_sharded_memory_config": [0, 371], "core": [0, 6, 67, 175, 207, 236, 350, 351, 361, 366, 370, 371, 381, 382, 384], "as_tensor": [0, 380, 381, 382, 383, 385], "from_torch": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 360, 361, 380, 381, 382, 383, 385, 387], "to_torch": [0, 6, 361, 365, 380, 381, 382, 383, 385, 387], "to_devic": [0, 24, 25, 26, 61, 62, 68, 76, 81, 117, 148, 149, 150, 151, 152, 161, 175, 207, 208, 210, 212, 213, 220, 231, 240, 241, 242, 244, 255, 256, 257, 280, 302, 315, 320, 335, 336, 354, 380, 381, 382, 383, 385], "from_devic": [0, 380, 381, 382, 383, 384, 385], "to_layout": [0, 5, 68, 118, 337, 371, 380, 381, 382], "dump_tensor": [0, 380, 381, 382, 383, 385], "load_tensor": [0, 380, 381, 382, 383, 384, 385], "dealloc": [0, 257, 371, 380, 381, 382, 383, 385, 387], "realloc": [0, 380, 381, 382, 383, 385], "to_memory_config": [0, 371, 385], "creation": [0, 118, 365], "arang": [0, 365, 380, 381, 382, 383], "empti": [0, 6, 366, 386, 387], "empty_lik": 0, "zero": [0, 59, 73, 99, 107, 120, 206, 231, 240, 301, 302, 365, 366, 383, 387], "zeros_lik": 0, "ones": [0, 78, 113, 366], "ones_lik": 0, "full": [0, 5, 362, 364, 366, 370, 387], "full_lik": 0, "matrix": [0, 81, 175, 207, 368, 371, 372, 374, 380, 387], "multipl": [0, 6, 57, 68, 106, 119, 124, 129, 163, 207, 217, 234, 263, 321, 335, 359, 365, 366, 370, 372, 374], "matmul": [0, 175, 372, 380, 381, 382, 383, 384], "linear": [0, 24, 98, 260, 303, 361, 364, 366, 380, 381, 382, 383], "pointwis": 0, "unari": [0, 6, 254, 349], "ab": [0, 11], "aco": [0, 13], "acosh": [0, 15], "asin": [0, 31], "asinh": [0, 33], "atan": [0, 38], "atanh": [0, 40], "bitwise_not": [0, 364, 366], "bitwise_left_shift": 0, "bitwise_right_shift": 0, "cbrt": 0, "ceil": [0, 50, 210, 364, 366], "celu": [0, 52, 380, 381, 382, 383], "clamp": [0, 54], "clip": [0, 56, 380, 381, 382, 383], "clone": [0, 147, 344, 368, 372, 373, 380, 381, 382, 383], "co": 0, "cosh": [0, 66], "deg2rad": [0, 70], "digamma": [0, 72], "experiment": [0, 4, 362, 364, 384], "dropout": 0, "elu": [0, 80], "eqz": 0, "erf": [0, 89], "erfc": [0, 91], "erfinv": [0, 93], "exp": [0, 349, 363, 366, 383, 387], "exp2": [0, 96], "expm1": [0, 102], "fill": [0, 104, 106, 107, 119, 120, 234, 235, 272, 359, 360, 366, 370], "floor": [0, 73, 74, 109, 110, 253, 254, 270, 364, 366], "frac": [0, 36, 73, 116, 366], "geglu": [0, 380, 381, 382, 383], "gelu": [0, 124, 126, 361, 366], "glu": [0, 380, 381, 382, 383], "gez": 0, "gtz": 0, "hardshrink": [0, 135, 169, 380, 381, 382, 383], "hardsigmoid": [0, 137], "hardswish": [0, 139], "hardtanh": [0, 141], "heavisid": 0, "i0": [0, 146], "ident": [0, 385], "isfinit": 0, "isinf": 0, "isnan": 0, "isneginf": 0, "isposinf": 0, "leaky_relu": [0, 169], "lez": 0, "lgamma": [0, 174], "log10": [0, 179], "log1p": [0, 181], "log2": [0, 183], "log_sigmoid": 0, "logical_not": [0, 194], "logical_not_": 0, "logit": [0, 200, 380, 381, 382, 383], "ltz": 0, "mish": 0, "multigammaln": 0, "neg": [0, 228, 247, 366], "nez": 0, "normalize_glob": 0, "normalize_hw": 0, "polygamma": [0, 244, 380, 381, 382, 383], "prelu": 0, "rad2deg": [0, 252], "rdiv": [0, 254], "reciproc": [0, 259, 282], "reglu": [0, 380, 381, 382, 383], "relu": [0, 16, 168, 224, 263, 267, 268, 269, 303, 319, 349, 363, 385], "relu_max": 0, "relu_min": 0, "relu6": [0, 266], "remaind": [0, 271], "round": [0, 34, 73, 74, 253, 254, 278], "rsqrt": 0, "selu": [0, 287], "sigmoid": [0, 186, 291, 366], "sigmoid_accur": 0, "sign": [0, 293, 366], "signbit": 0, "silu": [0, 296, 321, 363, 364, 366, 387], "sin": [0, 298], "sinh": [0, 300], "softmax": [0, 339, 340, 364, 366, 382], "softplu": [0, 304], "softshrink": [0, 306, 380, 381, 382, 383], "softsign": [0, 308], "sqrt": [0, 143, 366], "squar": [0, 220, 282, 310, 312, 313, 339, 340, 371], "swiglu": [0, 380, 381, 382, 383], "swish": [0, 366], "tan": [0, 325], "tanh": [0, 41, 126, 327], "tanhshrink": [0, 329], "threshold": [0, 303, 304, 331, 380, 381, 382, 383], "tril": 0, "triu": 0, "trunc": [0, 73, 74, 111, 253, 254, 364, 366], "unary_chain": 0, "clamp_bw": 0, "clip_bw": 0, "hardtanh_bw": 0, "threshold_bw": 0, "softplus_bw": 0, "rdiv_bw": 0, "pow_bw": 0, "exp_bw": 0, "tanh_bw": 0, "sqrt_bw": 0, "multigammaln_bw": 0, "lgamma_bw": 0, "fill_bw": 0, "hardsigmoid_bw": 0, "cos_bw": 0, "acosh_bw": 0, "acos_bw": 0, "atan_bw": 0, "rad2deg_bw": 0, "frac_bw": 0, "trunc_bw": 0, "log_sigmoid_bw": 0, "fill_zero_bw": 0, "i0_bw": 0, "tan_bw": 0, "sigmoid_bw": 0, "rsqrt_bw": 0, "neg_bw": 0, "relu_bw": 0, "logit_bw": 0, "hardshrink_bw": 0, "softshrink_bw": 0, "leaky_relu_bw": 0, "elu_bw": 0, "celu_bw": 0, "rpow_bw": 0, "floor_bw": 0, "round_bw": 0, "log_bw": 0, "relu6_bw": 0, "abs_bw": 0, "silu_bw": 0, "selu_bw": 0, "square_bw": 0, "prod_bw": 0, "hardswish_bw": 0, "tanhshrink_bw": 0, "atanh_bw": 0, "asin_bw": 0, "asinh_bw": 0, "sin_bw": 0, "sinh_bw": 0, "log10_bw": 0, "log1p_bw": 0, "erfc_bw": 0, "ceil_bw": 0, "softsign_bw": 0, "cosh_bw": 0, "logiteps_bw": 0, "log2_bw": 0, "sign_bw": 0, "div_no_nan_bw": 0, "exp2_bw": 0, "expm1_bw": 0, "reciprocal_bw": 0, "digamma_bw": 0, "erfinv_bw": 0, "erf_bw": 0, "deg2rad_bw": 0, "polygamma_bw": 0, "gelu_bw": 0, "repeat_bw": 0, "real": [0, 152, 241, 256, 362, 365], "angl": [0, 26], "is_imag": 0, "is_real": 0, "polar_bw": 0, "imag_bw": 0, "real_bw": 0, "angle_bw": 0, "conj_bw": 0, "conj": [0, 62], "polar": [0, 242], "binari": [0, 366], "add": [0, 17, 238, 339, 340, 362, 366, 369, 372, 382, 384, 385, 387], "addalpha": [0, 19], "subalpha": [0, 318], "multipli": [0, 18, 20, 22, 175, 207, 221, 317, 353, 366, 372, 374, 387], "subtract": [0, 3, 283, 284, 316, 344, 387], "div": [0, 111, 270], "div_no_nan": [0, 76], "floor_div": 0, "fmod": [0, 112], "gcd": 0, "lcm": 0, "logical_and_": 0, "logical_or_": 0, "logical_xor_": 0, "rpow": [0, 280], "rsub": 0, "ldexp": [0, 165], "logical_and": 0, "logical_or": 0, "logical_xor": [0, 380, 381, 382, 383], "bitwise_and": [0, 43, 46], "bitwise_or": 0, "bitwise_xor": 0, "logaddexp": [0, 190], "logaddexp2": [0, 189], "hypot": [0, 144, 380, 381, 382, 383], "xlogi": [0, 358, 380, 381, 382, 383], "squared_differ": [0, 314], "gt": [0, 380, 381, 382, 383, 384, 385, 386], "gt_": 0, "lt_": 0, "ge_": 0, "le_": 0, "eq_": 0, "ne_": 0, "ge": 0, "lt": [0, 380, 381, 382, 383, 384, 385, 386], "le": 0, "eq": 0, "ne": 0, "isclos": [0, 380, 381, 382, 383], "nextaft": [0, 380, 381, 382, 383], "maximum": [0, 28, 53, 54, 55, 56, 141, 209, 210, 366, 380, 381, 382, 383], "minimum": [0, 6, 53, 54, 55, 56, 141, 214, 366, 371, 380, 381, 382, 383], "outer": 0, "pow": [0, 363], "polyv": [0, 380, 381, 382, 383], "scatter": [0, 260], "atan2": [0, 37, 380, 381, 382, 383], "add_bw": 0, "assign_bw": 0, "atan2_bw": 0, "bias_gelu_bw": 0, "div_bw": 0, "embedding_bw": 0, "fmod_bw": 0, "remainder_bw": 0, "addalpha_bw": 0, "subalpha_bw": 0, "xlogy_bw": 0, "hypot_bw": 0, "ldexp_bw": 0, "logaddexp_bw": 0, "logaddexp2_bw": 0, "mul_bw": 0, "sub_bw": 0, "squared_difference_bw": 0, "concat_bw": 0, "rsub_bw": 0, "min_bw": 0, "max_bw": 0, "ternari": 0, "addcdiv": [0, 21, 380, 381, 382, 383], "addcmul": [0, 23, 380, 381, 382, 383], "mac": [0, 380, 381, 382, 383], "lerp": [0, 171, 380, 381, 382, 383], "addcmul_bw": 0, "addcdiv_bw": 0, "where_bw": 0, "lerp_bw": 0, "loss": [0, 161, 220], "l1_loss": [0, 380, 381, 382, 383], "mse_loss": [0, 380, 381, 382, 383], "reduct": [0, 28, 161, 220], "max": [0, 53, 54, 55, 56, 140, 141, 210, 268, 351, 366, 384, 386], "mean": [0, 161, 220, 363, 364, 366, 371], "min": [0, 53, 54, 55, 56, 140, 141, 268, 269, 386], "std": [0, 6, 288, 365, 366, 385], "sum": [0, 219, 366], "var": [0, 366], "argmax": [0, 366], "prod": [0, 67, 250], "topk": 0, "movement": 0, "concat": [0, 60, 364, 366, 369], "nonzero": 0, "pad": [0, 57, 81, 106, 113, 114, 118, 210, 239, 240, 275, 333, 335, 351, 363, 364, 365, 366, 371, 380, 385], "permut": [0, 210, 344, 382, 385], "reshap": [0, 210, 344, 363, 364, 365, 366, 380, 381, 382, 383, 384, 385], "repeat": [0, 5, 273, 274, 364, 366], "repeat_interleav": [0, 364, 366], "tiliz": [0, 29, 366, 381, 382], "tilize_with_val_pad": 0, "fill_rm": [0, 105], "fill_ones_rm": 0, "until": [0, 117, 337, 351, 352], "untilize_with_unpad": 0, "untilize_with_halo_v2": 0, "indexed_fil": 0, "normal": [0, 147, 366, 384, 386], "group_norm": [0, 364, 366], "layer_norm": [0, 364, 366], "rms_norm": 0, "moreh": [0, 219, 366], "moreh_sum": 0, "transform": [0, 175, 241, 361, 382, 383, 384], "split_query_key_value_and_split_head": [0, 382], "concatenate_head": [0, 382], "attention_softmax": 0, "attention_softmax_": [0, 382], "rotary_embed": 0, "scaled_dot_product_attent": 0, "scaled_dot_product_attention_decod": 0, "ccl": 0, "all_gath": [0, 380, 381, 382, 383], "reduce_scatt": 0, "all_reduc": 0, "embed": [0, 82, 100, 380], "pool": [0, 128, 210, 366], "global_avg_pool2d": 0, "max_pool2d": 0, "vision": 0, "upsampl": [0, 366], "downsampl": [0, 385], "kv": 0, "kv_cach": 0, "fill_cache_for_user_": 0, "update_cache_for_token_": 0, "convers": [0, 70, 252, 335, 363, 365, 380], "model_preprocess": [0, 361, 382, 383, 384, 385], "preprocess_model": [0, 383, 384, 385], "preprocess_model_paramet": [0, 361, 383, 385], "report": [0, 207, 362, 380, 381, 382, 383, 384, 385, 387], "set_printopt": [0, 387], "register_pre_operation_hook": [0, 387], "register_post_operation_hook": [0, 387], "creat": [0, 4, 6, 27, 57, 67, 83, 84, 103, 119, 120, 234, 235, 359, 360, 363, 365, 366, 369, 371, 372, 377, 378, 382, 386], "host": [0, 29, 117, 238, 301, 323, 334, 335, 363, 365, 366, 368, 370, 371, 372, 378, 381, 382, 383, 384, 385], "borrow": [0, 365, 371, 372, 378], "v": [0, 29, 106, 343, 368, 372, 378], "own": [0, 365, 368, 371, 372, 378], "open": [0, 206, 236, 372, 378, 381, 382, 383, 384, 385, 386, 387], "initi": [0, 84, 217, 218, 361, 363, 366, 372, 374, 375, 378, 383, 384, 385], "b": [0, 6, 100, 111, 207, 270, 274, 342, 343, 372, 374, 378], "random": [0, 240, 363, 372, 374, 378], "valu": [0, 18, 19, 20, 21, 22, 23, 27, 28, 51, 52, 53, 54, 55, 56, 59, 61, 67, 71, 76, 80, 83, 84, 103, 105, 106, 113, 118, 119, 120, 128, 134, 135, 136, 138, 140, 141, 142, 150, 151, 152, 153, 159, 160, 169, 173, 201, 208, 210, 212, 213, 223, 234, 235, 238, 240, 243, 246, 247, 253, 268, 269, 275, 277, 279, 280, 286, 301, 303, 304, 305, 306, 315, 317, 318, 320, 330, 331, 333, 338, 344, 345, 346, 351, 354, 359, 360, 362, 363, 365, 366, 372, 374, 378, 382, 387], "inspect": [0, 372, 374, 378], "output": [0, 3, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 370, 372, 374, 375, 378, 383, 387], "attribut": [0, 6, 361, 366, 370, 371, 372, 378, 384], "close": [0, 58, 206, 363, 372, 374, 375, 378, 383, 384, 385], "configur": [0, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 365, 368, 372, 374, 375, 383], "result": [0, 3, 5, 27, 29, 106, 118, 120, 147, 175, 207, 210, 235, 253, 360, 363, 366, 370, 372, 374], "more": [0, 1, 6, 207, 366, 367, 370, 371, 372, 374, 382, 384, 386], "perform": [0, 11, 13, 14, 15, 17, 19, 21, 23, 24, 25, 26, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 60, 62, 64, 65, 66, 69, 70, 71, 72, 74, 76, 80, 86, 89, 91, 93, 96, 97, 98, 102, 104, 107, 109, 111, 112, 115, 116, 123, 124, 126, 128, 129, 132, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 165, 167, 169, 171, 173, 174, 179, 180, 181, 183, 184, 186, 189, 190, 194, 199, 200, 201, 203, 206, 209, 214, 216, 221, 222, 223, 226, 228, 232, 233, 238, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 263, 266, 267, 270, 271, 273, 277, 278, 279, 280, 282, 284, 286, 287, 291, 293, 296, 298, 299, 300, 301, 304, 305, 306, 307, 308, 310, 312, 314, 316, 318, 321, 322, 325, 327, 328, 329, 330, 331, 345, 346, 348, 356, 358, 361, 362, 365, 366, 367, 368, 369, 370, 372, 374, 382], "write": [0, 1, 3, 4, 6, 67, 175, 207, 334, 361, 365, 371, 372, 375, 384], "activ": [0, 4, 16, 85, 122, 131, 141, 164, 166, 175, 187, 188, 191, 195, 197, 202, 207, 224, 225, 283, 313, 319, 361, 368, 372, 375, 385], "weight": [0, 81, 82, 130, 162, 170, 175, 248, 276, 361, 366, 372, 375, 383, 384, 385], "first": [0, 3, 118, 124, 129, 175, 207, 231, 238, 263, 321, 361, 363, 365, 366, 370, 372, 375, 381, 387], "iter": [0, 372, 375], "subsequ": [0, 372, 375, 381, 387], "version": [0, 217, 218, 343, 368, 370, 372, 375, 377, 380, 381, 383, 384], "process": [0, 59, 370, 372, 375, 384], "paramet": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 372, 375, 377, 383], "check": [0, 2, 6, 207, 362, 365, 367, 368, 372, 375, 384], "match": [0, 57, 207, 217, 218, 275, 365, 366, 371, 372, 375, 380, 381, 383, 384, 385], "origin": [0, 217, 218, 239, 362, 369, 372, 375, 380], "implement": [0, 3, 5, 207, 342, 343, 344, 361, 366, 369, 370, 372, 375, 377], "tracer": [0, 5, 372, 383, 385, 386, 387], "modul": [0, 5, 6, 217, 218, 361, 366, 367, 372, 377, 379, 380, 381, 382, 386], "written": [0, 6, 159, 160, 175, 207, 372, 379, 382], "profil": [0, 3, 147, 288, 364, 372, 387], "resnet": [0, 367, 370, 372, 384], "block": [0, 67, 117, 206, 207, 210, 366, 371, 372], "torchvis": [0, 372, 377, 384, 386], "preprocess": [0, 6, 29, 217, 218, 372, 377], "displai": [0, 372, 373, 377], "pass": [0, 6, 100, 106, 261, 262, 344, 361, 363, 366, 369, 372, 377, 380, 383, 384], "constructor": [0, 365, 372, 377], "dit_xl_2": [0, 372, 386], "With": [0, 372], "pytorch": [0, 3, 5, 28, 207, 238, 338, 342, 344, 364, 366, 372, 373, 384], "base": [0, 3, 4, 6, 59, 67, 207, 239, 366, 371, 372, 373, 382], "librari": [0, 4, 5, 363, 364, 365, 372, 373], "http": [0, 24, 260, 367, 368, 372, 373, 384], "github": [0, 2, 24, 260, 367, 368, 372, 373], "com": [0, 24, 260, 367, 368, 372, 373], "facebookresearch": [0, 372, 373], "dit": [0, 372, 373], "git": [0, 217, 218, 368, 372, 373, 384], "download": [0, 368, 372, 373, 383, 384], "xl": [0, 372, 373], "sampl": [0, 366, 372, 373], "train": [0, 366, 372, 373], "onboard": 0, "new": [0, 84, 120, 235, 272, 275, 360, 362, 364, 370, 380, 383], "rewrit": 0, "switch": [0, 303], "ad": [0, 175, 365, 366, 369, 380], "faq": 0, "ar": [0, 3, 4, 9, 24, 43, 46, 57, 59, 74, 98, 106, 175, 207, 210, 231, 240, 246, 260, 261, 262, 279, 323, 338, 344, 353, 361, 362, 363, 365, 366, 367, 368, 370, 371, 372, 373, 376, 377, 380, 381, 382, 387], "need": [0, 1, 2, 175, 207, 362, 363, 366, 368, 370, 371, 380, 381, 382, 387], "bind": [0, 384], "golden": [0, 361, 387], "perf": [0, 380, 381, 382, 383, 384, 385], "header": [0, 3], "profile_thi": [0, 384], "descript": [0, 105, 106, 365, 366, 369], "lib": [0, 4, 364, 383, 384, 386], "overview": [0, 364], "infrastructur": [0, 5, 364], "member": [0, 2, 364, 365], "input": [0, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 370, 381, 382, 385, 386, 387], "fast": [0, 88, 90, 94, 125, 281, 364], "dispatch": [0, 236, 364, 365, 370], "cpu": [0, 3, 363, 364, 365, 366, 368, 370, 384, 386], "through": [0, 364, 368, 386], "primari": [0, 5, 364], "softmax_backward": [0, 364, 366], "softmin": [0, 364, 366], "softmin_backward": [0, 364, 366], "logsoftmax": [0, 364, 366], "logsoftmax_backward": [0, 364, 366], "mean_backward": [0, 364, 366], "group_norm_backward": [0, 364, 366], "norm": [0, 364, 366], "norm_backward": [0, 364, 366], "enum": [0, 364], "bcastopmath": [0, 364, 366], "bcastopdim": [0, 364, 366], "fallback": [0, 363, 364, 369], "tensor_slic": [0, 364, 366], "chunk": [0, 98, 260, 342, 343, 364, 366, 381, 386], "conv2d": [0, 364, 366, 380, 381, 382, 383, 385], "interpol": [0, 170, 364, 366], "batchnorm2d": [0, 364, 366, 385], "groupnorm": [0, 364, 366], "layernorm": [0, 364, 366], "maxpool2d": [0, 364, 366], "adaptiveavgpool2d": [0, 364, 366], "unary_fmod": [0, 364, 366], "binary_fmod": [0, 364, 366], "unary_bitwise_or": [0, 364, 366], "unary_bitwise_and": [0, 364, 366], "unary_bitwise_xor": [0, 364, 366], "binary_bitwise_or": [0, 364, 366], "binary_bitwise_and": [0, 364, 366], "binary_bitwise_xor": [0, 364, 366], "unary_bitwise_left_shift": [0, 364, 366], "unary_bitwise_right_shift": [0, 364, 366], "binary_bitwise_left_shift": [0, 364, 366], "binary_bitwise_right_shift": [0, 364, 366], "torch_argmax": [0, 364, 366], "torch_argmin": [0, 364, 366], "fuse": [0, 361, 364, 382], "mini": [0, 364], "addandnorm": [0, 364, 366], "complex": [0, 25, 26, 61, 62, 148, 149, 241, 242, 255, 256, 364], "__init__": [0, 361, 364, 365, 385], "get_dtyp": [0, 6, 364, 365], "get_layout": [0, 364, 365], "pad_to_til": [0, 364, 365], "storage_typ": [0, 364, 365], "unpad": [0, 57, 114, 335, 352, 363, 364, 365, 366], "unpad_from_til": [0, 364, 365], "memoryconfig": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 364, 366], "between": [0, 5, 6, 27, 207, 336, 364, 366, 368], "one": [0, 6, 53, 54, 55, 56, 364, 366, 368], "op": [0, 6, 8, 28, 67, 82, 210, 302, 323, 342, 343, 349, 364, 366, 369, 370, 384, 387], "acceler": [0, 332, 333, 350, 352, 364, 365, 366, 381, 384], "odd": [0, 364], "size": [0, 27, 77, 81, 82, 207, 210, 236, 248, 301, 342, 343, 344, 353, 364, 365, 366, 371, 380, 387], "last": [0, 28, 57, 119, 124, 129, 234, 263, 275, 321, 335, 338, 344, 359, 364, 365, 366, 370, 371], "dim": [0, 24, 28, 59, 60, 67, 98, 124, 129, 150, 208, 212, 213, 240, 249, 250, 260, 263, 274, 301, 302, 315, 320, 321, 338, 344, 354, 364, 365, 366, 371, 382, 386], "uplift": 0, "prerequisit": 0, "next": [0, 229, 366, 368, 371], "file": [0, 2, 4, 6, 29, 78, 176, 362, 368, 370, 384, 386, 387], "bug": 0, "propos": [0, 369], "request": [0, 335, 369, 384, 386], "troubleshoot": [0, 362], "tip": 0, "commun": 0, "develop": [0, 4, 367, 369, 370, 384], "index": [0, 159, 160, 338, 343, 365, 370, 384, 386], "search": 0, "page": [0, 367, 368, 372], "If": [1, 2, 6, 28, 57, 67, 117, 175, 207, 217, 218, 236, 238, 240, 301, 302, 323, 334, 337, 338, 343, 344, 365, 366, 367, 368, 369, 370, 383, 387], "you": [1, 2, 3, 4, 5, 6, 303, 362, 363, 365, 366, 367, 368, 370, 372, 383, 386, 387], "would": [1, 368, 369, 370, 371], "like": [1, 107, 303, 361, 363, 368, 371, 380, 387], "thi": [1, 3, 4, 5, 6, 8, 9, 28, 57, 59, 82, 100, 103, 113, 114, 128, 147, 165, 210, 238, 239, 268, 269, 303, 342, 361, 362, 363, 365, 366, 368, 369, 370, 371, 372, 373, 376, 377, 380, 381, 382, 386, 387], "project": [1, 2, 4, 367, 368], "pleas": [1, 2, 207, 362, 366, 367, 368, 369, 372, 387], "review": [1, 367, 369], "standard": [1, 2, 269, 362, 367], "gain": 1, "access": [1, 2, 386], "repositori": 1, "read": [1, 67, 117, 351, 366, 367, 371], "section": [1, 2, 362, 366, 371], "detail": [1, 6, 367, 386, 387], "contact": 1, "u": [1, 369], "have": [2, 3, 4, 6, 28, 67, 68, 82, 114, 170, 207, 253, 332, 333, 338, 350, 352, 362, 365, 366, 368, 370, 371, 372, 380, 386], "formal": 2, "permiss": 2, "cloud": 2, "issu": [2, 207, 303, 362, 368, 369, 370, 380, 381, 382, 383, 384, 385], "can": [2, 3, 4, 5, 6, 27, 41, 53, 54, 55, 56, 73, 74, 84, 120, 126, 207, 235, 253, 254, 261, 262, 303, 323, 360, 361, 363, 365, 366, 367, 368, 370, 371, 372, 380, 381, 382, 383, 385, 386, 387], "out": [2, 6, 99, 269, 301, 338, 366, 368, 380, 382, 385], "relev": [2, 362], "ever": 2, "hardwar": [2, 5, 6, 361, 362, 367, 371, 380, 387], "help": [2, 5, 369, 372], "we": [2, 3, 4, 5, 114, 118, 207, 337, 362, 363, 366, 368, 369, 371, 373, 376, 377, 380, 381, 386, 387], "offici": 2, "discord": 2, "channel": [2, 24, 77, 98, 105, 106, 128, 210, 239, 260, 353, 366, 370], "repres": [2, 365, 370, 371, 380], "both": [2, 207, 361, 362, 365, 366, 370, 371, 380, 385], "tenstorr": [2, 5, 6, 24, 260, 361, 362, 367, 368, 372, 380, 381, 386, 387], "metal": [2, 5, 24, 260, 365, 367, 368, 372, 380, 381, 382, 383, 384, 385, 386], "join": [2, 384], "discuss": [2, 362], "board": [2, 368], "bounc": 2, "idea": [2, 362], "off": [2, 268, 361], "each": [2, 3, 5, 59, 106, 128, 210, 238, 272, 274, 301, 365, 366, 368, 370, 371], "other": [2, 5, 6, 361, 362, 366, 367, 368, 371, 373, 376, 377, 387], "refer": [2, 3, 4, 5, 68, 84, 103, 207, 223, 365, 369, 371, 387], "code": [2, 6, 28, 238, 261, 262, 338, 344, 363, 366, 367, 368, 369, 370, 380, 384, 387], "conduct": 2, "when": [2, 6, 8, 9, 59, 67, 74, 100, 206, 207, 217, 240, 246, 335, 362, 365, 366, 368, 369, 371, 380, 382, 383, 385, 387], "interact": 2, "ensur": [3, 4, 57, 323, 362, 368], "tt": [3, 4, 5, 6, 9, 24, 260, 332, 333, 350, 352, 353, 364, 372, 373, 376, 377, 380, 381, 382, 383, 384, 385, 386], "environ": [3, 4, 366, 367, 368, 382, 383, 384, 386, 387], "requir": [3, 6, 17, 19, 34, 60, 67, 74, 105, 106, 119, 217, 218, 221, 234, 284, 316, 318, 356, 359, 362, 365, 366, 368, 370, 376, 384, 386], "model": [3, 5, 217, 218, 362, 368, 369, 370, 372, 373, 375, 379, 380, 381, 384, 385], "follow": [3, 6, 106, 207, 275, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 386, 387], "instruct": [3, 4, 362, 367, 368, 372, 387], "readi": [3, 4, 344, 362], "come": [3, 367, 370], "typic": [3, 128, 371], "found": [3, 6, 361, 372, 384, 386], "under": [3, 4, 362, 363, 369, 370, 372, 387], "your_model": 3, "perf_model": 3, "py": [3, 6, 361, 362, 370, 383, 384, 387], "To": [3, 363, 366, 368, 369, 380, 381, 387], "pytest": [3, 4, 361, 362, 370, 384, 387], "test": [3, 4, 6, 361, 362, 369, 370, 382, 384, 387], "python_api_test": 3, "perf_your_model": 3, "csv": [3, 370, 384], "perf_your_model_d": 3, "contain": [3, 4, 6, 27, 81, 210, 365, 368, 371, 380], "tabl": [3, 384], "two": [3, 57, 59, 124, 129, 207, 263, 275, 321, 335, 344, 361, 365, 366, 371], "row": [3, 50, 104, 106, 107, 109, 116, 231, 278, 293, 348, 351, 365, 370, 371, 380, 381, 384], "set": [3, 4, 9, 59, 105, 207, 223, 240, 288, 341, 344, 361, 363, 365, 366, 368, 370, 372, 380, 383, 384, 385, 386, 387], "batch": [3, 77, 105, 106, 150, 175, 207, 210, 239, 343, 365, 366, 370], "sec": 3, "second": [3, 118, 124, 129, 175, 207, 238, 248, 263, 275, 321, 365, 366, 370, 382, 384, 387], "compil": [3, 366, 381, 384, 387], "time": [3, 153, 217, 272, 362, 366, 368, 370, 381, 382, 384, 387], "infer": [3, 362, 370, 384], "g": [3, 207, 366, 368, 370], "throughput": 3, "inf": [3, 216, 222], "vit": 3, "patch16": 3, "30": [3, 60, 83, 384], "51": [3, 383], "16": [3, 301, 368, 371, 382, 384, 385, 386], "05": [3, 366, 386], "46": [3, 384], "0": [3, 6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 34, 35, 42, 43, 44, 45, 46, 47, 49, 53, 54, 55, 56, 58, 59, 60, 61, 63, 68, 71, 73, 74, 79, 81, 82, 83, 84, 85, 87, 88, 90, 92, 94, 95, 97, 99, 101, 103, 104, 105, 106, 108, 113, 117, 118, 119, 120, 122, 125, 126, 127, 131, 133, 134, 135, 136, 138, 142, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 168, 169, 170, 172, 173, 176, 177, 178, 182, 185, 187, 188, 191, 193, 195, 197, 199, 201, 202, 204, 206, 207, 210, 220, 221, 224, 225, 227, 228, 230, 231, 234, 235, 236, 238, 240, 241, 245, 246, 247, 249, 250, 253, 254, 255, 257, 258, 260, 264, 265, 268, 269, 274, 275, 277, 281, 282, 283, 284, 289, 290, 292, 294, 295, 296, 297, 301, 302, 303, 305, 306, 309, 310, 311, 313, 316, 317, 318, 319, 323, 324, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 355, 356, 359, 360, 361, 363, 365, 366, 368, 370, 371, 380, 381, 382, 383, 384, 385, 386, 387], "0623": 3, "29": [3, 368, 384], "4960": 3, "includ": [3, 6, 57, 362], "without": [3, 84, 363, 365, 366], "ani": [3, 5, 105, 106, 362, 363, 366, 384], "abovement": 3, "grayskul": [3, 6, 29, 216, 277, 361, 368, 372, 373, 376, 377, 382, 383, 387], "It": [3, 6, 217, 218, 337, 365, 366, 368, 380], "sinc": [3, 147, 363], "dure": [3, 59, 118, 153, 337], "do": [3, 362, 363, 368, 382], "pai": 3, "name": [3, 6, 29, 78, 176, 217, 218, 342, 361, 365, 366, 369, 370, 384, 385, 386, 387], "suggest": 3, "calcul": [3, 67, 253, 370], "comput": [3, 5, 6, 18, 20, 22, 36, 57, 73, 75, 110, 121, 128, 130, 143, 153, 162, 163, 164, 170, 175, 187, 188, 191, 192, 195, 196, 197, 198, 205, 207, 211, 215, 229, 237, 245, 249, 276, 285, 302, 313, 317, 339, 340, 343, 344, 355, 357, 366, 370, 380, 381], "": [3, 4, 5, 6, 57, 217, 218, 342, 343, 362, 365, 366, 371, 380, 381, 382, 386], "also": [3, 6, 207, 223, 362, 363, 365, 366, 367, 370, 386], "maintain": [3, 369], "script": [3, 4, 362, 368, 370], "run_perform": [3, 362], "sh": [3, 4, 362, 368, 370, 384], "facilit": 3, "easi": [3, 380], "wai": [3, 5, 217, 218, 361, 366, 368, 380], "attempt": [3, 366, 384], "fastest": 3, "command": [3, 10, 12, 16, 17, 19, 28, 30, 34, 35, 42, 43, 44, 45, 46, 47, 49, 59, 60, 63, 73, 74, 79, 81, 82, 85, 87, 88, 90, 92, 94, 95, 97, 99, 101, 103, 104, 105, 106, 108, 117, 118, 119, 120, 122, 125, 126, 127, 131, 133, 142, 145, 147, 150, 154, 155, 156, 157, 158, 161, 164, 166, 168, 172, 177, 178, 182, 185, 187, 188, 191, 193, 195, 197, 202, 204, 220, 221, 224, 225, 227, 228, 230, 231, 235, 238, 240, 246, 247, 253, 258, 264, 265, 268, 269, 275, 281, 282, 283, 284, 289, 290, 292, 294, 295, 296, 297, 303, 309, 310, 311, 313, 316, 318, 319, 323, 324, 326, 327, 332, 333, 334, 337, 338, 342, 343, 347, 349, 350, 351, 352, 355, 356, 360, 370, 387], "execut": [3, 261, 262, 362, 363, 366, 368, 370, 381, 382, 384, 387], "merg": [3, 369], "built": [4, 368, 384, 386], "now": [4, 118, 337, 353, 367, 371, 380, 382], "root": [4, 282, 310, 339, 340], "provid": [4, 5, 24, 28, 103, 111, 117, 175, 207, 217, 218, 253, 260, 270, 302, 323, 333, 334, 338, 362, 365, 366, 368, 369, 370, 371, 380, 382, 387], "virtual": [4, 368], "which": [4, 5, 43, 46, 67, 119, 120, 175, 207, 210, 217, 218, 234, 235, 253, 301, 302, 342, 343, 359, 360, 361, 365, 366, 370, 371], "ll": 4, "work": [4, 207, 301, 361, 362, 372, 373, 376, 377, 387], "python_env": [4, 368, 383, 384, 386], "bin": [4, 78, 176, 368, 384], "python_env_dir": 4, "variabl": [4, 6, 366, 368, 383, 385, 387], "create_venv": [4, 368], "control": [4, 366, 380], "pythonpath": [4, 368, 386], "common": [4, 6, 121, 163, 362, 366], "practic": 4, "export": [4, 366, 368, 387], "pwd": [4, 368], "folder": [4, 362, 367, 370, 384], "split": [4, 59, 124, 129, 263, 321, 344, 366, 371], "them": [4, 344, 366, 368, 370, 380], "sub": [4, 5, 117, 118, 323, 334, 337, 350, 365, 366], "In": [4, 6, 99, 207, 275, 335, 340, 361, 363, 366, 370, 371, 380, 386], "find": [4, 368, 380, 381, 382, 383, 384, 385], "prepar": [4, 362, 384], "readm": [4, 362, 384, 386], "md": [4, 24, 260, 362], "give": [4, 370], "how": [4, 6, 362, 365, 366, 370, 371, 381, 382, 387], "progress": [4, 386], "yet": 4, "user": [4, 5, 6, 147, 175, 207, 217, 218, 333, 362, 367, 368, 369, 380, 381, 382, 383, 384, 385, 386], "mani": [4, 6, 361, 381, 386], "part": [4, 124, 129, 263, 321, 362, 366, 370, 382], "entir": [4, 128, 323], "path_to_test_fil": 4, "test_in_fil": 4, "ttnn": [4, 365, 366, 368, 369, 371, 372, 375, 377, 378, 381, 386], "friendli": [4, 5, 367], "top": [4, 338, 365, 372], "doc": [4, 6, 368, 384], "document": [4, 6, 362, 368, 369, 384], "interfac": [5, 366], "design": 5, "intuit": [5, 380], "familiar": [5, 368], "trust": 5, "valuabl": 5, "your": [5, 362, 363, 366, 368, 370, 372], "journei": 5, "take": [5, 6, 341, 362, 365, 366, 367, 371, 380], "advantag": 5, "n": [5, 59, 77, 105, 106, 210, 231, 244, 245, 353, 366, 368, 370, 380, 381, 384, 386], "d": [5, 207, 351, 384], "row_major_layout": [5, 29, 57, 78, 81, 113, 114, 118, 119, 234, 335, 359, 371, 380, 381, 382], "tile_layout": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 211, 214, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 243, 245, 246, 247, 250, 251, 252, 253, 254, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 335, 338, 345, 346, 347, 348, 349, 355, 356, 357, 358, 359, 360, 361, 365, 371, 380, 381, 382, 385, 387], "stabl": 5, "The": [5, 6, 8, 9, 24, 27, 29, 57, 58, 77, 78, 79, 81, 82, 83, 84, 98, 103, 106, 118, 119, 120, 128, 142, 168, 175, 206, 207, 210, 223, 234, 235, 236, 239, 260, 261, 262, 268, 269, 272, 323, 334, 337, 338, 342, 343, 353, 359, 360, 361, 362, 363, 365, 366, 367, 369, 370, 371, 380, 381, 386, 387], "networkx": [5, 384, 386], "compat": [5, 368, 373, 376, 377], "some": [5, 6, 323, 366, 368, 387], "nn": [5, 6, 24, 217, 218, 260, 361, 365, 372, 373, 376, 377, 385, 387], "object": [5, 67, 236, 361, 365, 369, 386], "could": [5, 380, 381, 382, 383, 384, 385], "significantli": [5, 381], "speed": [5, 381], "up": [5, 106, 366, 368, 370, 372, 381, 386], "abil": [5, 366], "compar": [5, 6, 85, 122, 131, 166, 202, 207, 225, 381], "equival": [5, 6, 28, 238, 338, 344, 371], "veri": [5, 303, 370, 380, 382], "meant": 6, "contributor": 6, "Not": [6, 199, 216, 226, 277, 361, 387], "mai": [6, 68, 165, 207, 361, 366, 368, 387], "wormhol": [6, 29, 361, 368, 372, 387], "A": [6, 27, 119, 120, 207, 234, 235, 303, 343, 359, 360, 362, 363, 365, 366, 368, 369, 371], "produc": [6, 362, 363, 366, 380, 381], "call": [6, 118, 261, 262, 337, 363, 365, 366, 369, 370, 371, 380, 382, 384, 387], "There": [6, 207, 361, 365, 366, 371], "optiona": 6, "composit": 6, "struct": [6, 366], "specifi": [6, 27, 57, 78, 83, 84, 117, 119, 120, 175, 207, 217, 218, 234, 235, 238, 239, 240, 249, 272, 323, 333, 334, 342, 343, 359, 360, 361, 365, 366, 381, 382], "simpli": [6, 335, 365, 366, 380], "defin": [6, 29, 365, 366, 369, 371], "method": [6, 366, 368, 371, 384], "register_oper": 6, "exist": [6, 236, 365, 384, 386], "bind_registered_oper": 6, "auto": [6, 366], "attach": [6, 217, 218, 384], "attach_golden_funct": 6, "let": [6, 371, 380, 382], "just": [6, 368, 382, 386], "copi": [6, 57, 117, 147, 334, 365, 366, 380], "order": [6, 67, 207, 244, 284, 338, 365, 366, 368, 370, 371, 372, 380, 382, 387], "directori": [6, 372, 386], "structur": [6, 361], "shown": [6, 368, 371], "below": [6, 207, 362, 366, 370, 371, 372], "cpp": 6, "categori": 6, "operation_nam": 6, "_device_oper": 6, "hpp": 6, "program_factory_0": 6, "_program_factori": 6, "factori": 6, "But": [6, 363], "concret": [6, 207], "example_device_oper": 6, "spdx": [6, 387], "filecopyrighttext": [6, 387], "2023": [6, 384, 386], "inc": [6, 387], "licens": [6, 387], "identifi": [6, 384, 387], "apach": [6, 387], "pragma": 6, "onc": [6, 381], "variant": 6, "device_oper": 6, "decor": [6, 369, 380, 381, 382, 383, 384, 385], "namespac": [6, 386], "exampledeviceoper": 6, "store": [6, 365, 370, 371, 380], "aren": [6, 8], "t": [6, 8, 98, 147, 207, 217, 218, 260, 363, 365, 366, 370, 380, 382, 384], "operation_attributes_t": 6, "bool": [6, 17, 19, 29, 34, 60, 67, 68, 73, 74, 88, 90, 94, 117, 125, 130, 153, 161, 175, 207, 210, 217, 218, 220, 221, 239, 249, 250, 281, 284, 316, 318, 332, 333, 338, 339, 340, 342, 343, 344, 350, 351, 352, 356, 366], "int": [6, 10, 12, 16, 17, 19, 24, 27, 28, 30, 34, 35, 42, 43, 44, 45, 46, 47, 49, 59, 60, 63, 67, 73, 74, 79, 81, 82, 83, 85, 87, 88, 90, 92, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 117, 118, 119, 120, 122, 124, 125, 127, 129, 130, 131, 133, 142, 145, 147, 150, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 168, 172, 175, 177, 178, 182, 185, 187, 188, 191, 193, 195, 197, 202, 204, 206, 207, 210, 220, 221, 224, 225, 227, 228, 230, 231, 235, 236, 238, 239, 240, 243, 246, 247, 249, 250, 253, 258, 260, 263, 264, 265, 268, 269, 273, 281, 283, 284, 289, 290, 292, 294, 295, 296, 297, 301, 303, 309, 310, 311, 313, 316, 318, 319, 321, 323, 324, 326, 327, 332, 333, 334, 337, 338, 339, 340, 342, 343, 344, 347, 349, 350, 351, 352, 353, 355, 356, 360, 365, 366, 371, 385, 386], "some_other_attribut": 6, "argument": [6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 365, 366, 380, 383, 385], "don": [6, 207, 366, 380], "thei": [6, 207, 362, 366, 381, 382], "tensor_args_t": 6, "onli": [6, 17, 19, 20, 22, 24, 28, 37, 41, 44, 49, 53, 54, 55, 56, 59, 60, 67, 73, 74, 78, 82, 106, 108, 111, 118, 124, 129, 144, 165, 170, 171, 178, 182, 189, 190, 205, 207, 209, 214, 221, 243, 253, 260, 263, 270, 271, 284, 314, 316, 318, 321, 323, 343, 344, 355, 358, 361, 362, 365, 366, 368, 370, 371, 372, 373, 376, 377, 385, 387], "const": [6, 288, 366], "input_tensor": [6, 10, 11, 12, 13, 14, 15, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 74, 76, 77, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 113, 115, 116, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 162, 167, 168, 169, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 193, 194, 199, 200, 201, 203, 204, 210, 216, 222, 223, 226, 227, 228, 230, 231, 232, 233, 235, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 360, 366, 383, 385, 387], "howev": [6, 366, 368, 380], "show": [6, 207, 365, 371, 381, 382], "els": [6, 73, 365, 383, 385, 386], "done": [6, 362, 365, 370, 380, 384], "io_tensor": 6, "optional_output_tensor": [6, 175, 207], "vector": [6, 245, 365, 366], "vector_of_tensor": 6, "tupl": [6, 67, 238, 344, 366], "tuple_of_tensor": 6, "vector_of_optional_tensor": 6, "some_crazy_tuple_of_tensor": 6, "return": [6, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 366, 382, 383, 384, 385, 386], "singl": [6, 343, 361, 369, 370, 371, 380], "shape_return_value_t": 6, "tensor_return_value_t": 6, "note": [6, 62, 149, 207, 234, 235, 256, 275, 363, 365, 366, 368, 370, 371, 380, 382, 386, 387], "should": [6, 117, 124, 129, 147, 153, 170, 207, 210, 231, 238, 263, 321, 335, 362, 365, 367, 369, 370, 380, 381, 382, 383, 385], "same": [6, 16, 18, 20, 22, 36, 42, 43, 45, 46, 47, 73, 75, 82, 84, 85, 86, 103, 105, 110, 120, 121, 122, 123, 131, 132, 143, 147, 153, 163, 164, 166, 167, 170, 175, 187, 188, 191, 192, 195, 196, 197, 198, 202, 203, 205, 207, 211, 215, 217, 218, 224, 225, 226, 229, 231, 235, 237, 245, 283, 285, 313, 317, 319, 335, 338, 342, 355, 357, 360, 366, 370, 371, 380, 382], "pattern": [6, 59, 217, 369], "e": [6, 207, 366, 370, 387], "singlecor": 6, "share": [6, 365], "override_runtime_argu": 6, "shared_variables_t": 6, "kernelhandl": 6, "unary_reader_kernel_id": [6, 366], "unary_writer_kernel_id": [6, 366], "cached_program_t": 6, "cachedprogram": 6, "static": 6, "operation_attribut": 6, "tensor_arg": 6, "tensor_return_valu": 6, "void": [6, 366], "cached_program": 6, "multicor": [6, 332, 333, 350, 352], "size_t": 6, "num_cor": 6, "num_cores_i": 6, "program_factory_t": 6, "mandatori": [6, 366], "select": [6, 365, 369], "arg": [6, 106, 240, 261, 262, 334, 365, 387], "select_program_factori": 6, "valid": [6, 24, 98, 105, 106, 207, 217, 218, 260, 361, 362, 365, 366, 370, 384], "usual": 6, "validate_on_program_cache_miss": 6, "reus": 6, "less": [6, 166, 167, 202, 203, 366, 368, 370, 387], "validate_on_program_cache_hit": 6, "compute_output_shap": [6, 366], "create_output_tensor": [6, 366], "map": [6, 29, 380, 381, 382, 383, 384, 385], "abl": 6, "prim": 6, "after": [6, 238, 261, 363, 369, 370, 380, 387], "keep": [6, 361, 371], "mind": [6, 382], "overload": [6, 334, 365, 380], "queue_id": [6, 10, 12, 16, 17, 19, 28, 30, 34, 35, 42, 43, 44, 45, 46, 47, 49, 59, 60, 63, 73, 74, 79, 81, 82, 85, 87, 88, 90, 92, 94, 95, 97, 99, 101, 103, 104, 105, 106, 108, 119, 120, 122, 125, 126, 127, 131, 133, 142, 145, 147, 150, 154, 155, 156, 157, 158, 161, 164, 166, 168, 172, 177, 178, 182, 185, 187, 188, 191, 193, 195, 197, 202, 204, 210, 220, 221, 224, 225, 227, 228, 230, 231, 235, 238, 240, 246, 247, 253, 258, 264, 265, 268, 269, 275, 281, 282, 283, 284, 289, 290, 292, 294, 295, 296, 297, 301, 303, 309, 310, 311, 313, 316, 318, 319, 324, 326, 327, 332, 333, 338, 342, 343, 347, 349, 350, 351, 352, 355, 356, 360], "automat": [6, 206, 335, 362, 363, 366, 370, 371, 380, 381], "primit": 6, "so": [6, 106, 361, 363, 365, 366, 380, 386], "invok": [6, 368], "case": [6, 73, 118, 153, 207, 229, 248, 335, 361, 362, 366, 371, 380, 387], "custom": [6, 261, 262, 368, 382], "hash": [6, 217, 218, 370], "stl": 6, "hash_t": 6, "compute_program_hash": 6, "create_op_performance_model": 6, "opperformancemodel": 6, "make": [6, 217, 218, 303, 338, 344, 361, 371, 384, 387], "avail": [6, 199, 353, 363, 365, 372, 373, 376, 377, 387], "constexpr": 6, "some_condition_based_on_operation_attributes_and_or_tensor_arg": 6, "true": [6, 11, 13, 15, 17, 19, 21, 23, 31, 33, 34, 37, 38, 40, 41, 50, 52, 54, 56, 60, 64, 66, 67, 68, 70, 72, 73, 74, 80, 82, 88, 89, 90, 91, 93, 94, 96, 97, 102, 104, 107, 109, 112, 116, 117, 125, 126, 130, 135, 137, 139, 141, 144, 146, 165, 169, 171, 174, 179, 181, 183, 184, 186, 189, 190, 200, 201, 209, 214, 221, 223, 228, 239, 247, 250, 252, 254, 259, 266, 267, 271, 273, 278, 281, 282, 284, 287, 291, 293, 296, 298, 300, 304, 306, 308, 310, 312, 314, 316, 318, 325, 327, 329, 331, 332, 333, 338, 342, 343, 344, 348, 350, 352, 356, 358, 361, 365, 366, 380, 381, 382, 383, 384, 385, 386, 387], "output_shap": 6, "create_device_tensor": 6, "dtype": [6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 365, 366, 371, 380, 381, 382, 383, 385, 387], "42": [6, 381, 384, 386], "single_core_program_factori": 6, "tt_metal": [6, 239, 353, 366, 368, 370, 384], "work_split": 6, "output_tensor": [6, 10, 12, 16, 28, 30, 35, 42, 43, 44, 45, 46, 47, 49, 59, 63, 73, 79, 81, 82, 85, 87, 88, 90, 92, 94, 95, 97, 99, 101, 103, 104, 108, 114, 119, 120, 122, 125, 126, 127, 131, 133, 142, 145, 147, 154, 155, 156, 157, 158, 161, 164, 166, 168, 172, 177, 178, 182, 185, 187, 188, 191, 193, 195, 197, 202, 204, 220, 224, 225, 227, 228, 230, 235, 246, 247, 253, 258, 264, 265, 268, 269, 281, 282, 283, 289, 290, 292, 294, 295, 296, 297, 303, 309, 310, 311, 313, 319, 324, 326, 327, 338, 347, 349, 355, 356, 360, 366, 380, 385, 387], "src_buffer": 6, "dst_buffer": 6, "dataformat": 6, "cb_data_format": 6, "datatype_to_dataformat_convert": 6, "uint32_t": [6, 99], "single_tile_s": 6, "tiles": 6, "cb_data_format_output": 6, "single_tile_size_output": 6, "num_til": 6, "volum": 6, "constant": [6, 366], "tile_hw": 6, "corecoord": [6, 366], "compute_with_storage_grid_s": 6, "num_cores_x": [6, 361, 382], "x": [6, 175, 207, 241, 342, 343, 365, 366, 370, 371, 381, 382, 385, 386], "y": [6, 241, 365, 366, 370, 371, 381, 382, 386], "all_cor": 6, "core_group_1": 6, "core_group_2": 6, "num_tiles_per_core_group_1": 6, "num_tiles_per_core_group_2": 6, "split_work_to_cor": 6, "src0_cb_index": 6, "cbindex": 6, "c_0": 6, "num_input_til": 6, "circularbufferconfig": 6, "cb_src0_config": 6, "set_page_s": 6, "cb_src0": 6, "createcircularbuff": 6, "output_cb_index": 6, "c_2": 6, "num_output_til": 6, "cb_output_config": 6, "cb_output": 6, "src_is_dram": 6, "buffer_typ": [6, 365, 366], "buffertyp": [6, 365, 366], "dram": [6, 336, 365, 366, 371, 380], "reader_compile_time_arg": 6, "dst_is_dram": 6, "writer_compile_time_arg": 6, "createkernel": 6, "eltwis": [6, 111, 248, 270, 366], "kernel": [6, 57, 175, 207, 210, 302, 366, 368, 370, 381], "dataflow": 6, "reader_unary_interleaved_start_id": 6, "readerdatamovementconfig": 6, "writer_unary_interleaved_start_id": 6, "writerdatamovementconfig": 6, "compute_kernel_args_group_1": 6, "per_core_block_cnt": 6, "per_core_block_s": 6, "math_approx_mod": 6, "fals": [6, 29, 67, 68, 73, 88, 90, 94, 117, 125, 153, 175, 207, 210, 239, 249, 281, 338, 339, 340, 349, 351, 361, 366, 380, 381, 382, 383, 384, 385, 386, 387], "eltwise_unary_kernel_group_1_id": 6, "eltwise_sfpu": 6, "computeconfig": 6, "math_fidel": [6, 385], "mathfidel": [6, 385], "hifi4": [6, 370, 384], "compile_arg": 6, "rang": [6, 27, 43, 44, 46, 65, 105, 106, 121, 146, 163, 165, 180, 216, 222, 243, 279, 299, 324, 325, 365, 366], "compute_kernel_args_group_2": 6, "eltwise_unary_kernel_group_2_id": 6, "num_tiles_written": 6, "num_tiles_per_cor": 6, "tt_assert": 6, "setruntimearg": 6, "address": [6, 366], "move": [6, 113, 114, 362, 363, 365, 366, 380, 382, 383, 384], "shared_vari": 6, "runtime_arg": [6, 366], "getruntimearg": [6, 366], "multi_core_program_factori": 6, "sequenc": [6, 342, 343], "compositeexampleoper": 6, "composite_exampl": 6, "another_copi": 6, "_pybind": 6, "example_pybind": 6, "pybind11": 6, "h": [6, 77, 105, 106, 210, 353, 366, 371], "bind_example_oper": 6, "r": [6, 241, 368, 384], "pybind": 6, "expos": 6, "logic": [6, 191, 192, 195, 196, 198, 207, 217, 218], "self": [6, 361, 365, 366, 371, 385], "correct": 6, "specif": [6, 28, 207, 343, 362, 365, 366, 368, 371, 372, 384], "pybind_overload_t": 6, "decltyp": 6, "examples_pybind": 6, "py_modul": 6, "final": [6, 207, 238, 361, 362, 363, 369, 380], "wherev": 6, "want": [6, 363, 368, 381, 383, 387], "its": [6, 57, 84, 238, 301, 361, 362, 365, 366, 368, 369, 370, 371, 387], "import": [6, 210, 361, 362, 363, 368, 370, 380, 381, 382, 383, 384, 385, 386, 387], "For": [6, 29, 118, 171, 207, 344, 361, 362, 365, 368, 369, 370, 371], "signatur": 6, "And": [6, 361, 365, 366, 371, 380, 381], "ignor": [6, 250], "kwarg": [6, 261, 262, 334, 365, 387], "def": [6, 361, 382, 383, 384, 385, 386, 387], "golden_funct": 6, "befor": [6, 29, 117, 238, 262, 303, 334, 362, 365, 366, 371], "postprocess": 6, "manual": [6, 361, 387], "pack": [6, 350, 352], "preprocess_golden_function_input": 6, "ttnn_input_tensor": 6, "postprocess_golden_function_output": 6, "torch_output_tensor": [6, 387], "becaus": [6, 371, 380, 381, 382], "wa": [6, 362, 370, 371, 380, 386], "_ttnn": [8, 9, 81, 113, 114, 236, 239, 323, 334, 365, 366, 371], "default": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 365, 366, 368, 370, 381, 387], "plan": [8, 9, 113, 114, 239], "deprec": [8, 9, 113, 114, 239, 383], "futur": [8, 9, 113, 114, 239], "arg0": [9, 365, 371], "none": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 366, 380, 381, 382, 383, 384, 385], "device_id": [9, 58, 68, 81, 82, 206, 236, 257, 323, 334, 335, 336, 365, 380, 381, 382, 383, 385, 387], "complextensor": [10, 11, 17, 25, 26, 61, 62, 73, 74, 148, 149, 151, 152, 221, 241, 242, 255, 256, 258, 259, 316], "memory_config": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 366, 381, 382, 385, 387], "appli": [10, 12, 16, 30, 35, 44, 49, 57, 63, 79, 85, 87, 88, 90, 92, 94, 95, 99, 100, 101, 103, 108, 122, 124, 125, 127, 128, 129, 131, 133, 142, 145, 154, 155, 156, 157, 158, 164, 166, 168, 172, 175, 177, 178, 182, 185, 187, 188, 191, 193, 195, 197, 202, 204, 207, 210, 224, 225, 227, 230, 238, 258, 263, 264, 265, 268, 269, 281, 283, 289, 290, 292, 294, 295, 297, 303, 309, 311, 313, 319, 321, 324, 326, 347, 349, 362, 366], "element": [10, 12, 28, 30, 35, 44, 49, 59, 63, 79, 87, 88, 90, 92, 94, 95, 99, 101, 103, 108, 124, 125, 127, 128, 129, 133, 142, 145, 154, 155, 156, 157, 158, 168, 172, 177, 178, 182, 185, 193, 204, 227, 230, 231, 238, 245, 246, 253, 258, 263, 264, 265, 268, 269, 272, 274, 281, 289, 290, 292, 294, 295, 297, 303, 309, 311, 321, 324, 326, 338, 347, 349, 352, 366, 371, 380], "wise": [10, 12, 30, 35, 44, 49, 63, 79, 87, 88, 90, 92, 94, 95, 99, 101, 103, 108, 124, 125, 127, 129, 133, 142, 145, 154, 155, 156, 157, 158, 168, 172, 177, 178, 182, 185, 193, 204, 227, 230, 246, 253, 258, 263, 264, 265, 268, 269, 281, 289, 290, 292, 294, 295, 297, 303, 309, 311, 321, 324, 326, 347, 349, 366], "mathrm": [10, 12, 16, 18, 30, 35, 36, 42, 43, 44, 45, 46, 47, 49, 63, 73, 75, 79, 85, 86, 87, 88, 90, 92, 94, 95, 99, 101, 103, 108, 110, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 142, 143, 145, 147, 153, 154, 155, 156, 157, 158, 163, 164, 166, 167, 168, 170, 172, 177, 178, 182, 185, 187, 188, 191, 192, 193, 195, 196, 197, 198, 202, 203, 204, 211, 215, 224, 225, 226, 227, 229, 230, 237, 245, 246, 248, 249, 258, 263, 264, 265, 268, 269, 281, 283, 285, 289, 290, 292, 294, 295, 297, 303, 309, 311, 313, 317, 319, 321, 324, 326, 347, 349, 357, 366], "_tensor": [10, 12, 16, 18, 30, 35, 36, 42, 43, 44, 45, 46, 47, 49, 63, 73, 75, 79, 85, 86, 87, 88, 90, 92, 94, 95, 99, 101, 103, 108, 110, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 142, 143, 145, 147, 153, 154, 155, 156, 157, 158, 163, 164, 166, 167, 168, 170, 172, 177, 178, 182, 185, 187, 188, 191, 192, 193, 195, 196, 197, 198, 202, 203, 204, 211, 215, 224, 225, 226, 227, 229, 230, 237, 245, 246, 248, 249, 258, 263, 264, 265, 268, 269, 281, 283, 285, 289, 290, 292, 294, 295, 297, 303, 309, 311, 313, 317, 319, 321, 324, 326, 347, 349, 357], "_i": [10, 12, 16, 30, 35, 36, 42, 43, 44, 45, 46, 47, 49, 63, 73, 79, 85, 87, 88, 90, 92, 94, 95, 99, 101, 103, 108, 121, 122, 124, 125, 127, 128, 129, 131, 133, 142, 143, 145, 147, 154, 155, 156, 157, 158, 163, 166, 168, 172, 177, 178, 182, 185, 191, 192, 193, 195, 196, 197, 198, 202, 204, 224, 225, 227, 229, 230, 245, 246, 249, 258, 263, 264, 265, 268, 269, 281, 283, 285, 289, 290, 292, 294, 295, 297, 303, 309, 311, 319, 321, 324, 326, 347, 349, 357], "verb": [10, 12, 30, 35, 42, 43, 44, 45, 46, 47, 49, 63, 75, 79, 92, 95, 99, 101, 103, 108, 110, 121, 124, 129, 142, 145, 147, 154, 155, 156, 157, 158, 163, 164, 168, 170, 177, 178, 182, 185, 187, 188, 211, 215, 227, 248, 258, 263, 264, 265, 268, 269, 285, 289, 290, 292, 294, 295, 297, 309, 311, 313, 321, 324, 326, 349], "keyword": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "prealloc": [10, 12, 16, 17, 19, 28, 30, 34, 35, 42, 43, 44, 45, 46, 47, 49, 59, 60, 63, 73, 74, 79, 81, 82, 85, 87, 88, 90, 92, 94, 95, 97, 99, 101, 103, 104, 108, 119, 120, 122, 125, 126, 127, 131, 133, 142, 145, 147, 154, 155, 156, 157, 158, 161, 164, 166, 168, 172, 177, 178, 182, 185, 187, 188, 191, 193, 195, 197, 202, 204, 220, 221, 224, 225, 227, 228, 230, 235, 246, 247, 253, 258, 264, 265, 268, 269, 281, 282, 283, 284, 289, 290, 292, 294, 295, 296, 297, 303, 309, 310, 311, 313, 316, 318, 319, 324, 326, 327, 338, 347, 349, 355, 356, 360], "queue": [10, 12, 16, 17, 19, 28, 30, 34, 35, 42, 43, 44, 45, 46, 47, 49, 59, 60, 63, 73, 74, 79, 81, 82, 85, 87, 88, 90, 92, 94, 95, 97, 99, 101, 103, 104, 105, 106, 108, 117, 118, 119, 120, 122, 125, 126, 127, 131, 133, 142, 145, 147, 150, 154, 155, 156, 157, 158, 161, 164, 166, 168, 172, 177, 178, 182, 185, 187, 188, 191, 193, 195, 197, 202, 204, 210, 220, 221, 224, 225, 227, 228, 230, 231, 235, 238, 240, 246, 247, 253, 258, 264, 265, 268, 269, 275, 281, 282, 283, 284, 289, 290, 292, 294, 295, 296, 297, 303, 309, 310, 311, 313, 316, 318, 319, 323, 324, 326, 327, 332, 333, 334, 337, 338, 342, 343, 347, 349, 350, 351, 352, 355, 356, 360], "id": [10, 12, 16, 17, 19, 28, 30, 34, 35, 42, 43, 44, 45, 46, 47, 49, 59, 60, 63, 73, 74, 79, 81, 82, 85, 87, 88, 90, 92, 94, 95, 97, 99, 101, 103, 104, 105, 106, 108, 117, 118, 119, 120, 122, 125, 126, 127, 131, 133, 142, 145, 147, 150, 154, 155, 156, 157, 158, 161, 164, 166, 168, 172, 177, 178, 182, 185, 187, 188, 191, 193, 195, 197, 202, 204, 206, 210, 220, 221, 224, 225, 227, 228, 230, 231, 235, 236, 238, 240, 246, 247, 253, 258, 264, 265, 268, 269, 275, 281, 282, 283, 284, 289, 290, 292, 294, 295, 296, 297, 303, 309, 310, 311, 313, 316, 318, 319, 323, 324, 326, 327, 332, 333, 334, 337, 338, 342, 343, 347, 349, 350, 351, 352, 355, 356, 360, 365, 370], "bfloat16": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 345, 346, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 366, 370, 371, 380, 381, 382, 384, 385, 387], "bfloat8_b": [10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 30, 33, 34, 35, 36, 37, 38, 41, 49, 51, 60, 63, 64, 65, 69, 70, 71, 72, 74, 76, 79, 85, 86, 88, 90, 92, 94, 95, 96, 97, 101, 102, 103, 108, 115, 116, 118, 122, 123, 124, 125, 127, 129, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 178, 180, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 209, 211, 214, 215, 216, 221, 224, 225, 226, 227, 228, 229, 230, 245, 246, 247, 248, 251, 252, 263, 264, 265, 267, 268, 277, 280, 281, 282, 283, 284, 286, 287, 289, 290, 291, 292, 295, 296, 297, 298, 299, 305, 306, 309, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 324, 325, 326, 328, 329, 337, 345, 346, 347, 349, 355, 356, 358, 361, 365, 370, 371, 382], "tile": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 211, 214, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 365, 366, 370, 371, 380, 381, 384], "grad_tensor": [11, 13, 15, 17, 19, 21, 23, 26, 31, 33, 34, 37, 38, 40, 41, 50, 52, 54, 56, 60, 62, 64, 66, 70, 72, 74, 76, 80, 82, 89, 91, 93, 96, 97, 102, 104, 107, 109, 112, 116, 126, 135, 137, 139, 141, 144, 146, 149, 165, 169, 171, 174, 179, 181, 183, 184, 186, 189, 190, 200, 201, 209, 214, 221, 223, 228, 242, 244, 247, 250, 252, 254, 256, 259, 266, 267, 271, 273, 278, 280, 282, 284, 287, 291, 293, 296, 298, 300, 304, 306, 308, 310, 312, 314, 316, 318, 325, 327, 329, 331, 348, 356, 358], "list": [11, 13, 15, 16, 17, 19, 21, 23, 26, 28, 31, 33, 34, 37, 38, 40, 41, 50, 52, 54, 56, 59, 60, 62, 64, 66, 67, 70, 72, 74, 76, 77, 80, 81, 83, 85, 89, 91, 93, 96, 97, 102, 104, 107, 109, 112, 116, 117, 118, 122, 126, 131, 135, 137, 139, 141, 144, 146, 149, 164, 165, 166, 169, 171, 174, 175, 179, 181, 183, 184, 186, 187, 188, 189, 190, 191, 195, 197, 200, 201, 202, 207, 209, 210, 214, 221, 223, 224, 225, 228, 231, 238, 239, 240, 242, 244, 247, 248, 249, 250, 252, 254, 256, 259, 266, 267, 271, 273, 278, 280, 282, 283, 284, 287, 291, 293, 296, 298, 300, 301, 304, 306, 308, 310, 312, 313, 314, 316, 318, 319, 323, 325, 327, 329, 331, 334, 337, 338, 343, 348, 349, 350, 352, 356, 358, 365, 366], "backward": [11, 13, 15, 17, 19, 21, 23, 26, 31, 33, 34, 37, 38, 40, 41, 50, 52, 54, 56, 60, 62, 64, 66, 70, 72, 74, 76, 80, 82, 89, 91, 93, 96, 97, 102, 104, 107, 109, 112, 116, 126, 135, 137, 139, 141, 144, 146, 149, 165, 169, 171, 174, 179, 181, 183, 184, 186, 189, 190, 200, 201, 209, 214, 221, 223, 228, 242, 244, 247, 250, 252, 254, 256, 259, 266, 267, 271, 273, 278, 280, 282, 284, 287, 291, 293, 296, 298, 300, 304, 306, 308, 310, 312, 314, 316, 318, 325, 327, 329, 331, 348, 356, 358, 366], "given": [11, 13, 15, 17, 19, 21, 23, 26, 28, 31, 33, 34, 37, 38, 40, 41, 50, 52, 54, 56, 60, 62, 64, 66, 70, 72, 74, 76, 77, 80, 84, 89, 91, 93, 96, 97, 102, 104, 107, 109, 112, 116, 126, 135, 137, 139, 141, 144, 146, 149, 165, 169, 171, 174, 179, 181, 183, 184, 186, 189, 190, 200, 201, 209, 214, 217, 218, 221, 223, 228, 236, 239, 242, 244, 247, 250, 252, 254, 256, 259, 266, 267, 271, 273, 274, 278, 280, 282, 284, 287, 291, 293, 296, 298, 300, 304, 306, 308, 310, 312, 314, 316, 318, 325, 327, 329, 331, 338, 343, 348, 353, 356, 358, 361, 365, 366, 370, 380], "gradient": [11, 13, 15, 17, 19, 21, 23, 31, 33, 34, 37, 38, 40, 41, 50, 52, 54, 56, 60, 64, 66, 70, 72, 74, 76, 80, 82, 89, 91, 93, 96, 97, 102, 104, 107, 109, 112, 116, 126, 135, 137, 139, 141, 144, 146, 165, 169, 171, 174, 179, 181, 183, 184, 186, 189, 190, 200, 201, 209, 214, 221, 223, 228, 244, 247, 250, 252, 254, 259, 266, 267, 271, 273, 278, 280, 282, 284, 287, 291, 293, 296, 298, 300, 304, 306, 308, 310, 312, 314, 316, 318, 325, 327, 329, 331, 348, 356, 358], "requires_grad": [11, 13, 15, 17, 19, 21, 23, 31, 33, 34, 37, 38, 40, 41, 50, 52, 54, 56, 60, 64, 66, 70, 72, 74, 80, 82, 89, 91, 93, 96, 97, 102, 104, 107, 109, 112, 116, 126, 135, 137, 139, 141, 144, 146, 165, 169, 171, 174, 179, 181, 183, 184, 186, 189, 190, 200, 201, 209, 214, 221, 223, 228, 247, 250, 252, 254, 259, 266, 267, 271, 273, 278, 282, 284, 287, 291, 293, 296, 298, 300, 304, 306, 308, 310, 312, 314, 316, 318, 325, 327, 329, 331, 348, 356, 358], "rand": [12, 14, 30, 32, 35, 39, 48, 49, 60, 63, 65, 69, 81, 87, 92, 95, 101, 108, 115, 124, 127, 129, 133, 145, 154, 155, 156, 157, 158, 172, 173, 177, 178, 180, 182, 185, 193, 194, 204, 216, 227, 230, 232, 233, 237, 248, 250, 251, 263, 264, 265, 273, 274, 277, 285, 289, 292, 294, 295, 297, 299, 307, 309, 311, 321, 322, 324, 326, 328, 345, 346, 380, 383, 385, 387], "input_tensor_a": [13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 50, 52, 60, 64, 66, 70, 72, 73, 74, 75, 80, 85, 86, 89, 91, 93, 96, 102, 107, 109, 110, 111, 112, 116, 121, 122, 123, 131, 132, 135, 137, 139, 143, 144, 146, 150, 153, 163, 164, 165, 166, 167, 169, 171, 174, 175, 179, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 200, 201, 202, 203, 205, 207, 209, 210, 211, 214, 215, 221, 223, 224, 225, 226, 229, 237, 245, 247, 248, 252, 254, 259, 266, 267, 270, 271, 278, 283, 284, 285, 287, 291, 293, 298, 300, 306, 308, 312, 313, 314, 316, 317, 318, 319, 325, 329, 348, 355, 356, 357, 358, 380, 387], "invers": [13, 15, 31, 33, 38, 40], "cosin": [13, 15, 64, 66, 100], "hyperbol": [15, 33, 40, 66, 300, 327], "input_tensor_b": [16, 17, 18, 19, 20, 21, 22, 23, 34, 36, 37, 41, 42, 43, 45, 46, 47, 60, 73, 74, 75, 85, 86, 110, 111, 112, 121, 122, 123, 131, 132, 143, 144, 150, 153, 163, 164, 165, 166, 167, 171, 175, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 202, 203, 205, 207, 209, 211, 214, 215, 221, 224, 225, 226, 229, 237, 248, 270, 271, 283, 284, 285, 313, 314, 316, 317, 318, 319, 355, 356, 357, 358, 380, 387], "number": [16, 17, 20, 22, 24, 41, 59, 73, 74, 75, 85, 86, 98, 105, 106, 110, 111, 112, 122, 123, 131, 132, 164, 166, 167, 171, 187, 188, 191, 195, 197, 202, 203, 205, 207, 208, 210, 211, 212, 213, 215, 221, 224, 225, 226, 231, 238, 240, 247, 248, 260, 270, 271, 272, 274, 275, 283, 313, 315, 316, 319, 320, 333, 338, 339, 340, 351, 354, 355, 365, 366, 369, 370, 371, 382, 386], "datatyp": [16, 27, 29, 77, 81, 82, 83, 84, 85, 118, 119, 120, 122, 128, 130, 131, 164, 166, 175, 187, 188, 191, 195, 197, 202, 207, 224, 225, 234, 235, 283, 313, 319, 335, 336, 359, 360, 363, 365, 366, 380, 381, 385], "str": [16, 29, 34, 74, 78, 85, 122, 131, 164, 166, 175, 176, 187, 188, 191, 195, 197, 202, 207, 217, 218, 224, 225, 283, 288, 313, 319, 365, 366, 386], "_a": [16, 18, 36, 42, 43, 45, 46, 47, 73, 75, 85, 86, 110, 121, 122, 123, 131, 132, 143, 153, 163, 164, 166, 167, 187, 188, 191, 192, 195, 196, 197, 198, 202, 203, 211, 215, 224, 225, 226, 229, 237, 248, 283, 285, 313, 317, 319, 357], "_b": [16, 18, 36, 42, 43, 45, 46, 47, 73, 75, 85, 86, 110, 121, 122, 123, 131, 132, 143, 153, 163, 164, 166, 167, 187, 188, 191, 192, 195, 196, 197, 198, 202, 203, 211, 215, 224, 225, 226, 229, 237, 248, 283, 285, 313, 317, 319, 357], "broadcast": [16, 17, 74, 85, 122, 131, 164, 166, 175, 187, 188, 191, 195, 197, 202, 207, 224, 225, 274, 313, 316, 319, 342, 387], "int32": [16, 42, 43, 44, 45, 46, 47, 121, 163, 383], "tensor1": [16, 17, 18, 19, 20, 21, 22, 23, 34, 36, 37, 41, 42, 43, 45, 46, 47, 59, 60, 73, 74, 75, 85, 86, 110, 111, 112, 121, 122, 123, 131, 132, 143, 144, 150, 153, 163, 164, 165, 166, 167, 170, 171, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 202, 203, 205, 207, 209, 211, 214, 215, 221, 224, 225, 226, 229, 237, 248, 270, 271, 283, 284, 285, 313, 314, 316, 317, 318, 319, 355, 356, 357, 358], "tensor2": [16, 17, 18, 19, 20, 21, 22, 23, 34, 36, 37, 41, 42, 43, 45, 46, 47, 59, 60, 73, 74, 75, 85, 86, 110, 111, 112, 121, 122, 123, 131, 132, 143, 144, 150, 153, 163, 164, 165, 166, 167, 170, 171, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 202, 203, 205, 207, 209, 211, 214, 215, 221, 224, 225, 226, 229, 237, 248, 270, 271, 283, 284, 285, 313, 314, 316, 317, 318, 319, 355, 356, 357, 358], "scalar": [16, 17, 20, 22, 42, 43, 45, 46, 47, 73, 74, 75, 76, 85, 86, 110, 111, 112, 119, 120, 122, 123, 131, 132, 164, 166, 167, 170, 171, 187, 188, 191, 195, 197, 202, 203, 205, 211, 215, 221, 224, 225, 226, 244, 248, 253, 254, 270, 271, 283, 313, 316, 319, 363, 366, 387], "are_required_output": [17, 19, 34, 60, 74, 221, 284, 316, 318, 356], "input_grad": [17, 19, 34, 60, 74, 221, 284, 316, 318], "other_grad": [17, 19, 34, 60, 74, 221, 284, 316, 318], "bfloat4_b": [17, 19, 20, 22, 37, 41, 60, 74, 118, 144, 165, 170, 171, 189, 190, 205, 209, 214, 221, 284, 314, 316, 318, 337, 355, 358, 365], "alpha": [18, 19, 21, 23, 51, 52, 74, 79, 80, 286, 317, 318], "float": [18, 19, 20, 21, 22, 23, 51, 52, 53, 54, 55, 56, 76, 79, 80, 99, 103, 106, 113, 118, 119, 120, 130, 134, 135, 136, 138, 140, 141, 142, 153, 162, 168, 169, 170, 199, 201, 240, 244, 245, 246, 248, 253, 254, 268, 269, 276, 277, 279, 280, 286, 303, 304, 305, 306, 317, 318, 330, 331, 342, 343, 345, 346, 363, 365, 366], "input_tensor_c": [20, 21, 22, 23, 171, 205, 355, 356], "tensor3": [20, 21, 22, 23, 170, 171, 205, 355, 356], "cluster_axi": [24, 260], "mesh_devic": [24, 98, 260, 365], "meshdevic": [24, 83, 84, 119, 120, 234, 235, 260, 334, 335, 359, 360, 365], "num_link": [24, 98, 260], "num_work": [24, 98, 260], "num_buffers_per_channel": [24, 98, 260], "topologi": [24, 98, 260, 368], "ring": [24, 98, 260], "gather": [24, 98], "across": [24, 98, 128, 260, 365, 370, 371], "dimens": [24, 28, 57, 59, 60, 119, 124, 128, 129, 150, 207, 208, 212, 213, 234, 239, 240, 248, 249, 250, 260, 263, 274, 275, 301, 302, 315, 320, 321, 335, 337, 338, 341, 342, 343, 344, 354, 359, 363, 365, 366, 371], "meshtensor": [24, 260], "axi": [24, 260, 274, 366], "correspond": [24, 81, 82, 260, 343, 365, 366], "line": [24, 260, 384], "mesh": [24, 118, 260, 335, 337, 368], "applic": [24, 78, 260], "guid": [24, 260, 367, 368], "blob": [24, 260, 368, 386], "main": [24, 260, 369, 372, 384, 386, 387], "tech_report": [24, 260], "20mesh": [24, 260], "20of": [24, 260], "20devic": [24, 260], "20with": [24, 260], "20tt": [24, 260], "link": [24, 98, 260], "worker": [24, 98, 236, 260, 335, 365, 382, 383], "per": [24, 98, 260, 351, 366, 384], "full_tensor": [24, 98, 260], "randn": [24, 29, 68, 82, 84, 98, 117, 118, 128, 175, 207, 210, 235, 257, 260, 334, 335, 336, 337, 349, 360, 363, 365, 381, 382, 386], "32": [24, 57, 59, 60, 68, 106, 117, 119, 124, 128, 129, 175, 207, 231, 232, 233, 234, 237, 240, 248, 250, 257, 263, 273, 274, 285, 301, 302, 321, 334, 335, 336, 349, 359, 363, 365, 366, 371, 380, 381, 383, 384, 385, 387], "256": [24, 98, 210, 260, 385, 386], "physical_device_id": [24, 98, 260, 380, 381, 382, 383, 384, 385], "get_t3k_physical_device_ids_r": [24, 98, 260], "open_mesh_devic": [24, 98, 260], "meshshap": [24, 98, 260], "ttnn_tensor": [24, 337, 380], "input_dtyp": [24, 98, 260], "mem_config": [24, 98, 260, 365], "mesh_mapp": [24, 29, 118], "shardtensor2dmesh": 24, "mesh_shap": 24, "end": [27, 73, 153, 170, 229, 301, 352, 362, 365, 366, 370, 382, 384], "dram_memory_config": [27, 57, 83, 84, 175, 207, 371], "inclus": [27, 365, 371], "exclus": [27, 238], "consecut": [27, 371], "evenli": 27, "space": [27, 366, 371], "within": [27, 43, 46, 210, 362, 365, 366, 371, 372], "float32": [27, 83, 84, 103, 121, 147, 163, 246, 359, 360, 361, 365, 370, 371, 380, 385, 387], "print": [27, 29, 59, 83, 84, 118, 119, 120, 175, 206, 207, 234, 235, 236, 240, 272, 274, 288, 301, 302, 335, 337, 359, 360, 363, 365, 366, 370, 371, 380, 381, 382, 384, 386, 387], "00000": [27, 380], "row_major": [27, 28, 67, 83, 84, 118, 119, 120, 232, 233, 234, 332, 333, 350, 352, 359, 360, 363, 365, 366, 370, 380, 381, 385], "indic": [28, 81, 82, 231, 301, 352, 365, 366], "currenli": 28, "must": [28, 82, 223, 247, 253, 275, 301, 332, 333, 338, 350, 352, 363, 365, 366, 368, 371], "uint32": [28, 81, 82, 147, 150, 365, 370, 371, 380], "reduc": [28, 260, 338, 366], "cache_file_nam": 29, "pathlib": [29, 78, 176], "path": [29, 78, 176, 370, 384, 386, 387], "callabl": [29, 217, 218], "tensortomesh": [29, 118], "use_device_til": 29, "serial": 29, "flag": [29, 366, 384], "toggl": 29, "whether": [29, 117, 175, 207, 210, 217, 218, 332, 333, 338, 343, 344, 350, 352, 366], "truncat": [29, 348, 366], "mantissa": 29, "bit": [29, 366], "bfp": 29, "format": [29, 113, 114, 118, 210, 351, 369], "rais": [29, 337, 385], "runtim": 29, "error": [29, 161, 206, 207, 220, 337, 362], "rte": 29, "bfp8": [29, 380], "bfp4": 29, "375": [29, 118, 383], "30469": [29, 118], "714844": [29, 118], "761719": [29, 118], "53125": [29, 118], "652344": [29, 118], "sine": [31, 33, 100, 300], "round_mod": [34, 73, 74, 253, 254], "assign": [34, 363], "other_tensor": [34, 74], "mode": [34, 41, 74, 88, 90, 94, 117, 125, 126, 161, 210, 220, 254, 281, 366, 380, 381, 382, 383, 384, 385], "arctan": 36, "left": [36, 73, 121, 163, 285, 365, 366, 369], "right": [36, 73, 121, 163, 285, 365, 366], "tangenr": 38, "tangent": [40, 327], "approxim": [41, 88, 90, 94, 125, 126, 281], "bias_gelu": 41, "bia": [41, 130, 162, 175, 276, 361, 366, 382, 385], "integ": [42, 43, 45, 46, 47, 238, 343, 366], "ha": [43, 46, 207, 217, 218, 323, 344, 361, 362, 363, 365, 366, 370, 371, 380, 386, 387], "shift_bit": [43, 46], "31": [43, 46, 363, 365, 384, 386], "2147483647": 44, "wormhole_b0": [44, 49, 103, 108, 199, 253, 368], "major": [50, 104, 106, 107, 109, 116, 231, 278, 293, 348, 351, 365, 371, 380, 381], "formula": [52, 80, 111, 135, 169, 170, 201, 270, 304, 306], "min_tensor": [53, 55], "max_tensor": [53, 55], "doe": [57, 118, 337, 362, 366, 370], "alter": 57, "width": [57, 67, 105, 106, 119, 128, 207, 210, 234, 239, 335, 341, 359, 366, 370], "height": [57, 59, 67, 105, 106, 119, 128, 207, 210, 234, 239, 335, 359, 366, 370, 371], "current": [57, 59, 67, 217, 218, 343, 366, 368, 371, 372, 380, 387], "adjust": [57, 303], "necessari": [57, 362], "param": [57, 77, 250, 302, 366, 386], "target": [57, 113, 114, 334, 362, 365, 366, 368], "l1_memory_config": [57, 361, 371, 381, 382, 387], "compute_kernel_config": [57, 100, 162, 175, 207, 276, 302, 342, 343], "remov": [58, 337, 352, 365, 380, 383, 384, 386], "success": 58, "group": [59, 366, 385], "concaten": [59, 60, 341, 344, 366], "greater": [59, 71, 105, 106, 122, 123, 131, 132, 173, 223, 366, 387], "than": [59, 71, 105, 106, 122, 123, 131, 132, 166, 167, 173, 202, 203, 207, 223, 366, 368, 370, 382, 387], "partit": 59, "interleav": [59, 336, 344, 365, 366, 371], "independ": 59, "altern": [59, 207, 387], "recombin": 59, "convolut": [59, 210, 366, 385], "residu": 59, "64": [59, 67, 68, 117, 124, 129, 175, 207, 240, 257, 263, 301, 302, 321, 334, 335, 336, 365, 371, 382, 383, 384, 385, 387], "conjug": 61, "core_grid": [67, 130, 175, 207, 361, 381, 382], "coregrid": [67, 130, 175, 207, 381, 382], "corerang": 67, "strategi": [67, 78, 207, 365, 366, 370, 371, 384], "shardstrategi": 67, "orient": [67, 371], "shardorient": 67, "halo": [67, 351], "use_height_and_width_as_shard_shap": 67, "spec": [67, 365, 366], "distribut": [67, 78, 175, 207, 371], "l1": [67, 175, 207, 236, 336, 365, 371, 382], "either": [67, 207, 335, 362, 366, 368, 371, 372], "travers": 67, "overlap": 67, "seen": [67, 380, 381], "math": [67, 370, 384], "320": [67, 366], "forc": [68, 383], "resourc": [68, 384], "explicitli": [68, 380], "even": [68, 206, 207, 363, 366], "degre": [70, 252], "radian": [70, 252], "accurate_mod": 73, "begin": [73, 153, 229, 366, 370], "text": [73, 153, 229, 237, 362, 366], "_mode": 73, "non": [73, 117, 207, 210, 231, 247, 279], "divid": [74, 339, 340], "denomin": [76, 253, 366], "downsample_param": 77, "2d": [77, 128, 207, 353, 366, 371], "spatial": [77, 128, 353, 366], "assum": [77, 100, 114, 323, 353, 372], "form": [77, 353], "w": [77, 105, 106, 210, 353, 365, 366, 370], "conv": [77, 385], "stride": [77, 210, 366, 380, 385], "file_nam": [78, 176, 386, 387], "dict": [78, 217, 218, 365, 386], "dump": [78, 217, 383, 386, 387], "save": [78, 384, 386], "padding_idx": 81, "embeddings_typ": 81, "embeddingstyp": 81, "gener": [81, 99, 106, 207, 241, 362, 366, 368, 370, 380, 381, 382, 383, 384, 385], "retriev": 81, "word": 81, "token": [81, 160, 343, 384], "106445": 81, "988281": 81, "59375": 81, "212891": 81, "964844": 81, "199219": 81, "996094": 81, "78362e": 81, "38": [81, 384], "89785e": 81, "39": [81, 380, 381, 382, 383, 384, 385, 386], "04479e": 81, "25815e": 81, "71833e": 81, "59995e": 81, "60398e": 81, "83671e": 81, "22242e": 81, "88263e": 81, "35917e": 81, "49994e": 81, "output_gradient_tensor": 82, "respect": [82, 207, 371], "extract": 82, "vocabulari": 82, "previou": [82, 363], "batch_siz": [82, 128, 210, 341, 344, 361, 382, 383, 384, 385], "seq_len": [82, 100], "embedding_dim": 82, "num_embed": 82, "1024": [82, 121, 163, 381], "4096": [82, 365], "3200": 82, "input_shap": [82, 210, 385], "input_index": 82, "randint": [82, 363, 383], "weights_shap": 82, "weights_ttnn": 82, "grad_shap": 82, "grad_data": 82, "uniniti": [83, 84], "bfloat_8": 83, "21": [83, 384, 386], "67": 83, "whose": [84, 335], "desir": [84, 105, 106, 113, 114, 118, 335, 336, 337], "87": 84, "45": [84, 324, 325, 384], "22": [84, 384], "60": [84, 384], "75": 84, "25": [84, 335, 370, 384, 386], "equal": [85, 86, 122, 123, 153, 166, 167, 225, 226, 366, 387], "place": [86, 123, 132, 159, 160, 167, 203, 226, 340, 365, 371], "input_a": [86, 123, 132, 150, 167, 203, 208, 212, 213, 226, 315, 320, 354], "input_b": [86, 123, 132, 150, 167, 203, 226], "_tensor_i": [87, 127, 133, 172, 193, 204, 230], "fast_and_approximate_mod": [88, 90, 94, 125, 281], "exponenti": 97, "num_devic": [98, 260], "tt_input_tensor": [98, 260], "enumer": [98, 260], "append": [98, 260, 370, 386], "get_devic": [98, 260], "input_tensor_mesh": [98, 260], "aggregate_as_tensor": [98, 260], "seed": [99, 386], "probabl": 99, "scale": [99, 136, 138, 286, 303, 342, 343, 366], "rng": 99, "averag": [99, 128, 366, 370, 384], "total_elem": 99, "124": 99, "prob": 99, "cod_cach": 100, "sin_cach": 100, "token_index": 100, "devicecomputekernelconfig": [100, 162, 175, 207, 276, 342, 343], "rotari": 100, "cos_cach": 100, "token_idx": 100, "transpos": [100, 175, 207, 240, 344, 351], "head_dim": 100, "fill_valu": [103, 119, 120, 366], "hone": [105, 106], "wone": [105, 106], "val_hi": [105, 106], "val_lo": [105, 106], "count": [105, 106, 365, 370, 384], "ye": [105, 106, 365, 366], "high": [105, 106, 368, 387], "region": [105, 106, 236], "nchw": 106, "hw": [106, 366], "rest": 106, "hfill": 106, "wfill": 106, "hi": 106, "lo": 106, "expect": [106, 210, 344, 362, 365, 366, 369, 380], "low": 106, "divis": [110, 124, 129, 253, 263, 321, 365, 366, 371], "rounding_mod": [111, 253, 270], "wh_b0": [111, 270], "padded_shap": [113, 239], "pad_valu": [113, 118, 240, 275, 333, 365], "target_layout": [113, 114, 365, 366], "target_mem_config": [113, 114], "padded_tensor": 113, "output_mem_config": [113, 114, 384], "unpadded_tensor": 114, "cq_id": [117, 118, 323, 334, 337, 365, 366], "sub_device_id": [117, 118, 323, 334, 337, 365, 366], "subdeviceid": [117, 118, 323, 334, 337, 365, 366], "complet": [117, 323, 366], "wait": [117, 118, 323, 334, 337, 365, 366, 370], "stall": [117, 334, 365, 366], "cq": [117, 334, 365, 366], "finish": [117, 334, 365, 366, 370, 384], "device_tensor": [117, 334], "host_tensor": 117, "itself": [118, 365], "twice": [118, 370], "purpos": [118, 362, 369, 371], "mapper": 118, "uint16": [119, 147, 234, 338, 359, 371], "filled_tensor": [119, 120], "templat": [120, 235, 360, 370], "greatest": 121, "divisor": [121, 254], "uint8": [126, 147, 282, 301], "adapt": [128, 366], "over": [128, 130, 162, 276, 302, 342, 343, 366], "signal": [128, 366, 384], "compos": [128, 337, 366], "sever": [128, 366], "plane": [128, 366, 385], "epsilon": [130, 162, 276, 366], "input_mask": 130, "inplac": [130, 192, 194, 196, 198, 385], "output_layout": [130, 366], "num_group": [130, 366], "1e": [130, 153, 162, 276, 366], "lambd": [134, 135, 305, 306], "lambda": [135, 306, 361, 383, 385], "16666667": [136, 138], "shift": [136, 138, 366], "min_val": 140, "max_val": 140, "sfpu": 147, "shouldn": 147, "instead": [147, 269, 366, 380, 382, 386], "lower": [147, 368], "float16": [147, 380], "imaginari": 149, "batch_id": 150, "replac": [150, 330], "denot": [150, 366], "boolean": [151, 152, 338, 366], "rtol": 153, "05f": 153, "atol": 153, "08f": 153, "equal_nan": 153, "leq": 153, "otherwis": [153, 323, 338, 365, 382, 387], "rel": 153, "toler": 153, "absolut": [153, 161, 366], "nan": [153, 384], "treat": [153, 207], "comparison": [153, 369], "batch_index": 159, "popul": [159, 217, 370], "update_index": 160, "batch_offset": 160, "updat": [160, 362, 369, 387], "input_refer": [161, 220], "input_predict": [161, 220], "residual_input_tensor": [162, 276], "program_config": [162, 175, 207, 276, 339, 340, 342, 343], "programconfig": [162, 276], "least": [163, 207, 370], "recommend": [165, 361, 368, 380, 387], "80": [165, 368], "pcc": [165, 362, 369], "degrad": 165, "outsid": 165, "negative_slop": [168, 169], "slope": 168, "leaki": 168, "01": 169, "point": [170, 303, 363, 366, 370], "transpose_a": [175, 207], "transpose_b": [175, 207], "matmulprogramconfig": [175, 207], "output_til": [175, 207], "limit": [175, 362, 366], "behaviour": [175, 207], "grid": [175, 207, 342, 343, 350, 361, 371], "128": [175, 207, 387], "load": [176, 383, 384, 386], "whb0": [178, 182, 271], "logarithm": [184, 223], "AND": [191, 192, 366], "OR": [195, 196, 275, 366], "land": [197, 198], "lnot": [197, 198], "lor": [197, 198], "xor": [198, 366], "ep": [199, 201, 366], "logitep": 201, "context": [206, 261, 262], "manag": [206, 261, 262, 362, 368], "exit": 206, "occur": 206, "product": [207, 342, 343], "therefor": [207, 380, 382], "dimension": [207, 223, 366, 371, 380], "addit": [207, 361, 366, 368], "front": [207, 370, 386], "These": [207, 362, 363, 366, 368, 372, 387], "allow": [207, 362, 365, 366, 369], "possibl": [207, 337, 361, 366, 383], "although": 207, "combin": 207, "most": [207, 380], "variou": [207, 368], "align": [207, 365, 366, 368, 370], "appropri": [207, 362, 368], "abov": [207, 368], "criteria": 207, "messag": [207, 370], "unexpect": [207, 366], "obviou": [207, 380], "except": [207, 366, 380, 382, 384], "scenario": 207, "relat": [207, 366], "swap": 207, "j": 207, "implicitli": 207, "extend": 207, "patch": 207, "leverag": [207, 366], "accord": [207, 240, 272], "1d": [207, 231, 248, 384], "look": [207, 338, 362, 367, 371, 384, 386], "determin": [207, 217, 218, 366, 380, 381, 382, 383, 384, 385], "n_size": 207, "m_size": 207, "k_size": 207, "p": [207, 371], "though": [207, 363], "differ": [207, 313, 365, 371, 380, 387], "constraint": [207, 380], "chosen": [207, 370, 386], "carefulli": 207, "fix": 207, "problem": 207, "input_h": 210, "input_w": 210, "kernel_s": [210, 366, 385], "dilat": [210, 366, 385], "applied_shard_schem": 210, "tensormemorylayout": [210, 365, 366, 385], "ceil_mod": [210, 366], "window": [210, 366], "nhw": [210, 351], "scheme": 210, "convolv": [210, 366], "createdevic": [210, 363, 365, 385], "l1_small_siz": [210, 236, 382, 383, 385], "8192": [210, 382, 383], "kernel_h": 210, "kernel_w": 210, "stride_h": 210, "stride_w": 210, "pad_h": [210, 239], "pad_w": [210, 239], "dilation_h": 210, "dilation_w": 210, "nchw_shape": 210, "40": [210, 384], "in_n": 210, "in_c": 210, "in_h": 210, "in_w": 210, "input_perm": 210, "input_reshap": 210, "tt_input": 210, "tt_input_dev": 210, "tt_output": [210, 363, 365], "block_shard": [210, 385], "20": [216, 303, 304, 368, 370, 384, 386], "initialize_model": [217, 218, 361, 383, 385], "model_nam": [217, 218, 361, 383, 384, 385], "convert_to_ttnn": [217, 218, 361], "custom_preprocessor": [217, 218, 361, 383, 385], "parameterdict": [217, 218], "prefix": [217, 218], "run_model": [217, 385], "reader_patterns_cach": 217, "disabl": [217, 218, 366, 380, 381, 382, 383, 384, 385, 387], "doesn": [217, 218, 380], "invalid": [217, 218], "alreadi": [217, 218, 236, 363, 372, 384, 386], "been": [217, 218, 323, 362, 386], "preprocessor": [217, 218], "put": [217, 218, 361, 380, 382, 385], "submodul": [217, 218, 368], "appear": [217, 218], "ttnn_module_arg": [217, 385], "tmp": [217, 380, 381, 382, 383, 385, 386], "model_graph": 217, "svg": [217, 385, 386, 387], "reader": 217, "avoid": [217, 303, 370], "recomput": [217, 366], "multivari": 223, "gamma": [223, 366], "mvlgamma": 223, "5f": 223, "_float": 229, "neq": 229, "well": [231, 365, 369], "trace_region_s": 236, "dispatch_core_config": 236, "dispatchcoreconfig": 236, "0x7f919486c830": 236, "small": [236, 384], "default_l1_small_s": 236, "default_trace_region_s": 236, "dispatch_core_typ": [236, 382, 383], "dispatchcoretyp": [236, 382, 383], "0x7fbac5bfc1b0": 236, "otim": 237, "output_tensor_shap": [238, 333, 365], "input_tensor_start": [238, 365], "locat": [238, 366, 367, 370, 384, 387], "mutual": 238, "along": [238, 249, 250, 301, 302, 338, 341, 365, 366, 368, 371], "describ": [238, 362, 366], "unpadded_shap": 239, "pad_c": 239, "pad_n": 239, "legacyshap": 239, "tthe": 240, "broken": 240, "garbag": 240, "cartesian": 241, "theta": 241, "k": [243, 338, 342, 343, 366, 381], "decim": [243, 277], "coeff": 245, "coeffici": [245, 362], "sum_": [245, 366], "polynomi": 245, "expon": [246, 247, 279, 280, 363], "power": [247, 349, 363], "length": [248, 342, 343], "arrai": 248, "all_dimens": [249, 250], "particular": [250, 361, 368, 380, 387], "actual": [253, 363, 371, 380], "numer": [253, 303, 366], "new_tensor": 257, "my_memory_config": 257, "reduce0scatt": 260, "being": [261, 262, 370, 371], "upper_limit": 268, "cap": 268, "lower_limit": 269, "carri": 269, "modulu": 270, "repeat_dim": 272, "repetit": [272, 274, 366], "he": 274, "fit": 274, "expand": 274, "torch_input_tensor": [274, 385, 387], "torch_result": 274, "cost": [275, 366], "view": [275, 387], "condit": [275, 362], "met": 275, "new_shap": 275, "kwtype": 275, "upto": 279, "28": [279, 371, 384, 386], "posit": [279, 343, 363, 366], "subract": 284, "revers": 284, "0507": 286, "67326": 286, "modifi": [288, 303, 363, 380], "short": [288, 384, 387], "slice_start": 301, "slice_end": 301, "slice_step": 301, "input_tensor_shap": [301, 365], "0310059": 302, "beta": [303, 304, 366], "By": [303, 369, 381], "steep": 303, "higher": [303, 368, 370, 371], "steeper": 303, "approach": [303, 361, 369, 387], "hard": [303, 380], "larg": [303, 361, 383], "improv": [303, 362], "stabil": [303, 366, 369], "synchron": [323, 387], "associ": 323, "ran": [323, 370, 382], "chip": 323, "queu": 323, "use_multicor": [332, 333, 350, 352], "multi_devic": [334, 365], "organ": [335, 362, 371], "becom": 335, "thread": [335, 365, 384, 387], "42188": 335, "398438": 335, "torch_rank": [337, 387], "mesh_compos": 337, "meshtotensor": 337, "Will": 337, "squeez": [337, 380, 381, 382, 383, 385], "reach": 337, "torch_tensor": [337, 380], "3008": 337, "8438": 337, "3242": 337, "9023": 337, "5820": 337, "5312": 337, "largest": [338, 366], "sort": 338, "smallest": [338, 366], "sure": [338, 372, 387], "bfloat8": 338, "head_siz": [339, 340, 341, 344, 382], "attention_mask": [339, 340, 382], "softmaxprogramconfig": [339, 340], "softmaxdefaultprogramconfig": [339, 340], "causal_mask": [339, 340], "mask": [339, 340, 343], "causal": [339, 340, 342], "num_head": [341, 344, 382], "sequence_s": [341, 344, 361, 382, 383, 384], "input_tensor_q": [342, 343], "input_tensor_k": [342, 343], "input_tensor_v": [342, 343], "attn_mask": [342, 343], "is_casu": 342, "sdpaprogramconfig": [342, 343], "dot": [342, 343], "mimick": 342, "flashattent": 342, "accept": [342, 343, 362, 369], "q": [342, 343], "parallel": [342, 343, 366, 370, 384], "nqh": 342, "dh": [342, 343], "nkv": [342, 343], "impli": 342, "is_caus": 343, "cur_po": 343, "cur_pos_tensor": 343, "decod": [343, 386], "flash": [343, 368], "mqa": 343, "sdpamulticoreprogramconfig": 343, "nh": 343, "pnh": 343, "skip": [343, 380, 381, 382, 383, 384, 385, 386], "kv_input_tensor": 344, "num_kv_head": 344, "transpose_kei": 344, "hidden_s": [344, 361, 382, 383], "Then": [344, 361], "score": [344, 384], "q1": 344, "k1": 344, "v1": [344, 368], "qn": 344, "kn": 344, "vn": 344, "cat": [344, 382, 386], "contigu": [344, 366, 380], "num": 344, "diagon": [345, 346], "ops_chain": 349, "unarywithparam": 349, "chain": 349, "unaryoptyp": [349, 366], "use_pack_until": [350, 352], "sub_core_grid": 350, "corerangeset": 350, "padding_config": 351, "local_config": 351, "remote_config": 351, "pad_val": 351, "ncores_nhw": 351, "max_out_nsticks_per_cor": 351, "remote_read": 351, "transpose_mcast": 351, "construct": [351, 365, 387], "local": [351, 361, 362, 371], "remot": 351, "nstick": 351, "mcast": 351, "output_tensor_end": [352, 365], "scale_factor": [353, 366], "array2d": 353, "algorithm": [353, 366], "nearest": [353, 366], "cdot": 357, "basi": 361, "re": [361, 366, 367, 381], "rewritten": 361, "bert": [361, 367, 383, 384], "modeling_bert": [361, 383], "bertintermedi": 361, "class": [361, 362, 365, 366, 370, 371, 384, 385, 386], "super": [361, 385], "dens": 361, "intermediate_s": 361, "forward": [361, 366, 385], "hidden_st": [361, 382, 383], "tdd": 361, "torch_bert": 361, "utility_funct": 361, "torch_random": 361, "utils_for_test": 361, "assert_with_pcc": 361, "mark": [361, 362], "parametr": 361, "phiyodr": [361, 383], "finetun": [361, 383], "squad2": [361, 383], "384": [361, 382, 383], "test_bert_intermedi": 361, "manual_se": [361, 380, 381, 382, 385, 386, 387], "bertconfig": [361, 383], "from_pretrain": [361, 383, 386], "eval": [361, 383, 384, 385, 386], "torch_hidden_st": [361, 382], "torch_output": [361, 382], "_": [361, 370, 382, 386], "bert_intermedi": 361, "9999": [361, 380, 381, 382, 383, 385, 387], "dictionari": 361, "turn": 361, "ttnn_bert": [361, 383], "999": 361, "bias": [361, 366, 382], "someth": 361, "ttnn_optimized_bert": [361, 383], "isinst": 361, "preprocess_linear_weight": [361, 382], "preprocess_linear_bia": [361, 382], "ff1_weight": 361, "ff1_bia": 361, "best": [361, 380], "integr": [361, 362, 363, 366], "incredibli": 362, "excit": 362, "exploratori": 362, "freedom": 362, "try": [362, 368, 380, 384], "showcas": 362, "few": [362, 371, 380], "question": 362, "answer": 362, "see": [362, 366, 368, 369, 380, 384, 386], "highlight": [362, 371], "successfulli": [362, 372, 384, 386], "migrat": [362, 380, 381, 382, 383, 385, 387], "good": 362, "documen": 362, "credit": 362, "author": 362, "might": [362, 366, 381], "encount": 362, "demonstr": [362, 370], "adequ": 362, "achiev": [362, 369], "pearson": 362, "correl": [362, 366], "ci": 362, "pipelin": [362, 370], "unit": [362, 366], "metric": 362, "meet": 362, "accuraci": 362, "continu": [362, 369], "against": [362, 387], "upon": 362, "everi": [362, 365, 368, 370, 382, 387], "commit": [362, 384], "ongo": 362, "complianc": 362, "catch": 362, "regress": 362, "earli": 362, "collect": [362, 370, 372, 384], "usag": [362, 368], "varieti": [362, 366], "measur": 362, "special": [362, 366, 371], "run_device_perf_model": 362, "annot": 362, "models_device_performance_bare_met": 362, "schedul": 362, "clear": [362, 369, 380, 381, 382, 383, 384, 385], "incorpor": 362, "autom": 362, "extern": [362, 369, 371], "servic": 362, "impact": 362, "run_perf_models_oth": 362, "run_perf_models_llm_javelin": 362, "run_perf_models_cnn_javelin": 362, "models_performance_bare_met": 362, "run_demos_single_card_n150_test": 362, "run_demos_single_card_n300_test": 362, "run_t3000_demo_test": 362, "test_ttnn_functional_resnet50": 362, "resnet50testinfra": 362, "setup": [362, 367, 368, 384, 386], "handl": [363, 380], "machin": [363, 365, 366, 370, 372, 386], "send": [363, 365, 366], "__name__": 363, "__main__": [363, 384], "pci": [363, 380, 381, 382, 383, 384, 385], "slot": 363, "tt_devic": [363, 365, 366], "py_tensor": [363, 365], "tt_tensor": [363, 365, 366], "tolist": [363, 365], "tt_relu_out": 363, "closedevic": 363, "power_fp": 363, "suppli": [363, 365, 366], "lastli": 363, "fallback_op": [363, 366], "py_tensor_exp": 363, "py_relu_out": 363, "get_legacy_shap": 363, "py_pow_out": 363, "tt_pow_out": 363, "behav": [363, 366], "regular": 363, "hood": 363, "tt_silu_out": 363, "tt_exp_out": 363, "leav": 363, "anyth": 363, "manipul": 365, "sent": 365, "receiv": [365, 370], "platform": [365, 367, 384], "ttdnn": 365, "util": [365, 380, 381, 386], "z": [365, 366, 370, 386], "nor": 365, "subsect": 365, "insid": [365, 368, 387], "63": [365, 384], "65": [365, 384, 386], "66": 365, "127": [365, 384], "3968": 365, "3969": 365, "3970": 365, "4031": 365, "4032": 365, "4033": 365, "4034": 365, "4095": 365, "4097": 365, "4098": 365, "4159": 365, "4160": 365, "4161": 365, "6462": 365, "4223": 365, "8064": 365, "8065": 365, "8066": 365, "8127": 365, "8128": 365, "8129": 365, "8130": 365, "8191": 365, "95": 365, "1984": 365, "1985": 365, "2015": [365, 384], "33": [365, 381, 384], "96": [365, 384, 387], "97": [365, 384], "2016": 365, "2017": [365, 384, 386], "2047": 365, "2080": 365, "2081": 365, "2111": 365, "2144": 365, "2145": 365, "2175": 365, "4064": 365, "4065": 365, "fourth": [365, 366], "6111": 365, "6176": 365, "ownedstorag": [365, 366], "borrowedstorag": 365, "devicestorag": [365, 366], "pointer": 365, "That": [365, 371, 381], "underli": 365, "numpi": [365, 371, 384, 386], "reason": 365, "data_typ": [365, 382], "No": [365, 366], "bank": 365, "arg1": 365, "arg2": 365, "arg3": 365, "divisbl": [365, 366], "arg4": 365, "arg5": 365, "single_bank": 365, "memory_layout": [365, 366], "shard_spec": 365, "nullopt": [365, 385], "ptr": 365, "np": 365, "owned_buffer_for_uint8_t": 365, "owned_buffer_for_uint16_t": 365, "owned_buffer_for_int32_t": 365, "owned_buffer_for_uint32_t": 365, "owned_buffer_for_float32_t": 365, "owned_buffer_for_bfloat16_t": 365, "borrowed_buffer_for_uint8_t": 365, "borrowed_buffer_for_uint16_t": 365, "borrowed_buffer_for_int32_t": 365, "borrowed_buffer_for_uint32_t": 365, "borrowed_buffer_for_float32_t": 365, "borrowed_buffer_for_bfloat16_t": 365, "everywher": 365, "inp": 365, "tt_tensor_pad": 365, "npad": 365, "bottom": [365, 372], "storagetyp": 365, "uint8_t": 365, "ti": 365, "output_tensor_start": 365, "tt_tensor_unpad": 365, "nunpad": 365, "apart": 365, "restrict": 365, "eight": 365, "shardspec": 365, "dram_channel": 365, "rememb": 365, "py_output": 365, "unifi": 366, "tt_eager": [366, 384], "better": 366, "caller": 366, "launch": [366, 372], "plug": 366, "declar": 366, "newoper": 366, "simpleshap": 366, "programwithcallback": 366, "create_program": 366, "some_memb": 366, "optional_input_tensor": 366, "validate_with_output_tensor": 366, "programwithoptionaloutputtensor": 366, "box": [366, 368], "preferred_nam": 366, "parallelization_strategi": 366, "get_parallelization_strategi": 366, "parallelizationstrategyenum": 366, "enqueu": 366, "asynchron": 366, "reload": 366, "program_cach": 366, "disable_and_clear": 366, "entri": 366, "num_entri": 366, "cachabl": 366, "override_runtime_args_callback": 366, "input_buff": 366, "output_buff": 366, "src_dram_buff": 366, "dst_dram_buff": 366, "tt_metal_logger_typ": [366, 387], "tt_metal_logger_level": [366, 387], "inform": [366, 372], "1280": 366, "layoutconversiononhost": 366, "miss": [366, 387], "eltwiseunari": 366, "op_typ": 366, "_tt": 366, "mul": [366, 382], "ellipsi": 366, "output_on_devic": 366, "third": 366, "fewer": 366, "four": 366, "side": [366, 370, 380, 381, 382, 383, 384, 385], "connect": 366, "paper": 366, "separ": 366, "normalized_shap": 366, "layer": [366, 370, 385], "much": [366, 370, 381], "m": [366, 368, 381], "reflect": [366, 369], "replic": 366, "circular": 366, "align_corn": 366, "recompute_scale_factor": 366, "antialia": 366, "down": 366, "bilinear": 366, "bicub": 366, "trilinear": 366, "area": 366, "exact": [366, 371, 382], "center": 366, "corner": 366, "pixel": 366, "anti": 366, "alias": 366, "output_s": 366, "total": [366, 370], "known": 366, "sigma": 366, "logist": 366, "x_": 366, "x_i": 366, "sum_j": 366, "x_j": 366, "lie": 366, "in_channel": [366, 385], "out_channel": [366, 385], "padding_mod": 366, "simplest": 366, "c_": 366, "h_": 366, "w_": 366, "precis": 366, "n_i": 366, "_j": 366, "star": 366, "cross": 366, "learnabl": 366, "running_mean": 366, "running_var": 366, "num_batches_track": 366, "num_featur": 366, "momentum": 366, "affin": 366, "track_running_stat": 366, "4d": 366, "deep": 366, "network": 366, "intern": [366, 367], "covari": 366, "track": 366, "varianc": 366, "num_channel": 366, "lernabl": 366, "elementwise_affin": 366, "return_indic": 366, "channels_last": [366, 370], "reshape_2d": 366, "kh": 366, "kw": 366, "c_j": 366, "max_": 366, "ldot": 366, "implicit": 366, "infin": 366, "mod": 366, "dividend": 366, "bitwis": 366, "NOT": [366, 380, 381, 382, 383, 385], "immedi": [366, 368], "arithmet": 366, "operand": 366, "promot": 366, "behavior": 366, "undefin": 366, "keepdim": 366, "retain": 366, "argmin": 366, "fusion": 366, "togeth": 366, "fused_op": 366, "in_featur": 366, "out_featur": 366, "num_dim": 366, "moment": 366, "add_and_norm": 366, "flexibl": 366, "earlier": 366, "while": [366, 369], "ml": 367, "workload": 367, "falcon": 367, "7b": 367, "navig": 367, "mistral": 367, "llama2": 367, "70b": 367, "soon": 367, "t3000": [367, 368], "learn": [367, 371, 381, 384], "dive": 367, "deeper": 367, "jupyt": [367, 372, 384], "notebook": [367, 372, 384, 386], "tool": [368, 370, 384], "packag": [368, 383, 384, 386], "asset": 368, "tag": 368, "purchas": 368, "card": 368, "o": [368, 370, 380, 381, 382, 383, 384, 386], "kmd": 368, "smi": 368, "ubuntu": [368, 380, 381, 382, 383, 384, 385, 386], "04": [368, 386], "fw_pack": 368, "v80": 368, "v2": 368, "sudo": [368, 370], "install_depend": 368, "cmake": 368, "advanc": 368, "uniti": 368, "4d7730d3e2d22c51d62baa1bfed861b557d9a3c0": 368, "dockerfil": 368, "amd64": 368, "l9": 368, "l14": 368, "choos": 368, "matter": 368, "still": [368, 371], "lf": 368, "apt": 368, "repo": 368, "recurs": 368, "cd": [368, 370, 384], "foreach": 368, "fetch": 368, "pull": [368, 369], "highli": 368, "flow": [368, 370], "arch_nam": [368, 382, 383], "tt_metal_hom": [368, 370, 384], "build_met": [368, 370, 384], "blackhol": 368, "about": [368, 371, 381], "pip": [368, 384, 386], "highest": 368, "edit": [368, 384], "latest": [368, 370], "architectur": [368, 373, 376, 377, 387], "ie": 368, "choic": [368, 380], "wheel_fil": 368, "whl": [368, 384, 386], "governor": 368, "dev": [368, 384], "txt": [368, 384], "cpufrequtil": 368, "cpupow": 368, "frequenc": 368, "registri": 368, "ghcr": 368, "io": [368, 370], "rc": 368, "rm": 368, "hugepag": [368, 380, 381, 382, 383, 384, 385], "1g": 368, "bash": [368, 384], "python3": [368, 383, 384, 386], "verifi": [368, 369], "run_op_on_devic": 368, "visit": 368, "pandoc": [368, 384], "libtbb": 368, "libcapston": 368, "pkg": 368, "doxygen": 368, "intend": 369, "reliabl": 369, "simultan": 369, "fine": 369, "tune": 369, "themselv": [369, 371], "goal": 369, "ask": 369, "driven": 369, "popular": 369, "kent": 369, "beck": 369, "long": 369, "term": 369, "benefit": 369, "submit": 369, "label": [369, 371], "fulli": [369, 370], "branch": 369, "brief": 369, "4730": 369, "rst": 369, "referenc": [369, 384], "sweep": 369, "codeown": 369, "pr": 369, "comment": 369, "test_perf_resnet": 370, "test_perf_bare_met": 370, "0185": 370, "consol": 370, "similar": [370, 380, 382], "shorter": 370, "cli": 370, "explain": 370, "reset": 370, "tt_smi": 370, "tensix_reset": 370, "due": [370, 371, 380], "tensix": 370, "skew": 370, "timer": 370, "reboot": 370, "wh": 370, "analyz": 370, "1000": [370, 385, 386], "fixtur": 370, "ttl": 370, "dumpdeviceprofil": 370, "drop": 370, "around": 370, "120": [370, 384], "eighth": 370, "warn": [370, 380, 381, 382, 383, 384, 385], "mention": 370, "risc": 370, "faster": [370, 382], "those": 370, "analysi": 370, "affect": 370, "column": [370, 371, 384], "python_fallback": [370, 384], "tt_dnn_cpu": 370, "tt_dnn_devic": [370, 384], "global": [370, 384], "fidel": [370, 384], "field": 370, "lofi": [370, 385], "hifi2": 370, "hifi3": 370, "clock": 370, "stamp": 370, "durat": [370, 382, 384, 387], "nanosecond": 370, "end_t": 370, "start_t": 370, "fw": [370, 380, 381, 382, 383, 385], "cycl": 370, "earliest": 370, "core_frequ": 370, "marker": 370, "brisc": 370, "ncrisc": 370, "trisc0": 370, "trisc1": 370, "trisc2": 370, "cb": 370, "spent": 370, "cb_wait_front": 370, "reserv": 370, "cb_reserve_back": 370, "datamov": 370, "input_0_memori": 370, "dev_0_dram": 370, "dec_0_l1": 370, "tgz": 370, "filenam": [370, 386], "item": [370, 384], "aggreg": 370, "timestamp": 370, "32x32": 371, "bracket": 371, "obtain": [371, 384], "4x4": 371, "transit": 371, "2x2": 371, "illustr": 371, "byte": 371, "sizeof": 371, "owned_host_storag": 371, "borrowed_host_storag": 371, "device_storag": 371, "ideal": 371, "abstract": 371, "awai": 371, "compress": 371, "upper": 371, "remain": 371, "128x128": 371, "who": 371, "subset": 371, "know": 371, "understand": 371, "unshard": 371, "coordin": 371, "physic": 371, "pybind11_object": 371, "properti": 371, "certain": 372, "ramp": 372, "skillset": 372, "tree": 372, "lab": 372, "port": 372, "8888": 372, "hint": 372, "Be": 372, "alwai": [372, 380, 383, 384], "cell": 372, "central": 380, "sens": 380, "sram": 380, "concept": 380, "2024": [380, 381, 382, 383, 384, 385, 386, 387], "07": [380, 381, 382, 383, 385], "18": [380, 381, 382, 383, 384, 386], "48": [380, 383, 384], "818": 380, "136": [380, 381, 382, 383], "cache_path": [380, 381, 382, 383, 385], "posixpath": [380, 381, 382, 383], "home": [380, 381, 382, 383, 384, 385, 386], "comparison_mode_pcc": [380, 381, 382, 383, 385, 387], "enable_comparison_mod": [380, 381, 382, 383, 385, 387], "enable_detailed_buffer_report": [380, 381, 382, 383, 385, 387], "enable_detailed_tensor_report": [380, 381, 382, 383, 385, 387], "enable_fast_runtime_mod": [380, 381, 382, 383, 385, 387], "enable_graph_report": [380, 381, 382, 383, 385, 387], "enable_log": [380, 381, 382, 383, 385, 387], "enable_model_cach": [380, 381, 382, 383, 385], "model_cache_path": [380, 381, 382, 383, 385], "report_nam": [380, 381, 382, 383, 385, 387], "root_report_path": [380, 381, 382, 383, 385], "throw_exception_on_fallback": [380, 381, 382, 383, 385], "tmp_dir": [380, 381, 382, 383, 385, 386], "905": 380, "operation_decor": [380, 381, 382, 383, 385], "758": [380, 381, 382, 383], "906": 380, "907": [380, 382], "908": [380, 382], "909": [380, 382], "910": [380, 382], "911": [380, 382], "914": [380, 382], "915": [380, 382], "pearson_correlation_coeffici": [380, 381, 382, 383, 385], "919": [380, 382], "920": 380, "921": [380, 382], "unsqueeze_to_4d": [380, 381, 382, 383, 385], "922": [380, 382], "923": [380, 382], "924": [380, 382], "925": [380, 382], "926": [380, 382], "allocate_tensor_on_devic": [380, 381, 382, 383, 385], "copy_host_to_device_tensor": [380, 381, 382, 383, 385], "927": [380, 382], "928": [380, 382], "929": [380, 382], "930": [380, 382], "931": [380, 382], "934": [380, 382], "935": 380, "936": [380, 382, 383], "937": 380, "938": [380, 382], "941": [380, 382], "942": [380, 382], "943": [380, 382], "948": [380, 382], "949": [380, 382, 383], "950": [380, 382], "951": [380, 382, 383], "952": [380, 382], "953": [380, 382], "954": [380, 382], "955": [380, 382], "958": [380, 382], "959": 380, "960": [380, 382, 383], "f": [380, 381, 382, 384, 386, 387], "As": [380, 381], "1234": 380, "again": 380, "action": 380, "98300": 380, "11301": 380, "37592": 380, "64318": 380, "53437": 380, "59434": 380, "69190": 380, "04268": 380, "33346": 380, "20231": 380, "15127": 380, "58303": 380, "pick": 380, "80078": 380, "69531": 380, "71484": 380, "33398": 380, "60156": 380, "36523": 380, "73047": 380, "90625": 380, "59766": 380, "83203": 380, "61719": 380, "53516": 380, "effici": [380, 381], "transfer": 380, "nshape": 380, "nlayout": 380, "21680": 380, "24316": 380, "19336": 380, "40625": 380, "81641": 380, "50781": 380, "09961": 380, "54688": 380, "70703": 380, "93359": 380, "06787": 380, "75781": 380, "insert": 380, "cale": 380, "info": [380, 381, 382, 383, 384, 385, 386], "49": [380, 384, 386], "027": [380, 381], "silicondriv": [380, 381, 382, 383, 384, 385], "detect": [380, 381, 382, 383, 384, 385], "040": 380, "init_detect_tt_device_numanod": [380, 381, 382, 383, 384, 385], "numanodeset": [380, 381, 382, 383, 384, 385], "pci_bus_id": [380, 381, 382, 383, 384, 385], "0000": [380, 381, 382, 383, 384, 385], "00": [380, 381, 382, 383, 384, 385, 386], "041": 380, "bind_area_memory_nodeset": [380, 381, 382, 383, 384, 385], "unabl": [380, 381, 382, 383, 384, 385], "numanod": [380, 381, 382, 383, 384, 385], "membind": [380, 381, 382, 383, 384, 385], "ttsilicondevic": [380, 381, 382, 383, 384, 385], "init_hugepag": [380, 381, 382, 383, 384, 385], "bind_area_to_memory_nodeset": [380, 381, 382, 383, 384, 385], "fail": [380, 381, 382, 383, 384, 385], "ch": [380, 381, 382, 383, 384, 385], "effect": [380, 381, 382, 383, 384, 385], "decreas": [380, 381, 382, 383, 384, 385], "893": [380, 381, 382, 383, 384, 385], "082": 380, "ethernet": [380, 381, 382, 383, 385], "ai": [380, 381, 382, 383, 384, 385], "clk": [380, 381, 382, 383, 384, 385], "800": [380, 381, 382, 383], "mhz": [380, 381, 382, 383, 384, 385], "torch_input_tensor_a": [380, 387], "torch_input_tensor_b": [380, 387], "stai": 380, "unless": [380, 387], "explicit": 380, "figur": 380, "hang": 380, "properli": 380, "41": [381, 384], "903": 381, "989": [381, 382], "990": [381, 382], "991": 381, "992": 381, "993": 381, "994": 381, "995": 381, "996": 381, "001": 381, "002": 381, "003": 381, "004": 381, "005": 381, "006": 381, "007": 381, "008": 381, "009": 381, "010": 381, "011": 381, "012": 381, "013": 381, "015": 381, "016": 381, "017": 381, "018": 381, "020": 381, "021": 381, "022": 381, "028": 381, "029": 381, "030": 381, "031": 381, "032": 381, "033": 381, "035": 381, "036": 381, "037": 381, "053": 381, "066": 381, "067": 381, "094": 381, "repeatedli": 381, "enable_program_cach": [381, 382, 387], "torch_a": 381, "torch_b": 381, "longer": 381, "signific": 381, "aslo": 381, "why": 381, "conver": 381, "todo": 381, "75000": 381, "25000": 381, "50000": 381, "62500": 381, "effeci": 381, "further": 381, "enjoi": 381, "massiv": 381, "eth": [382, 383], "54": [382, 384], "821": 382, "912": 382, "939": 382, "976": 382, "55": [382, 384], "014": 382, "fashion": 382, "multi_head_attent": 382, "query_weight": 382, "query_bia": 382, "key_weight": 382, "key_bia": 382, "value_weight": 382, "value_bia": 382, "output_weight": 382, "output_bia": 382, "fallback_reshap": 382, "get_fallback_funct": [382, 387], "attention_scor": 382, "attention_prob": 382, "context_lay": 382, "self_output": 382, "torch_attention_mask": [382, 383], "torch_query_weight": 382, "torch_query_bia": 382, "torch_key_weight": 382, "torch_key_bia": 382, "torch_value_weight": 382, "torch_value_bia": 382, "torch_output_weight": 382, "torch_output_bia": 382, "00607705116272": 382, "250946044921875": 382, "ahead": 382, "optimized_multi_head_attent": 382, "fused_qkv_weight": 382, "fused_qkv_bia": 382, "self_output_weight": 382, "self_output_bia": 382, "fused_qkv_output": 382, "context_layer_after_concatenate_head": 382, "qkv": 382, "torch_qkv_weight": 382, "torch_qkv_bia": 382, "qkv_weight": 382, "qkv_bia": 382, "optimized_output": 382, "474989175796509": 382, "17": [382, 383, 384, 385, 386], "020017147064208984": 382, "magnitud": 382, "torch_optimized_output": 382, "assert": [382, 387], "allclos": 382, "19": [382, 384, 386], "ttnn_config_overrid": [383, 385, 387], "47": [383, 384], "183": 383, "133": [383, 384], "overrid": [383, 384, 387], "184": 383, "354": 383, "355": 383, "356": 383, "357": 383, "358": 383, "359": 383, "360": [383, 386], "362": 383, "366": 383, "367": 383, "368": 383, "369": 383, "370": 383, "371": 383, "372": 383, "373": [383, 384], "374": 383, "378": 383, "379": 383, "380": [383, 384], "381": 383, "383": 383, "385": 383, "390": 383, "391": 383, "392": 383, "393": 383, "394": 383, "395": 383, "396": 383, "397": 383, "398": 383, "399": 383, "set_verbosity_error": 383, "100": [383, 384], "412": 383, "442": 383, "447": 383, "googl": [383, 386], "bert_uncased_l": 383, "4_h": 383, "256_a": 383, "bertselfoutput": 383, "site": [383, 384, 386], "huggingface_hub": [383, 384], "file_download": 383, "1132": 383, "futurewarn": 383, "resume_download": 383, "resum": 383, "force_download": 383, "874": 383, "num_hidden_lay": 383, "bertforquestionansw": 383, "input_id": 383, "vocab_s": 383, "torch_token_type_id": 383, "torch_position_id": 383, "ttnn_bert_input": 383, "preprocess_input": 383, "bert_for_question_answ": 383, "50": 383, "339": 383, "manage_config": [383, 385, 387], "144": 383, "340": 383, "341": 383, "555": 383, "_paramet": [383, 385], "env": [383, 384, 385, 386], "34": [383, 384, 385], "343": 383, "634": 383, "636": 383, "147": [383, 384], "restor": [383, 385], "02": [383, 384], "947": 383, "unset": 384, "silent": 384, "nuke": 384, "jobserv": 384, "unavail": 384, "j1": 384, "parent": 384, "rule": 384, "artifact": 384, "conf": 384, "backend": 384, "pypi": [384, 386], "org": [384, 386], "satisfi": [384, 386], "setuptool": 384, "44": 384, "py3": 384, "kb": 384, "statu": 384, "metadata": [384, 386], "click": 384, "loguru": 384, "58": 384, "ipywidget": 384, "139": 384, "90": [384, 385], "db": 384, "290ab3a34f2ef0b5a0f89235dc2d40fea83e77de84ed2dc05c": 384, "pyyaml": [384, 386], "cp38": 384, "linux_x86_64": 384, "jupyterlab": 384, "mb": 384, "pyelftool": 384, "py2": 384, "174": 384, "4f": 384, "ed": 384, "863cf4386fe6db3c09333712009ec1c5146a36f3904b469d13": 384, "curtsi": 384, "91": 384, "b7": 384, "0c117d73912c6c2beb1eb0d7d6884f4e79e6e5b5e91eeb34f5": 384, "torchtrail": 384, "manylinux_2_12_x86_64": 384, "manylinux2010_x86_64": 384, "matplotlib": 384, "toolz": 384, "pillow": [384, 386], "manylinux_2_17_x86_64": 384, "manylinux2014_x86_64": 384, "panda": 384, "2bcpu": 384, "199": 384, "dash": 384, "rich": 384, "238": 384, "seaborn": 384, "293": 384, "plotli": 384, "traitlet": 384, "85": 384, "widgetsnbextens": 384, "ipython": [384, 385, 386], "798": 384, "widget": 384, "jupyterlab_widget": 384, "215": 384, "comm": 384, "async": 384, "lru": 384, "async_lru": 384, "tomli": 384, "python_vers": 384, "server": 384, "jupyter_serv": 384, "jinja2": [384, 386], "ipykernel": 384, "116": 384, "shim": 384, "notebook_shim": 384, "jupyterlab_serv": 384, "lsp": 384, "jupyter_lsp": 384, "68": 384, "23": 384, "53": 384, "importlib": [384, 386], "importlib_resourc": 384, "importlib_metadata": 384, "jupyter_cor": 384, "tornado": 384, "abi3": 384, "manylinux_2_5_x86_64": 384, "manylinux1_x86_64": 384, "435": 384, "bless": 384, "cwcwidth": 384, "92": 384, "pyrsist": 384, "121": 384, "graphviz": 384, "pypars": 384, "103": 384, "kiwisolv": 384, "contourpi": 384, "301": 384, "fonttool": 384, "dateutil": 384, "python_dateutil": 384, "247": [384, 385], "cycler": 384, "pytz": 384, "2020": 384, "505": 384, "extens": [384, 386], "typing_extens": 384, "html": 384, "compon": 384, "dash_html_compon": 384, "dash_tabl": 384, "flask": 384, "101": 384, "dash_core_compon": 384, "pygment": 384, "markdown": 384, "markdown_it_pi": 384, "84": 384, "tenac": 384, "24": [384, 386], "pickleshar": 384, "prompt": 384, "toolkit": 384, "37": 384, "prompt_toolkit": 384, "43": 384, "386": 384, "stack": 384, "stack_data": 384, "backcal": 384, "jedi": 384, "pexpect": 384, "sys_platform": 384, "win32": 384, "inlin": 384, "matplotlib_inlin": 384, "send2trash": 384, "anyio": 384, "termin": 384, "jupyter_server_termin": 384, "client": 384, "jupyter_cli": 384, "105": 384, "nbformat": 384, "77": 384, "nbconvert": 384, "257": [384, 385], "event": 384, "jupyter_ev": 384, "websocket": 384, "websocket_cli": 384, "pyzmq": 384, "prometheu": 384, "prometheus_cli": 384, "argon2": 384, "cffi": 384, "argon2_cffi": 384, "terminado": 384, "markupsaf": [384, 386], "26": 384, "nest": 384, "asyncio": 384, "nest_asyncio": 384, "psutil": 384, "cp36": 384, "288": 384, "debugpi": 384, "babel": 384, "62": 384, "jsonschema": 384, "json5": 384, "zipp": [384, 386], "platformdir": 384, "six": 384, "wcwidth": 384, "itsdanger": 384, "blinker": 384, "werkzeug": 384, "226": 384, "mdurl": 384, "pure": 384, "pure_ev": 384, "asttoken": 384, "27": [384, 386], "parso": 384, "ptyprocess": 384, "exceptiongroup": 384, "idna": [384, 386], "61": 384, "sniffio": 384, "fastjsonschema": 384, "defusedxml": 384, "beautifulsoup4": 384, "jupyterlab_pyg": 384, "pandocfilt": 384, "mistun": 384, "tinycss2": 384, "bleach": 384, "162": 384, "nbclient": 384, "rfc3986": 384, "rfc3986_valid": 384, "json": [384, 387], "logger": 384, "python_json_logg": 384, "rfc3339": 384, "rfc3339_valid": 384, "argon2_cffi_bind": 384, "86": 384, "urllib3": [384, 386], "charset": [384, 386], "charset_norm": 384, "141": 384, "certifi": [384, 386], "163": 384, "03": [384, 385], "jsonschema_specif": 384, "pkgutil": 384, "resolv": 384, "pkgutil_resolve_nam": 384, "attr": 384, "rpd": 384, "rpds_py": 384, "soupsiev": 384, "36": 384, "webencod": 384, "444": 384, "pycpars": 384, "118": 384, "pre_commit": 384, "202": 384, "black": 384, "twine": 384, "yamllint": 384, "docutil": 384, "570": 384, "sphinx": 384, "rtd": 384, "theme": 384, "sphinx_rtd_them": 384, "sphinxcontrib": 384, "email": 384, "sphinxcontrib_email": 384, "lxml": 384, "manylinux_2_24_x86_64": 384, "breath": 384, "35": 384, "nbsphinx": 384, "jqueri": 384, "sphinxcontrib_jqueri": 384, "3a": 384, "a8": 384, "3237a93e3a6261bd24edabf3277ca59f64c1710b3d8c7c72a0": 384, "317": 384, "timeout": 384, "pytest_timeout": 384, "6c": 384, "5706d21e6b4dff52e7af12bff9ca126a3f15beb4dff386aa29": 384, "jsbeautifi": 384, "dataset": 384, "462": 384, "xlsxwriter": 384, "152": 384, "tiktoken": 384, "tqdm": [384, 386], "sentencepiec": 384, "numba": 384, "56": [384, 385], "librosa": 384, "252": [384, 385], "timm": [384, 386], "549": 384, "opencv": 384, "headless": 384, "74": 384, "opencv_python_headless": 384, "cp37": 384, "diffus": [384, 386], "604": 384, "219": 384, "ftfy": 384, "gitpython": 384, "188": 384, "einop": 384, "multiprocess": 384, "70": 384, "py38": 384, "132": 384, "evalu": 384, "81": 384, "bert_scor": 384, "fsspec": [384, 386], "173": 384, "nodeenv": 384, "cfgv": 384, "98": 384, "virtualenv": 384, "pathspec": 384, "mypi": 384, "mypy_extens": 384, "pyproject_hook": 384, "render": 384, "readme_render": 384, "pkginfo": 384, "toolbelt": 384, "requests_toolbelt": 384, "keyr": 384, "images": 384, "serializinghtml": 384, "sphinxcontrib_serializinghtml": 384, "94": 384, "jsmath": 384, "sphinxcontrib_jsmath": 384, "snowballstemm": 384, "93": [384, 385], "htmlhelp": 384, "sphinxcontrib_htmlhelp": 384, "99": 384, "alabast": 384, "applehelp": 384, "sphinxcontrib_applehelp": 384, "devhelp": 384, "sphinxcontrib_devhelp": 384, "qthelp": 384, "sphinxcontrib_qthelp": 384, "ply": 384, "plumbum": 384, "iniconfig": 384, "pluggi": 384, "0rc8": 384, "editorconfig": 384, "respons": 384, "pyarrow": 384, "xxhash": 384, "194": 384, "huggingfac": [384, 386], "hub": [384, 386], "330": 384, "aiohttp": 384, "dill": 384, "110": 384, "regex": [384, 386], "2019": [384, 386], "777": 384, "filelock": [384, 386], "llvmlite": 384, "0dev0": 384, "soxr": 384, "soundfil": 384, "pooch": 384, "lazi": 384, "loader": 384, "lazy_load": 384, "scipi": 384, "joblib": 384, "302": 384, "audioread": 384, "scikit": 384, "scikit_learn": 384, "msgpack": 384, "534": 384, "gitdb": 384, "distlib": 384, "468": 384, "nh3": 384, "secretstorag": 384, "linux": 384, "jeepnei": 384, "jaraco": 384, "frozenlist": 384, "240": [384, 385], "async_timeout": 384, "aiosign": 384, "yarl": 384, "308": 384, "multidict": 384, "129": 384, "threadpoolctl": 384, "smmap": 384, "cryptographi": 384, "itertool": 384, "more_itertool": 384, "57": 384, "pyproject": 384, "uninstal": 384, "msg": 384, "t5": 384, "integration_test": 384, "test_perform": 384, "test_t5_for_conditional_gener": 384, "functional_t5": 384, "ttnn_functional_t5": 384, "09": [384, 385], "ops_devic": 384, "session": 384, "cachedir": 384, "pytest_cach": 384, "rootdir": 384, "configfil": 384, "ini": 384, "plugin": 384, "600": 384, "func_onli": 384, "670": 384, "681": 384, "08": 384, "684": [384, 385], "1202": 384, "llruntim": 384, "watcher": 384, "watch": 384, "109": 384, "465": 384, "ttnn_t5": 384, "6ba823894": 384, "149": 384, "484": 384, "487": 384, "216": 384, "489": 384, "721": 384, "359902381896973": 384, "07123565673828": 384, "722": 384, "102": 384, "44269247283137575": 384, "detach": 384, "summari": 384, "627": 384, "638": 384, "639": 384, "458": 384, "224": 384, "460": 384, "292": 384, "164": 384, "22393798828125": 384, "165": 384, "322504758834839": 384, "407821983919596": 384, "pd": 384, "glob": 384, "getenv": 384, "get_latest_report": 384, "base_path": 384, "latest_dir": 384, "listdir": 384, "isdir": 384, "getmtim": 384, "valueerror": [384, 385], "latest_profile_report": 384, "df": 384, "read_csv": 384, "2024_02_09_01_38_37": 384, "ops_perf_results_resnet_2024_02_09_01_38_37": 384, "output_0_w": 384, "output_0_z": 384, "output_0_i": 384, "output_0_x": 384, "output_0_layout": 384, "output_0_data": 384, "output_0_memori": 384, "depth": 384, "compileprogram": 384, "load_tensor_ttnn": 384, "137428381893955": 384, "137428382188762": 384, "294807": 384, "137428382500949": 384, "137428399402163": 384, "16901214": 384, "137428399802068": 384, "137428399873758": 384, "71690": 384, "137428400102635": 384, "137428400351033": 384, "248398": 384, "137428400548071": 384, "137428400792528": 384, "244457": 384, "4391": 384, "reshape_ttnn": 384, "4392": 384, "137450414555424": 384, "137450414599894": 384, "44470": 384, "4393": 384, "137450414740752": 384, "137450414782422": 384, "41670": 384, "4394": 384, "bcast_batch": 384, "tt_me": 384, "108": 384, "matmulparallelizationstrategi": 384, "multi_cor": 384, "137450414881851": 384, "137450414983440": 384, "101589": 384, "32128": 384, "dev_0_dram_interleav": 384, "4395": 384, "137450415113099": 384, "137450415158748": 384, "45649": 384, "from_device_ttnn": 384, "4396": 384, "137450415235897": 384, "137450453493048": 384, "38257151": 384, "fold_batch_norm2d_into_conv2d": 385, "168": 385, "82": 385, "768": 385, "242": 385, "conv1d": 385, "246": 385, "248": 385, "249": 385, "250": [385, 386], "251": 385, "253": 385, "254": 385, "255": 385, "258": 385, "262": 385, "avg_pool2d": 385, "266": 385, "268": 385, "269": 385, "device_param": 385, "24576": 385, "310": 385, "324": 385, "325": 385, "363": 385, "conv3x3": 385, "in_plan": 385, "out_plan": 385, "3x3": 385, "torchbasicblock": 385, "expans": 385, "inplan": 385, "base_width": 385, "norm_lay": 385, "basicblock": 385, "notimplementederror": 385, "conv1": 385, "bn1": 385, "conv2": 385, "bn2": 385, "torch_model": 385, "state_dict": [385, 386], "create_custom_preprocessor": 385, "conv_weight_1": 385, "conv_bias_1": 385, "conv_weight_2": 385, "conv_bias_2": 385, "682": 385, "683": 385, "499": 385, "_initialize_model_and_preprocess_paramet": 385, "449": 385, "717": 385, "718": 385, "model_resnet_block_graph": 385, "conv_param": 385, "act_block_h": 385, "reshard": 385, "height_shard": 385, "shard_layout": 385, "__call__": 385, "conv_config": 385, "conv2dconfig": 385, "weights_dtyp": 385, "fp32_dest_acc_en": 385, "packer_l1_accum_en": 385, "input_channels_align": 385, "deallocate_activ": 385, "act_block_h_overrid": 385, "_out_height": 385, "_out_width": 385, "weight_tensor": 385, "bias_tensor": 385, "input_height": 385, "input_width": 385, "return_output_s": 385, "return_prepared_device_weight": 385, "ttnnbasicblock": 385, "get_memory_config": 385, "ttnn_model": 385, "12638": 385, "walk": 386, "mirror": 386, "colab": 386, "research": 386, "run_dit": 386, "ipynb": 386, "tab": 386, "ov": 386, "assumpt": 386, "chdir": 386, "content": 386, "upgrad": 386, "save_imag": 386, "create_diffus": 386, "autoencoderkl": 386, "find_model": 386, "collis": 386, "pil": 386, "set_grad_en": 386, "cuda": 386, "is_avail": 386, "gpu": 386, "322": 386, "fatal": 386, "destin": 386, "date": 386, "safetensor": 386, "sympi": 386, "mpmath": 386, "image_s": 386, "512": 386, "vae_model": 386, "stabilityai": 386, "sd": 386, "vae": 386, "ft": 386, "ema": 386, "mse": 386, "latent_s": 386, "input_s": 386, "pt": 386, "load_state_dict": 386, "num_sampling_step": 386, "slider": 386, "cfg_scale": 386, "class_label": 386, "207": 386, "387": 386, "974": 386, "88": 386, "979": 386, "417": 386, "279": 386, "raw": 386, "samples_per_row": 386, "nois": 386, "len": 386, "classifi": 386, "free": 386, "guidanc": 386, "y_null": 386, "model_kwarg": 386, "p_sample_loop": 386, "forward_with_cfg": 386, "clip_denois": 386, "null": 386, "18215": 386, "dit_model_graph": 386, "png": 386, "nrow": 386, "value_rang": 386, "06": 386, "987": 386, "210": 386, "show_svg": 386, "snippet": 387, "matmul_output_tensor": 387, "torch_matmul_output_tensor": 387, "unlik": 387, "start_tim": 387, "end_tim": 387, "stdout": 387, "6391518115997314": 387, "0007393360137939453": 387, "9998": 387, "too": 387, "exp_trac": 387, "substitut": 387, "disk": 387, "implementaiton": 387, "addition": 387, "ttnn_config_path": 387, "2048": 387, "app": 387, "pre_hook_to_print_args_and_kwarg": 387, "post_hook_to_print_output": 387, "query_registered_oper": 387, "begin_graph_captur": 387, "runmod": 387, "no_dispatch": 387, "captured_graph": 387, "end_graph_captur": 387, "pretty_print": 387}, "objects": {"tt_lib.fallback_ops": [[366, 0, 1, "", "AdaptiveAvgPool2d"], [366, 0, 1, "", "BatchNorm2d"], [366, 0, 1, "", "Conv2d"], [366, 0, 1, "", "GroupNorm"], [366, 0, 1, "", "LayerNorm"], [366, 0, 1, "", "MaxPool2d"], [366, 0, 1, "", "binary_bitwise_and"], [366, 0, 1, "", "binary_bitwise_left_shift"], [366, 0, 1, "", "binary_bitwise_or"], [366, 0, 1, "", "binary_bitwise_right_shift"], [366, 0, 1, "", "binary_bitwise_xor"], [366, 0, 1, "", "binary_fmod"], [366, 0, 1, "", "bitwise_not"], [366, 0, 1, "", "ceil"], [366, 1, 1, "", "chunk"], [366, 1, 1, "", "concat"], [366, 1, 1, "", "conv2d"], [366, 0, 1, "", "floor"], [366, 1, 1, "", "full"], [366, 1, 1, "", "group_norm"], [366, 1, 1, "", "interpolate"], [366, 1, 1, "", "layer_norm"], [366, 1, 1, "", "pad"], [366, 1, 1, "", "repeat"], [366, 1, 1, "", "repeat_interleave"], [366, 1, 1, "", "reshape"], [366, 1, 1, "", "silu"], [366, 1, 1, "", "softmax"], [366, 1, 1, "", "tensor_slice"], [366, 0, 1, "", "torch_argmax"], [366, 0, 1, "", "torch_argmin"], [366, 0, 1, "", "trunc"], [366, 0, 1, "", "unary_bitwise_and"], [366, 0, 1, "", "unary_bitwise_left_shift"], [366, 0, 1, "", "unary_bitwise_or"], [366, 0, 1, "", "unary_bitwise_right_shift"], [366, 0, 1, "", "unary_bitwise_xor"], [366, 0, 1, "", "unary_fmod"]], "tt_lib.fused_ops.add_and_norm": [[366, 1, 1, "", "AddAndNorm"]], "tt_lib.fused_ops.layernorm": [[366, 1, 1, "", "Layernorm"]], "tt_lib.fused_ops.linear": [[366, 1, 1, "", "Linear"]], "ttnn": [[366, 0, 1, "", "BcastOpDim"], [366, 0, 1, "", "BcastOpMath"], [8, 1, 1, "", "GetDefaultDevice"], [365, 0, 1, "", "MemoryConfig"], [9, 1, 1, "", "SetDefaultDevice"], [371, 0, 1, "", "Shape"], [365, 0, 1, "", "Tensor"], [10, 1, 1, "", "abs"], [11, 1, 1, "", "abs_bw"], [12, 1, 1, "", "acos"], [13, 1, 1, "", "acos_bw"], [14, 1, 1, "", "acosh"], [15, 1, 1, "", "acosh_bw"], [16, 1, 1, "", "add"], [17, 1, 1, "", "add_bw"], [18, 1, 1, "", "addalpha"], [19, 1, 1, "", "addalpha_bw"], [20, 1, 1, "", "addcdiv"], [21, 1, 1, "", "addcdiv_bw"], [22, 1, 1, "", "addcmul"], [23, 1, 1, "", "addcmul_bw"], [24, 1, 1, "", "all_gather"], [25, 1, 1, "", "angle"], [26, 1, 1, "", "angle_bw"], [27, 1, 1, "", "arange"], [28, 1, 1, "", "argmax"], [29, 1, 1, "", "as_tensor"], [30, 1, 1, "", "asin"], [31, 1, 1, "", "asin_bw"], [32, 1, 1, "", "asinh"], [33, 1, 1, "", "asinh_bw"], [34, 1, 1, "", "assign_bw"], [35, 1, 1, "", "atan"], [36, 1, 1, "", "atan2"], [37, 1, 1, "", "atan2_bw"], [38, 1, 1, "", "atan_bw"], [39, 1, 1, "", "atanh"], [40, 1, 1, "", "atanh_bw"], [41, 1, 1, "", "bias_gelu_bw"], [42, 1, 1, "", "bitwise_and"], [43, 1, 1, "", "bitwise_left_shift"], [44, 1, 1, "", "bitwise_not"], [45, 1, 1, "", "bitwise_or"], [46, 1, 1, "", "bitwise_right_shift"], [47, 1, 1, "", "bitwise_xor"], [48, 1, 1, "", "cbrt"], [49, 1, 1, "", "ceil"], [50, 1, 1, "", "ceil_bw"], [51, 1, 1, "", "celu"], [52, 1, 1, "", "celu_bw"], [53, 1, 1, "", "clamp"], [54, 1, 1, "", "clamp_bw"], [55, 1, 1, "", "clip"], [56, 1, 1, "", "clip_bw"], [57, 1, 1, "", "clone"], [58, 1, 1, "", "close_device"], [59, 1, 1, "", "concat"], [60, 1, 1, "", "concat_bw"], [61, 1, 1, "", "conj"], [62, 1, 1, "", "conj_bw"], [63, 1, 1, "", "cos"], [64, 1, 1, "", "cos_bw"], [65, 1, 1, "", "cosh"], [66, 1, 1, "", "cosh_bw"], [67, 1, 1, "", "create_sharded_memory_config"], [68, 1, 1, "", "deallocate"], [69, 1, 1, "", "deg2rad"], [70, 1, 1, "", "deg2rad_bw"], [71, 1, 1, "", "digamma"], [72, 1, 1, "", "digamma_bw"], [73, 1, 1, "", "div"], [74, 1, 1, "", "div_bw"], [75, 1, 1, "", "div_no_nan"], [76, 1, 1, "", "div_no_nan_bw"], [77, 1, 1, "", "downsample"], [78, 1, 1, "", "dump_tensor"], [79, 1, 1, "", "elu"], [80, 1, 1, "", "elu_bw"], [81, 1, 1, "", "embedding"], [82, 1, 1, "", "embedding_bw"], [83, 1, 1, "", "empty"], [84, 1, 1, "", "empty_like"], [85, 1, 1, "", "eq"], [86, 1, 1, "", "eq_"], [87, 1, 1, "", "eqz"], [88, 1, 1, "", "erf"], [89, 1, 1, "", "erf_bw"], [90, 1, 1, "", "erfc"], [91, 1, 1, "", "erfc_bw"], [92, 1, 1, "", "erfinv"], [93, 1, 1, "", "erfinv_bw"], [94, 1, 1, "", "exp"], [95, 1, 1, "", "exp2"], [96, 1, 1, "", "exp2_bw"], [97, 1, 1, "", "exp_bw"], [101, 1, 1, "", "expm1"], [102, 1, 1, "", "expm1_bw"], [103, 1, 1, "", "fill"], [104, 1, 1, "", "fill_bw"], [105, 1, 1, "", "fill_ones_rm"], [106, 1, 1, "", "fill_rm"], [107, 1, 1, "", "fill_zero_bw"], [108, 1, 1, "", "floor"], [109, 1, 1, "", "floor_bw"], [110, 1, 1, "", "floor_div"], [111, 1, 1, "", "fmod"], [112, 1, 1, "", "fmod_bw"], [113, 1, 1, "", "format_input_tensor"], [114, 1, 1, "", "format_output_tensor"], [115, 1, 1, "", "frac"], [116, 1, 1, "", "frac_bw"], [117, 1, 1, "", "from_device"], [118, 1, 1, "", "from_torch"], [119, 1, 1, "", "full"], [120, 1, 1, "", "full_like"], [121, 1, 1, "", "gcd"], [122, 1, 1, "", "ge"], [123, 1, 1, "", "ge_"], [124, 1, 1, "", "geglu"], [125, 1, 1, "", "gelu"], [126, 1, 1, "", "gelu_bw"], [127, 1, 1, "", "gez"], [128, 1, 1, "", "global_avg_pool2d"], [129, 1, 1, "", "glu"], [130, 1, 1, "", "group_norm"], [131, 1, 1, "", "gt"], [132, 1, 1, "", "gt_"], [133, 1, 1, "", "gtz"], [134, 1, 1, "", "hardshrink"], [135, 1, 1, "", "hardshrink_bw"], [136, 1, 1, "", "hardsigmoid"], [137, 1, 1, "", "hardsigmoid_bw"], [138, 1, 1, "", "hardswish"], [139, 1, 1, "", "hardswish_bw"], [140, 1, 1, "", "hardtanh"], [141, 1, 1, "", "hardtanh_bw"], [142, 1, 1, "", "heaviside"], [143, 1, 1, "", "hypot"], [144, 1, 1, "", "hypot_bw"], [145, 1, 1, "", "i0"], [146, 1, 1, "", "i0_bw"], [147, 1, 1, "", "identity"], [148, 1, 1, "", "imag"], [149, 1, 1, "", "imag_bw"], [150, 1, 1, "", "indexed_fill"], [151, 1, 1, "", "is_imag"], [152, 1, 1, "", "is_real"], [153, 1, 1, "", "isclose"], [154, 1, 1, "", "isfinite"], [155, 1, 1, "", "isinf"], [156, 1, 1, "", "isnan"], [157, 1, 1, "", "isneginf"], [158, 1, 1, "", "isposinf"], [161, 1, 1, "", "l1_loss"], [162, 1, 1, "", "layer_norm"], [163, 1, 1, "", "lcm"], [164, 1, 1, "", "ldexp"], [165, 1, 1, "", "ldexp_bw"], [166, 1, 1, "", "le"], [167, 1, 1, "", "le_"], [168, 1, 1, "", "leaky_relu"], [169, 1, 1, "", "leaky_relu_bw"], [170, 1, 1, "", "lerp"], [171, 1, 1, "", "lerp_bw"], [172, 1, 1, "", "lez"], [173, 1, 1, "", "lgamma"], [174, 1, 1, "", "lgamma_bw"], [175, 1, 1, "", "linear"], [176, 1, 1, "", "load_tensor"], [177, 1, 1, "", "log"], [178, 1, 1, "", "log10"], [179, 1, 1, "", "log10_bw"], [180, 1, 1, "", "log1p"], [181, 1, 1, "", "log1p_bw"], [182, 1, 1, "", "log2"], [183, 1, 1, "", "log2_bw"], [184, 1, 1, "", "log_bw"], [185, 1, 1, "", "log_sigmoid"], [186, 1, 1, "", "log_sigmoid_bw"], [187, 1, 1, "", "logaddexp"], [188, 1, 1, "", "logaddexp2"], [189, 1, 1, "", "logaddexp2_bw"], [190, 1, 1, "", "logaddexp_bw"], [191, 1, 1, "", "logical_and"], [192, 1, 1, "", "logical_and_"], [193, 1, 1, "", "logical_not"], [194, 1, 1, "", "logical_not_"], [195, 1, 1, "", "logical_or"], [196, 1, 1, "", "logical_or_"], [197, 1, 1, "", "logical_xor"], [198, 1, 1, "", "logical_xor_"], [199, 1, 1, "", "logit"], [200, 1, 1, "", "logit_bw"], [201, 1, 1, "", "logiteps_bw"], [202, 1, 1, "", "lt"], [203, 1, 1, "", "lt_"], [204, 1, 1, "", "ltz"], [205, 1, 1, "", "mac"], [206, 1, 1, "", "manage_device"], [207, 1, 1, "", "matmul"], [208, 1, 1, "", "max"], [209, 1, 1, "", "max_bw"], [210, 1, 1, "", "max_pool2d"], [211, 1, 1, "", "maximum"], [212, 1, 1, "", "mean"], [213, 1, 1, "", "min"], [214, 1, 1, "", "min_bw"], [215, 1, 1, "", "minimum"], [216, 1, 1, "", "mish"], [219, 1, 1, "", "moreh_sum"], [220, 1, 1, "", "mse_loss"], [221, 1, 1, "", "mul_bw"], [222, 1, 1, "", "multigammaln"], [223, 1, 1, "", "multigammaln_bw"], [224, 1, 1, "", "multiply"], [225, 1, 1, "", "ne"], [226, 1, 1, "", "ne_"], [227, 1, 1, "", "neg"], [228, 1, 1, "", "neg_bw"], [229, 1, 1, "", "nextafter"], [230, 1, 1, "", "nez"], [231, 1, 1, "", "nonzero"], [232, 1, 1, "", "normalize_global"], [233, 1, 1, "", "normalize_hw"], [234, 1, 1, "", "ones"], [235, 1, 1, "", "ones_like"], [236, 1, 1, "", "open_device"], [237, 1, 1, "", "outer"], [238, 1, 1, "", "pad"], [239, 1, 1, "", "pad_to_tile_shape"], [240, 1, 1, "", "permute"], [241, 1, 1, "", "polar"], [242, 1, 1, "", "polar_bw"], [243, 1, 1, "", "polygamma"], [244, 1, 1, "", "polygamma_bw"], [245, 1, 1, "", "polyval"], [246, 1, 1, "", "pow"], [247, 1, 1, "", "pow_bw"], [248, 1, 1, "", "prelu"], [249, 1, 1, "", "prod"], [250, 1, 1, "", "prod_bw"], [251, 1, 1, "", "rad2deg"], [252, 1, 1, "", "rad2deg_bw"], [253, 1, 1, "", "rdiv"], [254, 1, 1, "", "rdiv_bw"], [255, 1, 1, "", "real"], [256, 1, 1, "", "real_bw"], [257, 1, 1, "", "reallocate"], [258, 1, 1, "", "reciprocal"], [259, 1, 1, "", "reciprocal_bw"], [260, 1, 1, "", "reduce_scatter"], [261, 1, 1, "", "register_post_operation_hook"], [262, 1, 1, "", "register_pre_operation_hook"], [263, 1, 1, "", "reglu"], [264, 1, 1, "", "relu"], [265, 1, 1, "", "relu6"], [266, 1, 1, "", "relu6_bw"], [267, 1, 1, "", "relu_bw"], [268, 1, 1, "", "relu_max"], [269, 1, 1, "", "relu_min"], [270, 1, 1, "", "remainder"], [271, 1, 1, "", "remainder_bw"], [272, 1, 1, "", "repeat"], [273, 1, 1, "", "repeat_bw"], [274, 1, 1, "", "repeat_interleave"], [275, 1, 1, "", "reshape"], [276, 1, 1, "", "rms_norm"], [277, 1, 1, "", "round"], [278, 1, 1, "", "round_bw"], [279, 1, 1, "", "rpow"], [280, 1, 1, "", "rpow_bw"], [281, 1, 1, "", "rsqrt"], [282, 1, 1, "", "rsqrt_bw"], [283, 1, 1, "", "rsub"], [284, 1, 1, "", "rsub_bw"], [285, 1, 1, "", "scatter"], [286, 1, 1, "", "selu"], [287, 1, 1, "", "selu_bw"], [288, 1, 1, "", "set_printoptions"], [289, 1, 1, "", "sigmoid"], [290, 1, 1, "", "sigmoid_accurate"], [291, 1, 1, "", "sigmoid_bw"], [292, 1, 1, "", "sign"], [293, 1, 1, "", "sign_bw"], [294, 1, 1, "", "signbit"], [295, 1, 1, "", "silu"], [296, 1, 1, "", "silu_bw"], [297, 1, 1, "", "sin"], [298, 1, 1, "", "sin_bw"], [299, 1, 1, "", "sinh"], [300, 1, 1, "", "sinh_bw"], [301, 1, 1, "", "slice"], [302, 1, 1, "", "softmax"], [303, 1, 1, "", "softplus"], [304, 1, 1, "", "softplus_bw"], [305, 1, 1, "", "softshrink"], [306, 1, 1, "", "softshrink_bw"], [307, 1, 1, "", "softsign"], [308, 1, 1, "", "softsign_bw"], [309, 1, 1, "", "sqrt"], [310, 1, 1, "", "sqrt_bw"], [311, 1, 1, "", "square"], [312, 1, 1, "", "square_bw"], [313, 1, 1, "", "squared_difference"], [314, 1, 1, "", "squared_difference_bw"], [315, 1, 1, "", "std"], [316, 1, 1, "", "sub_bw"], [317, 1, 1, "", "subalpha"], [318, 1, 1, "", "subalpha_bw"], [319, 1, 1, "", "subtract"], [320, 1, 1, "", "sum"], [321, 1, 1, "", "swiglu"], [322, 1, 1, "", "swish"], [323, 1, 1, "", "synchronize_device"], [324, 1, 1, "", "tan"], [325, 1, 1, "", "tan_bw"], [326, 1, 1, "", "tanh"], [327, 1, 1, "", "tanh_bw"], [328, 1, 1, "", "tanhshrink"], [329, 1, 1, "", "tanhshrink_bw"], [330, 1, 1, "", "threshold"], [331, 1, 1, "", "threshold_bw"], [332, 1, 1, "", "tilize"], [333, 1, 1, "", "tilize_with_val_padding"], [334, 1, 1, "", "to_device"], [335, 1, 1, "", "to_layout"], [336, 1, 1, "", "to_memory_config"], [337, 1, 1, "", "to_torch"], [338, 1, 1, "", "topk"], [345, 1, 1, "", "tril"], [346, 1, 1, "", "triu"], [347, 1, 1, "", "trunc"], [348, 1, 1, "", "trunc_bw"], [349, 1, 1, "", "unary_chain"], [350, 1, 1, "", "untilize"], [351, 1, 1, "", "untilize_with_halo_v2"], [352, 1, 1, "", "untilize_with_unpadding"], [353, 1, 1, "", "upsample"], [354, 1, 1, "", "var"], [355, 1, 1, "", "where"], [356, 1, 1, "", "where_bw"], [357, 1, 1, "", "xlogy"], [358, 1, 1, "", "xlogy_bw"], [359, 1, 1, "", "zeros"], [360, 1, 1, "", "zeros_like"]], "ttnn.MemoryConfig": [[365, 2, 1, "", "__init__"]], "ttnn.Shape": [[371, 3, 1, "", "rank"], [371, 2, 1, "", "to_rank"], [371, 2, 1, "", "with_tile_padding"]], "ttnn.Tensor": [[365, 2, 1, "", "__init__"], [365, 2, 1, "", "buffer"], [366, 1, 1, "", "cpu"], [365, 2, 1, "", "device"], [365, 2, 1, "", "get_dtype"], [365, 2, 1, "", "get_layout"], [365, 2, 1, "", "pad"], [365, 2, 1, "", "pad_to_tile"], [365, 2, 1, "", "storage_type"], [365, 2, 1, "", "to"], [365, 2, 1, "", "unpad"], [365, 2, 1, "", "unpad_from_tile"]], "ttnn.experimental": [[98, 1, 1, "", "all_reduce"], [99, 1, 1, "", "dropout"], [100, 1, 1, "", "rotary_embedding"]], "ttnn.kv_cache": [[159, 1, 1, "", "fill_cache_for_user_"], [160, 1, 1, "", "update_cache_for_token_"]], "ttnn.model_preprocessing": [[217, 1, 1, "", "preprocess_model"], [218, 1, 1, "", "preprocess_model_parameters"]], "ttnn.operations.moreh": [[366, 1, 1, "", "group_norm"], [366, 1, 1, "", "group_norm_backward"], [366, 1, 1, "", "logsoftmax"], [366, 1, 1, "", "logsoftmax_backward"], [366, 1, 1, "", "mean"], [366, 1, 1, "", "mean_backward"], [366, 1, 1, "", "norm"], [366, 1, 1, "", "norm_backward"], [366, 1, 1, "", "softmax"], [366, 1, 1, "", "softmax_backward"], [366, 1, 1, "", "softmin"], [366, 1, 1, "", "softmin_backward"]], "ttnn.transformer": [[339, 1, 1, "", "attention_softmax"], [340, 1, 1, "", "attention_softmax_"], [341, 1, 1, "", "concatenate_heads"], [342, 1, 1, "", "scaled_dot_product_attention"], [343, 1, 1, "", "scaled_dot_product_attention_decode"], [344, 1, 1, "", "split_query_key_value_and_split_heads"]]}, "objtypes": {"0": "py:class", "1": "py:function", "2": "py:method", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "function", "Python function"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "tt": [0, 363, 365, 366, 367, 368], "nn": [0, 367, 368], "document": 0, "ttnn": [0, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 370, 373, 376, 379, 380, 382, 383, 384, 385, 387], "model": [0, 4, 7, 361, 367, 382, 383, 386], "resourc": 0, "indic": 0, "tabl": 0, "contribut": [1, 368], "develop": 1, "support": [2, 387], "report": [2, 7, 370], "bug": 2, "featur": [2, 5], "propos": 2, "request": 2, "troubleshoot": 2, "debug": [2, 387], "tip": 2, "commun": 2, "perform": [3, 381], "prerequisit": [3, 4], "run": [3, 4, 363, 382, 385, 387], "perf": [3, 370], "file": 3, "all": [3, 387], "get": [4, 367, 385], "start": [4, 367, 368], "an": [4, 387], "exampl": [4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 337, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 387], "next": 4, "step": [4, 6, 361, 368], "what": [5, 6], "i": [5, 6], "kei": 5, "ad": 6, "new": [6, 366, 369], "oper": [6, 7, 361, 366, 370, 374, 378, 380, 383, 384, 387], "faq": 6, "ar": 6, "need": 6, "add": [6, 16, 378, 380], "c": [6, 387], "python": [6, 387], "devic": [6, 7, 363, 366, 380, 381, 382, 387], "implement": [6, 382, 385], "1": [6, 361, 367, 368, 387], "2": [6, 361, 366, 367, 368, 386, 387], "bind": 6, "option": [6, 366, 368], "golden": 6, "function": [6, 369, 383, 387], "api": [7, 365, 366, 371], "memori": [7, 371], "config": [7, 371, 381], "core": 7, "tensor": [7, 363, 365, 366, 371, 378, 380, 381, 387], "creation": 7, "matrix": [7, 381], "multipl": [7, 371, 381], "pointwis": 7, "unari": 7, "binari": 7, "ternari": 7, "loss": 7, "reduct": 7, "data": [7, 371, 380], "movement": 7, "normal": 7, "moreh": 7, "transform": [7, 339, 340, 341, 342, 343, 344], "ccl": 7, "embed": [7, 81], "pool": 7, "vision": 7, "kv": 7, "cach": [7, 366, 381, 382, 387], "convers": 7, "hook": [7, 387], "getdefaultdevic": 8, "setdefaultdevic": 9, "ab": 10, "abs_bw": 11, "aco": 12, "acos_bw": 13, "acosh": 14, "acosh_bw": 15, "add_bw": 17, "addalpha": 18, "addalpha_bw": 19, "addcdiv": 20, "addcdiv_bw": 21, "addcmul": 22, "addcmul_bw": 23, "all_gath": 24, "angl": 25, "angle_bw": 26, "arang": 27, "argmax": 28, "as_tensor": 29, "asin": 30, "asin_bw": 31, "asinh": 32, "asinh_bw": 33, "assign_bw": 34, "atan": 35, "atan2": 36, "atan2_bw": 37, "atan_bw": 38, "atanh": 39, "atanh_bw": 40, "bias_gelu_bw": 41, "bitwise_and": 42, "bitwise_left_shift": 43, "bitwise_not": 44, "bitwise_or": 45, "bitwise_right_shift": 46, "bitwise_xor": 47, "cbrt": 48, "ceil": 49, "ceil_bw": 50, "celu": 51, "celu_bw": 52, "clamp": 53, "clamp_bw": 54, "clip": 55, "clip_bw": 56, "clone": [57, 386], "close_devic": 58, "concat": 59, "concat_bw": 60, "conj": 61, "conj_bw": 62, "co": 63, "cos_bw": 64, "cosh": 65, "cosh_bw": 66, "create_sharded_memory_config": 67, "dealloc": 68, "deg2rad": 69, "deg2rad_bw": 70, "digamma": 71, "digamma_bw": 72, "div": 73, "div_bw": 74, "div_no_nan": 75, "div_no_nan_bw": 76, "downsampl": 77, "dump_tensor": 78, "elu": 79, "elu_bw": 80, "embedding_bw": 82, "empti": 83, "empty_lik": 84, "eq": 85, "eq_": 86, "eqz": 87, "erf": 88, "erf_bw": 89, "erfc": 90, "erfc_bw": 91, "erfinv": 92, "erfinv_bw": 93, "exp": 94, "exp2": 95, "exp2_bw": 96, "exp_bw": 97, "experiment": [98, 99, 100, 366], "all_reduc": 98, "dropout": 99, "rotary_embed": 100, "expm1": 101, "expm1_bw": 102, "fill": 103, "fill_bw": 104, "fill_ones_rm": 105, "fill_rm": 106, "fill_zero_bw": 107, "floor": 108, "floor_bw": 109, "floor_div": 110, "fmod": 111, "fmod_bw": 112, "format_input_tensor": 113, "format_output_tensor": 114, "frac": 115, "frac_bw": 116, "from_devic": 117, "from_torch": 118, "full": 119, "full_lik": 120, "gcd": 121, "ge": 122, "ge_": 123, "geglu": 124, "gelu": 125, "gelu_bw": 126, "gez": 127, "global_avg_pool2d": 128, "glu": 129, "group_norm": 130, "gt": 131, "gt_": 132, "gtz": 133, "hardshrink": 134, "hardshrink_bw": 135, "hardsigmoid": 136, "hardsigmoid_bw": 137, "hardswish": 138, "hardswish_bw": 139, "hardtanh": 140, "hardtanh_bw": 141, "heavisid": 142, "hypot": 143, "hypot_bw": 144, "i0": 145, "i0_bw": 146, "ident": 147, "imag": [148, 368], "imag_bw": 149, "indexed_fil": 150, "is_imag": 151, "is_real": 152, "isclos": 153, "isfinit": 154, "isinf": 155, "isnan": 156, "isneginf": 157, "isposinf": 158, "kv_cach": [159, 160], "fill_cache_for_user_": 159, "update_cache_for_token_": 160, "l1_loss": 161, "layer_norm": 162, "lcm": 163, "ldexp": 164, "ldexp_bw": 165, "le": 166, "le_": 167, "leaky_relu": 168, "leaky_relu_bw": 169, "lerp": 170, "lerp_bw": 171, "lez": 172, "lgamma": 173, "lgamma_bw": 174, "linear": 175, "load_tensor": 176, "log": [177, 366, 387], "log10": 178, "log10_bw": 179, "log1p": 180, "log1p_bw": 181, "log2": 182, "log2_bw": 183, "log_bw": 184, "log_sigmoid": 185, "log_sigmoid_bw": 186, "logaddexp": 187, "logaddexp2": 188, "logaddexp2_bw": 189, "logaddexp_bw": 190, "logical_and": 191, "logical_and_": 192, "logical_not": 193, "logical_not_": 194, "logical_or": 195, "logical_or_": 196, "logical_xor": 197, "logical_xor_": 198, "logit": 199, "logit_bw": 200, "logiteps_bw": 201, "lt": 202, "lt_": 203, "ltz": 204, "mac": 205, "manage_devic": 206, "matmul": [207, 374], "max": 208, "max_bw": 209, "max_pool2d": 210, "maximum": 211, "mean": 212, "min": 213, "min_bw": 214, "minimum": 215, "mish": 216, "model_preprocess": [217, 218], "preprocess_model": 217, "preprocess_model_paramet": 218, "moreh_sum": 219, "mse_loss": 220, "mul_bw": 221, "multigammaln": 222, "multigammaln_bw": 223, "multipli": [224, 381], "ne": 225, "ne_": 226, "neg": 227, "neg_bw": 228, "nextaft": 229, "nez": 230, "nonzero": 231, "normalize_glob": 232, "normalize_hw": 233, "ones": 234, "ones_lik": 235, "open_devic": 236, "outer": 237, "pad": 238, "pad_to_tile_shap": 239, "permut": 240, "polar": 241, "polar_bw": 242, "polygamma": 243, "polygamma_bw": 244, "polyv": 245, "pow": 246, "pow_bw": 247, "prelu": 248, "prod": 249, "prod_bw": 250, "rad2deg": 251, "rad2deg_bw": 252, "rdiv": 253, "rdiv_bw": 254, "real": 255, "real_bw": 256, "realloc": 257, "reciproc": 258, "reciprocal_bw": 259, "reduce_scatt": 260, "register_post_operation_hook": 261, "register_pre_operation_hook": 262, "reglu": 263, "relu": 264, "relu6": 265, "relu6_bw": 266, "relu_bw": 267, "relu_max": 268, "relu_min": 269, "remaind": 270, "remainder_bw": 271, "repeat": 272, "repeat_bw": 273, "repeat_interleav": 274, "reshap": 275, "rms_norm": 276, "round": 277, "round_bw": 278, "rpow": 279, "rpow_bw": 280, "rsqrt": 281, "rsqrt_bw": 282, "rsub": 283, "rsub_bw": 284, "scatter": 285, "selu": 286, "selu_bw": 287, "set_printopt": 288, "sigmoid": 289, "sigmoid_accur": 290, "sigmoid_bw": 291, "sign": 292, "sign_bw": 293, "signbit": 294, "silu": 295, "silu_bw": 296, "sin": 297, "sin_bw": 298, "sinh": 299, "sinh_bw": 300, "slice": [301, 387], "softmax": 302, "softplu": 303, "softplus_bw": 304, "softshrink": 305, "softshrink_bw": 306, "softsign": 307, "softsign_bw": 308, "sqrt": 309, "sqrt_bw": 310, "squar": 311, "square_bw": 312, "squared_differ": 313, "squared_difference_bw": 314, "std": 315, "sub_bw": 316, "subalpha": 317, "subalpha_bw": 318, "subtract": 319, "sum": 320, "swiglu": 321, "swish": 322, "synchronize_devic": 323, "tan": 324, "tan_bw": 325, "tanh": 326, "tanh_bw": 327, "tanhshrink": 328, "tanhshrink_bw": 329, "threshold": 330, "threshold_bw": 331, "tiliz": 332, "tilize_with_val_pad": 333, "to_devic": 334, "to_layout": 335, "to_memory_config": 336, "to_torch": 337, "topk": 338, "attention_softmax": 339, "attention_softmax_": 340, "concatenate_head": 341, "scaled_dot_product_attent": 342, "scaled_dot_product_attention_decod": 343, "split_query_key_value_and_split_head": 344, "tril": 345, "triu": 346, "trunc": 347, "trunc_bw": 348, "unary_chain": 349, "until": 350, "untilize_with_halo_v2": 351, "untilize_with_unpad": 352, "upsampl": 353, "var": 354, "where": [355, 367], "where_bw": 356, "xlogi": 357, "xlogy_bw": 358, "zero": 359, "zeros_lik": 360, "convert": [361, 365, 380, 382, 387], "torch": [361, 373, 380, 381, 382, 383, 385, 387], "rewrit": 361, "switch": 361, "3": [361, 367, 368, 387], "optim": [361, 367, 382], "more": [361, 381], "build": [362, 367, 386], "uplift": 362, "demo": [362, 367], "lib": [363, 366], "us": [363, 368, 380, 381, 382, 383, 387], "one": 363, "op": 363, "from": [363, 366, 367, 368, 385, 386, 387], "acceler": 363, "pytorch": [363, 365, 386], "odd": 363, "size": 363, "last": 363, "dim": 363, "depend": [364, 368], "overview": [365, 366], "storag": [365, 371, 380], "memoryconfig": 365, "between": 365, "infrastructur": 366, "member": 366, "input": 366, "output": [366, 380, 381, 382], "profil": [366, 370, 376, 384], "fast": 366, "dispatch": 366, "program": [366, 381, 382, 387], "through": 366, "tt_lib": [366, 387], "primari": 366, "enum": 366, "fallback": 366, "fuse": 366, "mini": 366, "graph": [366, 373, 385, 386, 387], "librari": [366, 386], "complex": 366, "type": [366, 371, 380], "instal": [367, 368], "explor": 367, "our": 367, "tutori": [367, 372], "multi": [367, 375, 382], "head": [367, 375, 382], "attent": [367, 375, 382], "simpl": 367, "4": [367, 387], "go": 367, "here": 367, "driver": 368, "firmwar": 368, "system": 368, "level": 368, "metalium": 368, "sourc": 368, "wheel": 368, "docker": 368, "releas": 368, "5": [368, 387], "softwar": 368, "codebas": 368, "onboard": 369, "header": 370, "profile_thi": 370, "descript": 370, "shape": 371, "layout": [371, 380, 381], "requir": 371, "width": 371, "shard": 371, "dit_xl_2": 373, "With": 373, "resnet": [377, 385], "basic": [377, 387], "block": [377, 385], "tracer": 379, "creat": [380, 385], "host": 380, "borrow": 380, "v": 380, "own": 380, "open": 380, "initi": [380, 381, 382], "b": [380, 381], "random": [380, 381], "valu": [380, 381], "inspect": [380, 381], "attribut": 380, "close": [380, 381, 382], "enabl": [381, 382, 387], "configur": [381, 382], "result": 381, "write": 382, "activ": 382, "weight": 382, "first": 382, "iter": 382, "subsequ": 382, "version": [382, 385], "pre": [382, 386, 387], "process": 382, "paramet": [382, 385], "check": 382, "match": 382, "origin": 382, "trace": [383, 385, 387], "modul": [383, 385], "written": 383, "torchvis": 385, "preprocess": 385, "displai": [385, 386], "pass": 385, "constructor": 385, "base": 386, "http": 386, "github": 386, "com": 386, "facebookresearch": 386, "dit": 386, "git": 386, "download": 386, "xl": 386, "sampl": 386, "train": 386, "__getitem__": 387, "intermedi": 387, "6": 387, "7": 387, "8": 387, "9": 387, "10": 387, "chang": 387, "string": 387, "represent": 387, "11": 387, "visual": 387, "web": 387, "browser": 387, "12": 387, "regist": 387, "post": 387, "13": 387, "queri": 387, "14": 387, "fall": 387, "back": 387, "15": 387, "captur": 387, "buffer": 387, "alloc": 387, "etc": 387}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Welcome to TT-NN documentation!": [[0, "welcome-to-tt-nn-documentation"]], "TTNN": [[0, null]], "Models": [[0, null]], "Resources": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Contributing as a developer": [[1, "contributing-as-a-developer"]], "Support": [[2, "support"]], "Reporting bugs, feature proposals, or support requests": [[2, "reporting-bugs-feature-proposals-or-support-requests"]], "Troubleshooting and debugging tips": [[2, "troubleshooting-and-debugging-tips"]], "Community": [[2, "community"]], "Performance": [[3, "performance"]], "Prerequisites": [[3, "prerequisites"], [4, "prerequisites"]], "Running a perf file": [[3, "running-a-perf-file"]], "Running all the perf files": [[3, "running-all-the-perf-files"]], "Getting Started": [[4, "getting-started"], [367, "getting-started"]], "Running an example model": [[4, "running-an-example-model"]], "Next steps": [[4, "next-steps"]], "What is ttnn?": [[5, "what-is-ttnn"]], "Key features of ttnn": [[5, "key-features-of-ttnn"]], "Adding New ttnn Operation": [[6, "adding-new-ttnn-operation"]], "FAQ": [[6, "faq"]], "What is a ttnn operation?": [[6, "what-is-a-ttnn-operation"]], "What steps are needed to add ttnn operation in C++?": [[6, "what-steps-are-needed-to-add-ttnn-operation-in-c"]], "What steps are needed to add ttnn operation in Python?": [[6, "what-steps-are-needed-to-add-ttnn-operation-in-python"]], "Example of Adding a new Device Operation": [[6, "example-of-adding-a-new-device-operation"]], "C++ Implementation": [[6, "c-implementation"]], "Step 1: Implement device operation": [[6, "step-1-implement-device-operation"]], "Step 2: Implement the operation in C++": [[6, "step-2-implement-the-operation-in-c"]], "Python Implementation": [[6, "python-implementation"]], "Step 1: Add Python binding": [[6, "step-1-add-python-binding"]], "Step 2: (Optional) Add golden function for the operation in Python": [[6, "step-2-optional-add-golden-function-for-the-operation-in-python"]], "APIs": [[7, "apis"], [371, "apis"]], "Device": [[7, "device"]], "Memory Config": [[7, "memory-config"], [371, "memory-config"]], "Operations": [[7, "operations"]], "Core": [[7, "core"]], "Tensor Creation": [[7, "tensor-creation"]], "Matrix Multiplication": [[7, "matrix-multiplication"], [381, "Matrix-Multiplication"]], "Pointwise Unary": [[7, "pointwise-unary"]], "Pointwise Binary": [[7, "pointwise-binary"]], "Pointwise Ternary": [[7, "pointwise-ternary"]], "Losses": [[7, "losses"]], "Reduction": [[7, "reduction"]], "Data Movement": [[7, "data-movement"]], "Normalization": [[7, "normalization"]], "Moreh Operations": [[7, "moreh-operations"]], "Transformer": [[7, "transformer"]], "CCL": [[7, "ccl"]], "Embedding": [[7, "embedding"]], "Pooling": [[7, "pooling"]], "Vision": [[7, "vision"]], "KV Cache": [[7, "kv-cache"]], "Model Conversion": [[7, "model-conversion"]], "Reports": [[7, "reports"]], "Operation Hooks": [[7, "operation-hooks"]], "ttnn.GetDefaultDevice": [[8, "ttnn-getdefaultdevice"]], "Example": [[8, null], [9, null], [10, null], [11, null], [12, null], [13, null], [14, null], [15, null], [16, null], [17, null], [18, null], [19, null], [20, null], [21, null], [22, null], [23, null], [24, null], [25, null], [26, null], [27, null], [30, null], [31, null], [32, null], [33, null], [34, null], [35, null], [36, null], [37, null], [38, null], [39, null], [40, null], [41, null], [42, null], [43, null], [44, null], [45, null], [46, null], [47, null], [48, null], [49, null], [50, null], [51, null], [52, null], [53, null], [54, null], [55, null], [56, null], [58, null], [59, null], [60, null], [61, null], [62, null], [63, null], [64, null], [65, null], [66, null], [67, null], [68, null], [69, null], [70, null], [71, null], [72, null], [73, null], [74, null], [75, null], [76, null], [78, null], [79, null], [80, null], [81, null], [82, null], [83, null], [84, null], [85, null], [86, null], [87, null], [88, null], [89, null], [90, null], [91, null], [92, null], [93, null], [94, null], [95, null], [96, null], [97, null], [98, null], [99, null], [101, null], [102, null], [103, null], [104, null], [107, null], [108, null], [109, null], [110, null], [111, null], [112, null], [113, null], [114, null], [115, null], [116, null], [117, null], [118, null], [119, null], [120, null], [121, null], [122, null], [123, null], [124, null], [125, null], [126, null], [127, null], [128, null], [129, null], [131, null], [132, null], [133, null], [134, null], [135, null], [136, null], [137, null], [138, null], [139, null], [140, null], [141, null], [142, null], [143, null], [144, null], [145, null], [146, null], [147, null], [148, null], [149, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [157, null], [158, null], [161, null], [163, null], [164, null], [165, null], [166, null], [167, null], [168, null], [169, null], [170, null], [171, null], [172, null], [173, null], [174, null], [175, null], [176, null], [177, null], [178, null], [179, null], [180, null], [181, null], [182, null], [183, null], [184, null], [185, null], [186, null], [187, null], [188, null], [189, null], [190, null], [191, null], [192, null], [193, null], [194, null], [195, null], [196, null], [197, null], [198, null], [199, null], [200, null], [201, null], [202, null], [203, null], [204, null], [205, null], [206, null], [207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null], [214, null], [215, null], [216, null], [220, null], [221, null], [222, null], [223, null], [224, null], [225, null], [226, null], [227, null], [228, null], [229, null], [230, null], [231, null], [232, null], [233, null], [234, null], [235, null], [236, null], [237, null], [239, null], [241, null], [242, null], [243, null], [244, null], [245, null], [246, null], [247, null], [248, null], [250, null], [251, null], [252, null], [253, null], [254, null], [255, null], [256, null], [257, null], [258, null], [259, null], [260, null], [263, null], [264, null], [265, null], [266, null], [267, null], [268, null], [269, null], [270, null], [271, null], [272, null], [273, null], [275, null], [277, null], [278, null], [279, null], [280, null], [281, null], [282, null], [283, null], [284, null], [285, null], [286, null], [287, null], [289, null], [290, null], [291, null], [292, null], [293, null], [294, null], [295, null], [296, null], [297, null], [298, null], [299, null], [300, null], [301, null], [302, null], [303, null], [304, null], [305, null], [306, null], [307, null], [308, null], [309, null], [310, null], [311, null], [312, null], [313, null], [314, null], [315, null], [316, null], [317, null], [318, null], [319, null], [320, null], [321, null], [322, null], [323, null], [324, null], [325, null], [326, null], [327, null], [328, null], [329, null], [330, null], [331, null], [335, null], [336, null], [337, null], [345, null], [346, null], [347, null], [348, null], [349, null], [354, null], [355, null], [356, null], [357, null], [358, null], [359, null], [360, null]], "ttnn.SetDefaultDevice": [[9, "ttnn-setdefaultdevice"]], "ttnn.abs": [[10, "ttnn-abs"]], "ttnn.abs_bw": [[11, "ttnn-abs-bw"]], "ttnn.acos": [[12, "ttnn-acos"]], "ttnn.acos_bw": [[13, "ttnn-acos-bw"]], "ttnn.acosh": [[14, "ttnn-acosh"]], "ttnn.acosh_bw": [[15, "ttnn-acosh-bw"]], "ttnn.add": [[16, "ttnn-add"]], "ttnn.add_bw": [[17, "ttnn-add-bw"]], "ttnn.addalpha": [[18, "ttnn-addalpha"]], "ttnn.addalpha_bw": [[19, "ttnn-addalpha-bw"]], "ttnn.addcdiv": [[20, "ttnn-addcdiv"]], "ttnn.addcdiv_bw": [[21, "ttnn-addcdiv-bw"]], "ttnn.addcmul": [[22, "ttnn-addcmul"]], "ttnn.addcmul_bw": [[23, "ttnn-addcmul-bw"]], "ttnn.all_gather": [[24, "ttnn-all-gather"]], "ttnn.angle": [[25, "ttnn-angle"]], "ttnn.angle_bw": [[26, "ttnn-angle-bw"]], "ttnn.arange": [[27, "ttnn-arange"]], "ttnn.argmax": [[28, "ttnn-argmax"]], "ttnn.as_tensor": [[29, "ttnn-as-tensor"]], "Examples": [[29, null], [288, null]], "ttnn.asin": [[30, "ttnn-asin"]], "ttnn.asin_bw": [[31, "ttnn-asin-bw"]], "ttnn.asinh": [[32, "ttnn-asinh"]], "ttnn.asinh_bw": [[33, "ttnn-asinh-bw"]], "ttnn.assign_bw": [[34, "ttnn-assign-bw"]], "ttnn.atan": [[35, "ttnn-atan"]], "ttnn.atan2": [[36, "ttnn-atan2"]], "ttnn.atan2_bw": [[37, "ttnn-atan2-bw"]], "ttnn.atan_bw": [[38, "ttnn-atan-bw"]], "ttnn.atanh": [[39, "ttnn-atanh"]], "ttnn.atanh_bw": [[40, "ttnn-atanh-bw"]], "ttnn.bias_gelu_bw": [[41, "ttnn-bias-gelu-bw"]], "ttnn.bitwise_and": [[42, "ttnn-bitwise-and"]], "ttnn.bitwise_left_shift": [[43, "ttnn-bitwise-left-shift"]], "ttnn.bitwise_not": [[44, "ttnn-bitwise-not"]], "ttnn.bitwise_or": [[45, "ttnn-bitwise-or"]], "ttnn.bitwise_right_shift": [[46, "ttnn-bitwise-right-shift"]], "ttnn.bitwise_xor": [[47, "ttnn-bitwise-xor"]], "ttnn.cbrt": [[48, "ttnn-cbrt"]], "ttnn.ceil": [[49, "ttnn-ceil"]], "ttnn.ceil_bw": [[50, "ttnn-ceil-bw"]], "ttnn.celu": [[51, "ttnn-celu"]], "ttnn.celu_bw": [[52, "ttnn-celu-bw"]], "ttnn.clamp": [[53, "ttnn-clamp"]], "ttnn.clamp_bw": [[54, "ttnn-clamp-bw"]], "ttnn.clip": [[55, "ttnn-clip"]], "ttnn.clip_bw": [[56, "ttnn-clip-bw"]], "ttnn.clone": [[57, "ttnn-clone"]], "ttnn.close_device": [[58, "ttnn-close-device"]], "ttnn.concat": [[59, "ttnn-concat"]], "ttnn.concat_bw": [[60, "ttnn-concat-bw"]], "ttnn.conj": [[61, "ttnn-conj"]], "ttnn.conj_bw": [[62, "ttnn-conj-bw"]], "ttnn.cos": [[63, "ttnn-cos"]], "ttnn.cos_bw": [[64, "ttnn-cos-bw"]], "ttnn.cosh": [[65, "ttnn-cosh"]], "ttnn.cosh_bw": [[66, "ttnn-cosh-bw"]], "ttnn.create_sharded_memory_config": [[67, "ttnn-create-sharded-memory-config"]], "ttnn.deallocate": [[68, "ttnn-deallocate"]], "ttnn.deg2rad": [[69, "ttnn-deg2rad"]], "ttnn.deg2rad_bw": [[70, "ttnn-deg2rad-bw"]], "ttnn.digamma": [[71, "ttnn-digamma"]], "ttnn.digamma_bw": [[72, "ttnn-digamma-bw"]], "ttnn.div": [[73, "ttnn-div"]], "ttnn.div_bw": [[74, "ttnn-div-bw"]], "ttnn.div_no_nan": [[75, "ttnn-div-no-nan"]], "ttnn.div_no_nan_bw": [[76, "ttnn-div-no-nan-bw"]], "ttnn.downsample": [[77, "ttnn-downsample"]], "ttnn.dump_tensor": [[78, "ttnn-dump-tensor"]], "ttnn.elu": [[79, "ttnn-elu"]], "ttnn.elu_bw": [[80, "ttnn-elu-bw"]], "ttnn.embedding": [[81, "ttnn-embedding"]], "ttnn.embedding_bw": [[82, "ttnn-embedding-bw"]], "ttnn.empty": [[83, "ttnn-empty"]], "ttnn.empty_like": [[84, "ttnn-empty-like"]], "ttnn.eq": [[85, "ttnn-eq"]], "ttnn.eq_": [[86, "ttnn-eq"]], "ttnn.eqz": [[87, "ttnn-eqz"]], "ttnn.erf": [[88, "ttnn-erf"]], "ttnn.erf_bw": [[89, "ttnn-erf-bw"]], "ttnn.erfc": [[90, "ttnn-erfc"]], "ttnn.erfc_bw": [[91, "ttnn-erfc-bw"]], "ttnn.erfinv": [[92, "ttnn-erfinv"]], "ttnn.erfinv_bw": [[93, "ttnn-erfinv-bw"]], "ttnn.exp": [[94, "ttnn-exp"]], "ttnn.exp2": [[95, "ttnn-exp2"]], "ttnn.exp2_bw": [[96, "ttnn-exp2-bw"]], "ttnn.exp_bw": [[97, "ttnn-exp-bw"]], "ttnn.experimental.all_reduce": [[98, "ttnn-experimental-all-reduce"]], "ttnn.experimental.dropout": [[99, "ttnn-experimental-dropout"]], "ttnn.experimental.rotary_embedding": [[100, "ttnn-experimental-rotary-embedding"]], "ttnn.expm1": [[101, "ttnn-expm1"]], "ttnn.expm1_bw": [[102, "ttnn-expm1-bw"]], "ttnn.fill": [[103, "ttnn-fill"]], "ttnn.fill_bw": [[104, "ttnn-fill-bw"]], "ttnn.fill_ones_rm": [[105, "ttnn-fill-ones-rm"]], "ttnn.fill_rm": [[106, "ttnn-fill-rm"]], "ttnn.fill_zero_bw": [[107, "ttnn-fill-zero-bw"]], "ttnn.floor": [[108, "ttnn-floor"]], "ttnn.floor_bw": [[109, "ttnn-floor-bw"]], "ttnn.floor_div": [[110, "ttnn-floor-div"]], "ttnn.fmod": [[111, "ttnn-fmod"]], "ttnn.fmod_bw": [[112, "ttnn-fmod-bw"]], "ttnn.format_input_tensor": [[113, "ttnn-format-input-tensor"]], "ttnn.format_output_tensor": [[114, "ttnn-format-output-tensor"]], "ttnn.frac": [[115, "ttnn-frac"]], "ttnn.frac_bw": [[116, "ttnn-frac-bw"]], "ttnn.from_device": [[117, "ttnn-from-device"]], "ttnn.from_torch": [[118, "ttnn-from-torch"]], "ttnn.full": [[119, "ttnn-full"]], "ttnn.full_like": [[120, "ttnn-full-like"]], "ttnn.gcd": [[121, "ttnn-gcd"]], "ttnn.ge": [[122, "ttnn-ge"]], "ttnn.ge_": [[123, "ttnn-ge"]], "ttnn.geglu": [[124, "ttnn-geglu"]], "ttnn.gelu": [[125, "ttnn-gelu"]], "ttnn.gelu_bw": [[126, "ttnn-gelu-bw"]], "ttnn.gez": [[127, "ttnn-gez"]], "ttnn.global_avg_pool2d": [[128, "ttnn-global-avg-pool2d"]], "ttnn.glu": [[129, "ttnn-glu"]], "ttnn.group_norm": [[130, "ttnn-group-norm"]], "ttnn.gt": [[131, "ttnn-gt"]], "ttnn.gt_": [[132, "ttnn-gt"]], "ttnn.gtz": [[133, "ttnn-gtz"]], "ttnn.hardshrink": [[134, "ttnn-hardshrink"]], "ttnn.hardshrink_bw": [[135, "ttnn-hardshrink-bw"]], "ttnn.hardsigmoid": [[136, "ttnn-hardsigmoid"]], "ttnn.hardsigmoid_bw": [[137, "ttnn-hardsigmoid-bw"]], "ttnn.hardswish": [[138, "ttnn-hardswish"]], "ttnn.hardswish_bw": [[139, "ttnn-hardswish-bw"]], "ttnn.hardtanh": [[140, "ttnn-hardtanh"]], "ttnn.hardtanh_bw": [[141, "ttnn-hardtanh-bw"]], "ttnn.heaviside": [[142, "ttnn-heaviside"]], "ttnn.hypot": [[143, "ttnn-hypot"]], "ttnn.hypot_bw": [[144, "ttnn-hypot-bw"]], "ttnn.i0": [[145, "ttnn-i0"]], "ttnn.i0_bw": [[146, "ttnn-i0-bw"]], "ttnn.identity": [[147, "ttnn-identity"]], "ttnn.imag": [[148, "ttnn-imag"]], "ttnn.imag_bw": [[149, "ttnn-imag-bw"]], "ttnn.indexed_fill": [[150, "ttnn-indexed-fill"]], "ttnn.is_imag": [[151, "ttnn-is-imag"]], "ttnn.is_real": [[152, "ttnn-is-real"]], "ttnn.isclose": [[153, "ttnn-isclose"]], "ttnn.isfinite": [[154, "ttnn-isfinite"]], "ttnn.isinf": [[155, "ttnn-isinf"]], "ttnn.isnan": [[156, "ttnn-isnan"]], "ttnn.isneginf": [[157, "ttnn-isneginf"]], "ttnn.isposinf": [[158, "ttnn-isposinf"]], "ttnn.kv_cache.fill_cache_for_user_": [[159, "ttnn-kv-cache-fill-cache-for-user"]], "ttnn.kv_cache.update_cache_for_token_": [[160, "ttnn-kv-cache-update-cache-for-token"]], "ttnn.l1_loss": [[161, "ttnn-l1-loss"]], "ttnn.layer_norm": [[162, "ttnn-layer-norm"]], "ttnn.lcm": [[163, "ttnn-lcm"]], "ttnn.ldexp": [[164, "ttnn-ldexp"]], "ttnn.ldexp_bw": [[165, "ttnn-ldexp-bw"]], "ttnn.le": [[166, "ttnn-le"]], "ttnn.le_": [[167, "ttnn-le"]], "ttnn.leaky_relu": [[168, "ttnn-leaky-relu"]], "ttnn.leaky_relu_bw": [[169, "ttnn-leaky-relu-bw"]], "ttnn.lerp": [[170, "ttnn-lerp"]], "ttnn.lerp_bw": [[171, "ttnn-lerp-bw"]], "ttnn.lez": [[172, "ttnn-lez"]], "ttnn.lgamma": [[173, "ttnn-lgamma"]], "ttnn.lgamma_bw": [[174, "ttnn-lgamma-bw"]], "ttnn.linear": [[175, "ttnn-linear"]], "ttnn.load_tensor": [[176, "ttnn-load-tensor"]], "ttnn.log": [[177, "ttnn-log"]], "ttnn.log10": [[178, "ttnn-log10"]], "ttnn.log10_bw": [[179, "ttnn-log10-bw"]], "ttnn.log1p": [[180, "ttnn-log1p"]], "ttnn.log1p_bw": [[181, "ttnn-log1p-bw"]], "ttnn.log2": [[182, "ttnn-log2"]], "ttnn.log2_bw": [[183, "ttnn-log2-bw"]], "ttnn.log_bw": [[184, "ttnn-log-bw"]], "ttnn.log_sigmoid": [[185, "ttnn-log-sigmoid"]], "ttnn.log_sigmoid_bw": [[186, "ttnn-log-sigmoid-bw"]], "ttnn.logaddexp": [[187, "ttnn-logaddexp"]], "ttnn.logaddexp2": [[188, "ttnn-logaddexp2"]], "ttnn.logaddexp2_bw": [[189, "ttnn-logaddexp2-bw"]], "ttnn.logaddexp_bw": [[190, "ttnn-logaddexp-bw"]], "ttnn.logical_and": [[191, "ttnn-logical-and"]], "ttnn.logical_and_": [[192, "ttnn-logical-and"]], "ttnn.logical_not": [[193, "ttnn-logical-not"]], "ttnn.logical_not_": [[194, "ttnn-logical-not"]], "ttnn.logical_or": [[195, "ttnn-logical-or"]], "ttnn.logical_or_": [[196, "ttnn-logical-or"]], "ttnn.logical_xor": [[197, "ttnn-logical-xor"]], "ttnn.logical_xor_": [[198, "ttnn-logical-xor"]], "ttnn.logit": [[199, "ttnn-logit"]], "ttnn.logit_bw": [[200, "ttnn-logit-bw"]], "ttnn.logiteps_bw": [[201, "ttnn-logiteps-bw"]], "ttnn.lt": [[202, "ttnn-lt"]], "ttnn.lt_": [[203, "ttnn-lt"]], "ttnn.ltz": [[204, "ttnn-ltz"]], "ttnn.mac": [[205, "ttnn-mac"]], "ttnn.manage_device": [[206, "ttnn-manage-device"]], "ttnn.matmul": [[207, "ttnn-matmul"]], "ttnn.max": [[208, "ttnn-max"]], "ttnn.max_bw": [[209, "ttnn-max-bw"]], "ttnn.max_pool2d": [[210, "ttnn-max-pool2d"]], "ttnn.maximum": [[211, "ttnn-maximum"]], "ttnn.mean": [[212, "ttnn-mean"]], "ttnn.min": [[213, "ttnn-min"]], "ttnn.min_bw": [[214, "ttnn-min-bw"]], "ttnn.minimum": [[215, "ttnn-minimum"]], "ttnn.mish": [[216, "ttnn-mish"]], "ttnn.model_preprocessing.preprocess_model": [[217, "ttnn-model-preprocessing-preprocess-model"]], "ttnn.model_preprocessing.preprocess_model_parameters": [[218, "ttnn-model-preprocessing-preprocess-model-parameters"]], "ttnn.moreh_sum": [[219, "ttnn-moreh-sum"]], "ttnn.mse_loss": [[220, "ttnn-mse-loss"]], "ttnn.mul_bw": [[221, "ttnn-mul-bw"]], "ttnn.multigammaln": [[222, "ttnn-multigammaln"]], "ttnn.multigammaln_bw": [[223, "ttnn-multigammaln-bw"]], "ttnn.multiply": [[224, "ttnn-multiply"]], "ttnn.ne": [[225, "ttnn-ne"]], "ttnn.ne_": [[226, "ttnn-ne"]], "ttnn.neg": [[227, "ttnn-neg"]], "ttnn.neg_bw": [[228, "ttnn-neg-bw"]], "ttnn.nextafter": [[229, "ttnn-nextafter"]], "ttnn.nez": [[230, "ttnn-nez"]], "ttnn.nonzero": [[231, "ttnn-nonzero"]], "ttnn.normalize_global": [[232, "ttnn-normalize-global"]], "ttnn.normalize_hw": [[233, "ttnn-normalize-hw"]], "ttnn.ones": [[234, "ttnn-ones"]], "ttnn.ones_like": [[235, "ttnn-ones-like"]], "ttnn.open_device": [[236, "ttnn-open-device"]], "ttnn.outer": [[237, "ttnn-outer"]], "ttnn.pad": [[238, "ttnn-pad"]], "ttnn.pad_to_tile_shape": [[239, "ttnn-pad-to-tile-shape"]], "ttnn.permute": [[240, "ttnn-permute"]], "ttnn.polar": [[241, "ttnn-polar"]], "ttnn.polar_bw": [[242, "ttnn-polar-bw"]], "ttnn.polygamma": [[243, "ttnn-polygamma"]], "ttnn.polygamma_bw": [[244, "ttnn-polygamma-bw"]], "ttnn.polyval": [[245, "ttnn-polyval"]], "ttnn.pow": [[246, "ttnn-pow"]], "ttnn.pow_bw": [[247, "ttnn-pow-bw"]], "ttnn.prelu": [[248, "ttnn-prelu"]], "ttnn.prod": [[249, "ttnn-prod"]], "ttnn.prod_bw": [[250, "ttnn-prod-bw"]], "ttnn.rad2deg": [[251, "ttnn-rad2deg"]], "ttnn.rad2deg_bw": [[252, "ttnn-rad2deg-bw"]], "ttnn.rdiv": [[253, "ttnn-rdiv"]], "ttnn.rdiv_bw": [[254, "ttnn-rdiv-bw"]], "ttnn.real": [[255, "ttnn-real"]], "ttnn.real_bw": [[256, "ttnn-real-bw"]], "ttnn.reallocate": [[257, "ttnn-reallocate"]], "ttnn.reciprocal": [[258, "ttnn-reciprocal"]], "ttnn.reciprocal_bw": [[259, "ttnn-reciprocal-bw"]], "ttnn.reduce_scatter": [[260, "ttnn-reduce-scatter"]], "ttnn.register_post_operation_hook": [[261, "ttnn-register-post-operation-hook"]], "ttnn.register_pre_operation_hook": [[262, "ttnn-register-pre-operation-hook"]], "ttnn.reglu": [[263, "ttnn-reglu"]], "ttnn.relu": [[264, "ttnn-relu"]], "ttnn.relu6": [[265, "ttnn-relu6"]], "ttnn.relu6_bw": [[266, "ttnn-relu6-bw"]], "ttnn.relu_bw": [[267, "ttnn-relu-bw"]], "ttnn.relu_max": [[268, "ttnn-relu-max"]], "ttnn.relu_min": [[269, "ttnn-relu-min"]], "ttnn.remainder": [[270, "ttnn-remainder"]], "ttnn.remainder_bw": [[271, "ttnn-remainder-bw"]], "ttnn.repeat": [[272, "ttnn-repeat"]], "ttnn.repeat_bw": [[273, "ttnn-repeat-bw"]], "ttnn.repeat_interleave": [[274, "ttnn-repeat-interleave"]], "ttnn.reshape": [[275, "ttnn-reshape"]], "ttnn.rms_norm": [[276, "ttnn-rms-norm"]], "ttnn.round": [[277, "ttnn-round"]], "ttnn.round_bw": [[278, "ttnn-round-bw"]], "ttnn.rpow": [[279, "ttnn-rpow"]], "ttnn.rpow_bw": [[280, "ttnn-rpow-bw"]], "ttnn.rsqrt": [[281, "ttnn-rsqrt"]], "ttnn.rsqrt_bw": [[282, "ttnn-rsqrt-bw"]], "ttnn.rsub": [[283, "ttnn-rsub"]], "ttnn.rsub_bw": [[284, "ttnn-rsub-bw"]], "ttnn.scatter": [[285, "ttnn-scatter"]], "ttnn.selu": [[286, "ttnn-selu"]], "ttnn.selu_bw": [[287, "ttnn-selu-bw"]], "ttnn.set_printoptions": [[288, "ttnn-set-printoptions"]], "ttnn.sigmoid": [[289, "ttnn-sigmoid"]], "ttnn.sigmoid_accurate": [[290, "ttnn-sigmoid-accurate"]], "ttnn.sigmoid_bw": [[291, "ttnn-sigmoid-bw"]], "ttnn.sign": [[292, "ttnn-sign"]], "ttnn.sign_bw": [[293, "ttnn-sign-bw"]], "ttnn.signbit": [[294, "ttnn-signbit"]], "ttnn.silu": [[295, "ttnn-silu"]], "ttnn.silu_bw": [[296, "ttnn-silu-bw"]], "ttnn.sin": [[297, "ttnn-sin"]], "ttnn.sin_bw": [[298, "ttnn-sin-bw"]], "ttnn.sinh": [[299, "ttnn-sinh"]], "ttnn.sinh_bw": [[300, "ttnn-sinh-bw"]], "ttnn.slice": [[301, "ttnn-slice"]], "ttnn.softmax": [[302, "ttnn-softmax"]], "ttnn.softplus": [[303, "ttnn-softplus"]], "ttnn.softplus_bw": [[304, "ttnn-softplus-bw"]], "ttnn.softshrink": [[305, "ttnn-softshrink"]], "ttnn.softshrink_bw": [[306, "ttnn-softshrink-bw"]], "ttnn.softsign": [[307, "ttnn-softsign"]], "ttnn.softsign_bw": [[308, "ttnn-softsign-bw"]], "ttnn.sqrt": [[309, "ttnn-sqrt"]], "ttnn.sqrt_bw": [[310, "ttnn-sqrt-bw"]], "ttnn.square": [[311, "ttnn-square"]], "ttnn.square_bw": [[312, "ttnn-square-bw"]], "ttnn.squared_difference": [[313, "ttnn-squared-difference"]], "ttnn.squared_difference_bw": [[314, "ttnn-squared-difference-bw"]], "ttnn.std": [[315, "ttnn-std"]], "ttnn.sub_bw": [[316, "ttnn-sub-bw"]], "ttnn.subalpha": [[317, "ttnn-subalpha"]], "ttnn.subalpha_bw": [[318, "ttnn-subalpha-bw"]], "ttnn.subtract": [[319, "ttnn-subtract"]], "ttnn.sum": [[320, "ttnn-sum"]], "ttnn.swiglu": [[321, "ttnn-swiglu"]], "ttnn.swish": [[322, "ttnn-swish"]], "ttnn.synchronize_device": [[323, "ttnn-synchronize-device"]], "ttnn.tan": [[324, "ttnn-tan"]], "ttnn.tan_bw": [[325, "ttnn-tan-bw"]], "ttnn.tanh": [[326, "ttnn-tanh"]], "ttnn.tanh_bw": [[327, "ttnn-tanh-bw"]], "ttnn.tanhshrink": [[328, "ttnn-tanhshrink"]], "ttnn.tanhshrink_bw": [[329, "ttnn-tanhshrink-bw"]], "ttnn.threshold": [[330, "ttnn-threshold"]], "ttnn.threshold_bw": [[331, "ttnn-threshold-bw"]], "ttnn.tilize": [[332, "ttnn-tilize"]], "ttnn.tilize_with_val_padding": [[333, "ttnn-tilize-with-val-padding"]], "ttnn.to_device": [[334, "ttnn-to-device"]], "ttnn.to_layout": [[335, "ttnn-to-layout"]], "ttnn.to_memory_config": [[336, "ttnn-to-memory-config"]], "ttnn.to_torch": [[337, "ttnn-to-torch"]], "ttnn.topk": [[338, "ttnn-topk"]], "ttnn.transformer.attention_softmax": [[339, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.attention_softmax_": [[340, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.concatenate_heads": [[341, "ttnn-transformer-concatenate-heads"]], "ttnn.transformer.scaled_dot_product_attention": [[342, "ttnn-transformer-scaled-dot-product-attention"]], "ttnn.transformer.scaled_dot_product_attention_decode": [[343, "ttnn-transformer-scaled-dot-product-attention-decode"]], "ttnn.transformer.split_query_key_value_and_split_heads": [[344, "ttnn-transformer-split-query-key-value-and-split-heads"]], "ttnn.tril": [[345, "ttnn-tril"]], "ttnn.triu": [[346, "ttnn-triu"]], "ttnn.trunc": [[347, "ttnn-trunc"]], "ttnn.trunc_bw": [[348, "ttnn-trunc-bw"]], "ttnn.unary_chain": [[349, "ttnn-unary-chain"]], "ttnn.untilize": [[350, "ttnn-untilize"]], "ttnn.untilize_with_halo_v2": [[351, "ttnn-untilize-with-halo-v2"]], "ttnn.untilize_with_unpadding": [[352, "ttnn-untilize-with-unpadding"]], "ttnn.upsample": [[353, "ttnn-upsample"]], "ttnn.var": [[354, "ttnn-var"]], "ttnn.where": [[355, "ttnn-where"]], "ttnn.where_bw": [[356, "ttnn-where-bw"]], "ttnn.xlogy": [[357, "ttnn-xlogy"]], "ttnn.xlogy_bw": [[358, "ttnn-xlogy-bw"]], "ttnn.zeros": [[359, "ttnn-zeros"]], "ttnn.zeros_like": [[360, "ttnn-zeros-like"]], "Converting torch Model to ttnn": [[361, "converting-torch-model-to-ttnn"]], "Step 1 - Rewriting the Model": [[361, "step-1-rewriting-the-model"]], "Step 2 - Switching to ttnn Operations": [[361, "step-2-switching-to-ttnn-operations"]], "Step 3 - Optimizing the Model": [[361, "step-3-optimizing-the-model"]], "More examples": [[361, "more-examples"]], "Building and Uplifting Demos": [[362, "building-and-uplifting-demos"]], "Examples of Tensor and TT-LIB Use": [[363, "examples-of-tensor-and-tt-lib-use"]], "Run one OP from TT-LIB on TT Accelerator device": [[363, "run-one-op-from-tt-lib-on-tt-accelerator-device"]], "Run TT-LIB and PyTorch OPs": [[363, "run-tt-lib-and-pytorch-ops"]], "Tensors with odd size of last dim": [[363, "tensors-with-odd-size-of-last-dim"]], "Dependencies": [[364, "dependencies"]], "Tensor": [[365, "tensor"], [371, "tensor"]], "Overview": [[365, "overview"], [366, "overview"]], "Tensor Storage": [[365, "tensor-storage"]], "Tensor API": [[365, "tensor-api"]], "MemoryConfig": [[365, "memoryconfig"]], "Examples of converting between PyTorch Tensor and TT Tensor": [[365, "examples-of-converting-between-pytorch-tensor-and-tt-tensor"]], "Converting a PyTorch Tensor to a TT Tensor": [[365, "converting-a-pytorch-tensor-to-a-tt-tensor"]], "Converting a TT Tensor to a PyTorch Tensor": [[365, "converting-a-tt-tensor-to-a-pytorch-tensor"]], "TT-LIB": [[366, "tt-lib"]], "Operation Infrastructure": [[366, "operation-infrastructure"]], "New Device Operation": [[366, "new-device-operation"]], "New Device Operation with a member": [[366, "new-device-operation-with-a-member"]], "New Device Operation with Optional Input Tensors": [[366, "new-device-operation-with-optional-input-tensors"]], "New Device Operation with Optional Output Tensors": [[366, "new-device-operation-with-optional-output-tensors"]], "Profiler": [[366, "profiler"]], "Fast Dispatch": [[366, "fast-dispatch"]], "Program Caching": [[366, "program-caching"]], "Logs": [[366, "logs"]], "TT-LIB API through tt_lib": [[366, "tt-lib-api-through-tt-lib"]], "Primary Operations": [[366, "primary-operations"]], "Enums": [[366, "enums"]], "Fallback Operations": [[366, "fallback-operations"]], "Experimental Operations": [[366, "experimental-operations"]], "Fused Operations from tt_lib Mini-Graph Library": [[366, "fused-operations-from-tt-lib-mini-graph-library"]], "Complex Operations (Type 2)": [[366, "complex-operations-type-2"]], "1. Install and Build": [[367, "install-and-build"]], "2. Explore our model demos": [[367, "explore-our-model-demos"]], "3. TT-NN Tutorial: Multi-Head Attention (Simple)": [[367, "tt-nn-tutorial-multi-head-attention-simple"]], "4. TT-NN Tutorial: Multi-Head Attention (Optimized)": [[367, "tt-nn-tutorial-multi-head-attention-optimized"]], "Where to go from here": [[367, "where-to-go-from-here"]], "Install": [[368, "install"]], "Installation Steps": [[368, "installation-steps"]], "Step 1. Driver & Firmware": [[368, "step-1-driver-firmware"]], "Step 2. System-level dependencies": [[368, "step-2-system-level-dependencies"]], "Step 3. Install and start using TT-NN and TT-Metalium!": [[368, "step-3-install-and-start-using-tt-nn-and-tt-metalium"]], "Option 1: From source": [[368, "option-1-from-source"]], "Option 2: From wheel": [[368, "option-2-from-wheel"]], "Option 3: From Docker Release Image": [[368, "option-3-from-docker-release-image"]], "Step 5. (Optional) Software dependencies for codebase contributions": [[368, "step-5-optional-software-dependencies-for-codebase-contributions"]], "Onboarding New Functionality": [[369, "onboarding-new-functionality"]], "Profiling ttnn Operations": [[370, "profiling-ttnn-operations"]], "Perf Report Headers": [[370, "perf-report-headers"]], "profile_this description": [[370, "profile-this-description"]], "Shape": [[371, "shape"]], "Layout": [[371, "layout"], [380, "Layout"]], "Data Type": [[371, "data-type"], [380, "Data-Type"]], "Required Width Multiples for Data Types": [[371, "id5"]], "Storage": [[371, "storage"]], "Tensor Sharding": [[371, "tensor-sharding"]], "Tutorials": [[372, "id1"]], "Graphing Torch DiT_XL_2 With TTNN": [[373, "graphing-torch-dit-xl-2-with-ttnn"]], "Matmul Operation": [[374, "matmul-operation"]], "Multi-Head Attention": [[375, "multi-head-attention"], [382, "Multi-Head-Attention"]], "ttnn Profiling": [[376, "ttnn-profiling"]], "Resnet Basic Block": [[377, "resnet-basic-block"]], "Tensor and Add Operation": [[378, "tensor-and-add-operation"], [380, "Tensor-and-Add-Operation"]], "ttnn Tracer": [[379, "ttnn-tracer"]], "Creating a tensor": [[380, "Creating-a-tensor"]], "Host Storage: Borrowed vs Owned": [[380, "Host-Storage:-Borrowed-vs-Owned"]], "Device storage": [[380, "Device-storage"]], "Open the device": [[380, "Open-the-device"]], "Initialize tensors a and b with random values using torch": [[380, "Initialize-tensors-a-and-b-with-random-values-using-torch"], [381, "Initialize-tensors-a-and-b-with-random-values-using-torch"]], "Add tensor a and b": [[380, "Add-tensor-a-and-b"]], "Inspect the output tensor of the add in ttnn": [[380, "Inspect-the-output-tensor-of-the-add-in-ttnn"]], "Convert to torch and inspect the attributes of the torch tensor": [[380, "Convert-to-torch-and-inspect-the-attributes-of-the-torch-tensor"]], "Close the device": [[380, "Close-the-device"], [381, "Close-the-device"], [382, "Close-the-device"]], "Enable program cache": [[381, "Enable-program-cache"], [382, "Enable-program-cache"]], "Configuration": [[381, "Configuration"], [382, "Configuration"]], "Matrix multiply tensor a and b": [[381, "Matrix-multiply-tensor-a-and-b"]], "Inspect the layout of matrix multiplication output": [[381, "Inspect-the-layout-of-matrix-multiplication-output"]], "Inspect the result of the matrix multiplication": [[381, "Inspect-the-result-of-the-matrix-multiplication"]], "Matrix multiply tensor a and b by using more performant config": [[381, "Matrix-multiply-tensor-a-and-b-by-using-more-performant-config"]], "Write Multi-Head Attention using ttnn": [[382, "Write-Multi-Head-Attention-using-ttnn"]], "Initialize activations and weights using torch": [[382, "Initialize-activations-and-weights-using-torch"]], "Convert activations and weights to ttnn": [[382, "Convert-activations-and-weights-to-ttnn"]], "Run the first iteration of Multi-Head Attention": [[382, "Run-the-first-iteration-of-Multi-Head-Attention"]], "Run a subsequent iteration of Multi-Head Attention": [[382, "Run-a-subsequent-iteration-of-Multi-Head-Attention"]], "Write optimized version of Multi-Head Attention": [[382, "Write-optimized-version-of-Multi-Head-Attention"]], "Pre-process the parameters of the optimized model": [[382, "Pre-process-the-parameters-of-the-optimized-model"]], "Run the first iteration of the optimized Multi-Head Attention": [[382, "Run-the-first-iteration-of-the-optimized-Multi-Head-Attention"]], "Run a subsequent iteration of the optimized Multi-Head Attention": [[382, "Run-a-subsequent-iteration-of-the-optimized-Multi-Head-Attention"]], "Check that the output of the optimized version matches the output of the original implementation": [[382, "Check-that-the-output-of-the-optimized-version-matches-the-output-of-the-original-implementation"]], "Tracing ttnn operations and torch modules/functions": [[383, "Tracing-ttnn-operations-and-torch-modules/functions"]], "Trace torch functions": [[383, "Trace-torch-functions"]], "Trace torch functions and ttnn operations": [[383, "Trace-torch-functions-and-ttnn-operations"]], "Trace torch functions, torch modules and ttnn operations": [[383, "Trace-torch-functions,-torch-modules-and-ttnn-operations"]], "Trace models written using ttnn": [[383, "Trace-models-written-using-ttnn"]], "Profiling ttnn operations": [[384, "Profiling-ttnn-operations"]], "Resnet Block": [[385, "Resnet-Block"]], "Torch Module (from torchvision)": [[385, "Torch-Module-(from-torchvision)"]], "Create torch module and preprocess it to get ttnn parameters": [[385, "Create-torch-module-and-preprocess-it-to-get-ttnn-parameters"]], "Display the parameters of the module": [[385, "Display-the-parameters-of-the-module"]], "Display the traced torch graph": [[385, "Display-the-traced-torch-graph"]], "Implement ttnn version of the module. Pass in the parameters into the constructor.": [[385, "Implement-ttnn-version-of-the-module.-Pass-in-the-parameters-into-the-constructor."]], "Run ttnn module and display the traced graph": [[385, "Run-ttnn-module-and-display-the-traced-graph"]], "Build a graph of a pytorch based model": [[386, "Build-a-graph-of-a-pytorch-based-model"]], "Clone the library from https://github.com/facebookresearch/DiT.git": [[386, "Clone-the-library-from-https://github.com/facebookresearch/DiT.git"]], "Download DiT-XL/2 Models": [[386, "Download-DiT-XL/2-Models"]], "Sample from Pre-trained DiT Models and build the graph": [[386, "Sample-from-Pre-trained-DiT-Models-and-build-the-graph"]], "Display the graph": [[386, "Display-the-graph"]], "Using ttnn": [[387, "using-ttnn"]], "Basic Examples": [[387, "basic-examples"]], "1. Converting from and to torch tensor": [[387, "converting-from-and-to-torch-tensor"]], "2. Running an operation on the device": [[387, "running-an-operation-on-the-device"]], "3. Using __getitem__ to slice the tensor": [[387, "using-getitem-to-slice-the-tensor"]], "4. Enabling program cache": [[387, "enabling-program-cache"]], "5. Debugging intermediate tensors": [[387, "debugging-intermediate-tensors"]], "6. Tracing the graph of operations": [[387, "tracing-the-graph-of-operations"]], "7. Using tt_lib operation in ttnn": [[387, "using-tt-lib-operation-in-ttnn"]], "8. Enabling Logging": [[387, "enabling-logging"]], "9. Supported Python Operators": [[387, "supported-python-operators"]], "10. Changing the string representation of the tensor": [[387, "changing-the-string-representation-of-the-tensor"]], "11. Visualize using Web Browser": [[387, "visualize-using-web-browser"]], "12. Register pre- and/or post-operation hooks": [[387, "register-pre-and-or-post-operation-hooks"]], "13. Query all operations": [[387, "query-all-operations"]], "14. Falling back to torch": [[387, "falling-back-to-torch"]], "15. Capturing graph of C++ functions, buffer allocations, etc": [[387, "capturing-graph-of-c-functions-buffer-allocations-etc"]]}, "indexentries": {"getdefaultdevice() (in module ttnn)": [[8, "ttnn.GetDefaultDevice"]], "setdefaultdevice() (in module ttnn)": [[9, "ttnn.SetDefaultDevice"]], "abs() (in module ttnn)": [[10, "ttnn.abs"]], "abs_bw() (in module ttnn)": [[11, "ttnn.abs_bw"]], "acos() (in module ttnn)": [[12, "ttnn.acos"]], "acos_bw() (in module ttnn)": [[13, "ttnn.acos_bw"]], "acosh() (in module ttnn)": [[14, "ttnn.acosh"]], "acosh_bw() (in module ttnn)": [[15, "ttnn.acosh_bw"]], "add() (in module ttnn)": [[16, "ttnn.add"]], "add_bw() (in module ttnn)": [[17, "ttnn.add_bw"]], "addalpha() (in module ttnn)": [[18, "ttnn.addalpha"]], "addalpha_bw() (in module ttnn)": [[19, "ttnn.addalpha_bw"]], "addcdiv() (in module ttnn)": [[20, "ttnn.addcdiv"]], "addcdiv_bw() (in module ttnn)": [[21, "ttnn.addcdiv_bw"]], "addcmul() (in module ttnn)": [[22, "ttnn.addcmul"]], "addcmul_bw() (in module ttnn)": [[23, "ttnn.addcmul_bw"]], "all_gather() (in module ttnn)": [[24, "ttnn.all_gather"]], "angle() (in module ttnn)": [[25, "ttnn.angle"]], "angle_bw() (in module ttnn)": [[26, "ttnn.angle_bw"]], "arange() (in module ttnn)": [[27, "ttnn.arange"]], "argmax() (in module ttnn)": [[28, "ttnn.argmax"]], "as_tensor() (in module ttnn)": [[29, "ttnn.as_tensor"]], "asin() (in module ttnn)": [[30, "ttnn.asin"]], "asin_bw() (in module ttnn)": [[31, "ttnn.asin_bw"]], "asinh() (in module ttnn)": [[32, "ttnn.asinh"]], "asinh_bw() (in module ttnn)": [[33, "ttnn.asinh_bw"]], "assign_bw() (in module ttnn)": [[34, "ttnn.assign_bw"]], "atan() (in module ttnn)": [[35, "ttnn.atan"]], "atan2() (in module ttnn)": [[36, "ttnn.atan2"]], "atan2_bw() (in module ttnn)": [[37, "ttnn.atan2_bw"]], "atan_bw() (in module ttnn)": [[38, "ttnn.atan_bw"]], "atanh() (in module ttnn)": [[39, "ttnn.atanh"]], "atanh_bw() (in module ttnn)": [[40, "ttnn.atanh_bw"]], "bias_gelu_bw() (in module ttnn)": [[41, "ttnn.bias_gelu_bw"]], "bitwise_and() (in module ttnn)": [[42, "ttnn.bitwise_and"]], "bitwise_left_shift() (in module ttnn)": [[43, "ttnn.bitwise_left_shift"]], "bitwise_not() (in module ttnn)": [[44, "ttnn.bitwise_not"]], "bitwise_or() (in module ttnn)": [[45, "ttnn.bitwise_or"]], "bitwise_right_shift() (in module ttnn)": [[46, "ttnn.bitwise_right_shift"]], "bitwise_xor() (in module ttnn)": [[47, "ttnn.bitwise_xor"]], "cbrt() (in module ttnn)": [[48, "ttnn.cbrt"]], "ceil() (in module ttnn)": [[49, "ttnn.ceil"]], "ceil_bw() (in module ttnn)": [[50, "ttnn.ceil_bw"]], "celu() (in module ttnn)": [[51, "ttnn.celu"]], "celu_bw() (in module ttnn)": [[52, "ttnn.celu_bw"]], "clamp() (in module ttnn)": [[53, "ttnn.clamp"]], "clamp_bw() (in module ttnn)": [[54, "ttnn.clamp_bw"]], "clip() (in module ttnn)": [[55, "ttnn.clip"]], "clip_bw() (in module ttnn)": [[56, "ttnn.clip_bw"]], "clone() (in module ttnn)": [[57, "ttnn.clone"]], "close_device() (in module ttnn)": [[58, "ttnn.close_device"]], "concat() (in module ttnn)": [[59, "ttnn.concat"]], "concat_bw() (in module ttnn)": [[60, "ttnn.concat_bw"]], "conj() (in module ttnn)": [[61, "ttnn.conj"]], "conj_bw() (in module ttnn)": [[62, "ttnn.conj_bw"]], "cos() (in module ttnn)": [[63, "ttnn.cos"]], "cos_bw() (in module ttnn)": [[64, "ttnn.cos_bw"]], "cosh() (in module ttnn)": [[65, "ttnn.cosh"]], "cosh_bw() (in module ttnn)": [[66, "ttnn.cosh_bw"]], "create_sharded_memory_config() (in module ttnn)": [[67, "ttnn.create_sharded_memory_config"]], "deallocate() (in module ttnn)": [[68, "ttnn.deallocate"]], "deg2rad() (in module ttnn)": [[69, "ttnn.deg2rad"]], "deg2rad_bw() (in module ttnn)": [[70, "ttnn.deg2rad_bw"]], "digamma() (in module ttnn)": [[71, "ttnn.digamma"]], "digamma_bw() (in module ttnn)": [[72, "ttnn.digamma_bw"]], "div() (in module ttnn)": [[73, "ttnn.div"]], "div_bw() (in module ttnn)": [[74, "ttnn.div_bw"]], "div_no_nan() (in module ttnn)": [[75, "ttnn.div_no_nan"]], "div_no_nan_bw() (in module ttnn)": [[76, "ttnn.div_no_nan_bw"]], "downsample() (in module ttnn)": [[77, "ttnn.downsample"]], "dump_tensor() (in module ttnn)": [[78, "ttnn.dump_tensor"]], "elu() (in module ttnn)": [[79, "ttnn.elu"]], "elu_bw() (in module ttnn)": [[80, "ttnn.elu_bw"]], "embedding() (in module ttnn)": [[81, "ttnn.embedding"]], "embedding_bw() (in module ttnn)": [[82, "ttnn.embedding_bw"]], "empty() (in module ttnn)": [[83, "ttnn.empty"]], "empty_like() (in module ttnn)": [[84, "ttnn.empty_like"]], "eq() (in module ttnn)": [[85, "ttnn.eq"]], "eq_() (in module ttnn)": [[86, "ttnn.eq_"]], "eqz() (in module ttnn)": [[87, "ttnn.eqz"]], "erf() (in module ttnn)": [[88, "ttnn.erf"]], "erf_bw() (in module ttnn)": [[89, "ttnn.erf_bw"]], "erfc() (in module ttnn)": [[90, "ttnn.erfc"]], "erfc_bw() (in module ttnn)": [[91, "ttnn.erfc_bw"]], "erfinv() (in module ttnn)": [[92, "ttnn.erfinv"]], "erfinv_bw() (in module ttnn)": [[93, "ttnn.erfinv_bw"]], "exp() (in module ttnn)": [[94, "ttnn.exp"]], "exp2() (in module ttnn)": [[95, "ttnn.exp2"]], "exp2_bw() (in module ttnn)": [[96, "ttnn.exp2_bw"]], "exp_bw() (in module ttnn)": [[97, "ttnn.exp_bw"]], "all_reduce() (in module ttnn.experimental)": [[98, "ttnn.experimental.all_reduce"]], "dropout() (in module ttnn.experimental)": [[99, "ttnn.experimental.dropout"]], "rotary_embedding() (in module ttnn.experimental)": [[100, "ttnn.experimental.rotary_embedding"]], "expm1() (in module ttnn)": [[101, "ttnn.expm1"]], "expm1_bw() (in module ttnn)": [[102, "ttnn.expm1_bw"]], "fill() (in module ttnn)": [[103, "ttnn.fill"]], "fill_bw() (in module ttnn)": [[104, "ttnn.fill_bw"]], "fill_ones_rm() (in module ttnn)": [[105, "ttnn.fill_ones_rm"]], "fill_rm() (in module ttnn)": [[106, "ttnn.fill_rm"]], "fill_zero_bw() (in module ttnn)": [[107, "ttnn.fill_zero_bw"]], "floor() (in module ttnn)": [[108, "ttnn.floor"]], "floor_bw() (in module ttnn)": [[109, "ttnn.floor_bw"]], "floor_div() (in module ttnn)": [[110, "ttnn.floor_div"]], "fmod() (in module ttnn)": [[111, "ttnn.fmod"]], "fmod_bw() (in module ttnn)": [[112, "ttnn.fmod_bw"]], "format_input_tensor() (in module ttnn)": [[113, "ttnn.format_input_tensor"]], "format_output_tensor() (in module ttnn)": [[114, "ttnn.format_output_tensor"]], "frac() (in module ttnn)": [[115, "ttnn.frac"]], "frac_bw() (in module ttnn)": [[116, "ttnn.frac_bw"]], "from_device() (in module ttnn)": [[117, "ttnn.from_device"]], "from_torch() (in module ttnn)": [[118, "ttnn.from_torch"]], "full() (in module ttnn)": [[119, "ttnn.full"]], "full_like() (in module ttnn)": [[120, "ttnn.full_like"]], "gcd() (in module ttnn)": [[121, "ttnn.gcd"]], "ge() (in module ttnn)": [[122, "ttnn.ge"]], "ge_() (in module ttnn)": [[123, "ttnn.ge_"]], "geglu() (in module ttnn)": [[124, "ttnn.geglu"]], "gelu() (in module ttnn)": [[125, "ttnn.gelu"]], "gelu_bw() (in module ttnn)": [[126, "ttnn.gelu_bw"]], "gez() (in module ttnn)": [[127, "ttnn.gez"]], "global_avg_pool2d() (in module ttnn)": [[128, "ttnn.global_avg_pool2d"]], "glu() (in module ttnn)": [[129, "ttnn.glu"]], "group_norm() (in module ttnn)": [[130, "ttnn.group_norm"]], "gt() (in module ttnn)": [[131, "ttnn.gt"]], "gt_() (in module ttnn)": [[132, "ttnn.gt_"]], "gtz() (in module ttnn)": [[133, "ttnn.gtz"]], "hardshrink() (in module ttnn)": [[134, "ttnn.hardshrink"]], "hardshrink_bw() (in module ttnn)": [[135, "ttnn.hardshrink_bw"]], "hardsigmoid() (in module ttnn)": [[136, "ttnn.hardsigmoid"]], "hardsigmoid_bw() (in module ttnn)": [[137, "ttnn.hardsigmoid_bw"]], "hardswish() (in module ttnn)": [[138, "ttnn.hardswish"]], "hardswish_bw() (in module ttnn)": [[139, "ttnn.hardswish_bw"]], "hardtanh() (in module ttnn)": [[140, "ttnn.hardtanh"]], "hardtanh_bw() (in module ttnn)": [[141, "ttnn.hardtanh_bw"]], "heaviside() (in module ttnn)": [[142, "ttnn.heaviside"]], "hypot() (in module ttnn)": [[143, "ttnn.hypot"]], "hypot_bw() (in module ttnn)": [[144, "ttnn.hypot_bw"]], "i0() (in module ttnn)": [[145, "ttnn.i0"]], "i0_bw() (in module ttnn)": [[146, "ttnn.i0_bw"]], "identity() (in module ttnn)": [[147, "ttnn.identity"]], "imag() (in module ttnn)": [[148, "ttnn.imag"]], "imag_bw() (in module ttnn)": [[149, "ttnn.imag_bw"]], "indexed_fill() (in module ttnn)": [[150, "ttnn.indexed_fill"]], "is_imag() (in module ttnn)": [[151, "ttnn.is_imag"]], "is_real() (in module ttnn)": [[152, "ttnn.is_real"]], "isclose() (in module ttnn)": [[153, "ttnn.isclose"]], "isfinite() (in module ttnn)": [[154, "ttnn.isfinite"]], "isinf() (in module ttnn)": [[155, "ttnn.isinf"]], "isnan() (in module ttnn)": [[156, "ttnn.isnan"]], "isneginf() (in module ttnn)": [[157, "ttnn.isneginf"]], "isposinf() (in module ttnn)": [[158, "ttnn.isposinf"]], "fill_cache_for_user_() (in module ttnn.kv_cache)": [[159, "ttnn.kv_cache.fill_cache_for_user_"]], "update_cache_for_token_() (in module ttnn.kv_cache)": [[160, "ttnn.kv_cache.update_cache_for_token_"]], "l1_loss() (in module ttnn)": [[161, "ttnn.l1_loss"]], "layer_norm() (in module ttnn)": [[162, "ttnn.layer_norm"]], "lcm() (in module ttnn)": [[163, "ttnn.lcm"]], "ldexp() (in module ttnn)": [[164, "ttnn.ldexp"]], "ldexp_bw() (in module ttnn)": [[165, "ttnn.ldexp_bw"]], "le() (in module ttnn)": [[166, "ttnn.le"]], "le_() (in module ttnn)": [[167, "ttnn.le_"]], "leaky_relu() (in module ttnn)": [[168, "ttnn.leaky_relu"]], "leaky_relu_bw() (in module ttnn)": [[169, "ttnn.leaky_relu_bw"]], "lerp() (in module ttnn)": [[170, "ttnn.lerp"]], "lerp_bw() (in module ttnn)": [[171, "ttnn.lerp_bw"]], "lez() (in module ttnn)": [[172, "ttnn.lez"]], "lgamma() (in module ttnn)": [[173, "ttnn.lgamma"]], "lgamma_bw() (in module ttnn)": [[174, "ttnn.lgamma_bw"]], "linear() (in module ttnn)": [[175, "ttnn.linear"]], "load_tensor() (in module ttnn)": [[176, "ttnn.load_tensor"]], "log() (in module ttnn)": [[177, "ttnn.log"]], "log10() (in module ttnn)": [[178, "ttnn.log10"]], "log10_bw() (in module ttnn)": [[179, "ttnn.log10_bw"]], "log1p() (in module ttnn)": [[180, "ttnn.log1p"]], "log1p_bw() (in module ttnn)": [[181, "ttnn.log1p_bw"]], "log2() (in module ttnn)": [[182, "ttnn.log2"]], "log2_bw() (in module ttnn)": [[183, "ttnn.log2_bw"]], "log_bw() (in module ttnn)": [[184, "ttnn.log_bw"]], "log_sigmoid() (in module ttnn)": [[185, "ttnn.log_sigmoid"]], "log_sigmoid_bw() (in module ttnn)": [[186, "ttnn.log_sigmoid_bw"]], "logaddexp() (in module ttnn)": [[187, "ttnn.logaddexp"]], "logaddexp2() (in module ttnn)": [[188, "ttnn.logaddexp2"]], "logaddexp2_bw() (in module ttnn)": [[189, "ttnn.logaddexp2_bw"]], "logaddexp_bw() (in module ttnn)": [[190, "ttnn.logaddexp_bw"]], "logical_and() (in module ttnn)": [[191, "ttnn.logical_and"]], "logical_and_() (in module ttnn)": [[192, "ttnn.logical_and_"]], "logical_not() (in module ttnn)": [[193, "ttnn.logical_not"]], "logical_not_() (in module ttnn)": [[194, "ttnn.logical_not_"]], "logical_or() (in module ttnn)": [[195, "ttnn.logical_or"]], "logical_or_() (in module ttnn)": [[196, "ttnn.logical_or_"]], "logical_xor() (in module ttnn)": [[197, "ttnn.logical_xor"]], "logical_xor_() (in module ttnn)": [[198, "ttnn.logical_xor_"]], "logit() (in module ttnn)": [[199, "ttnn.logit"]], "logit_bw() (in module ttnn)": [[200, "ttnn.logit_bw"]], "logiteps_bw() (in module ttnn)": [[201, "ttnn.logiteps_bw"]], "lt() (in module ttnn)": [[202, "ttnn.lt"]], "lt_() (in module ttnn)": [[203, "ttnn.lt_"]], "ltz() (in module ttnn)": [[204, "ttnn.ltz"]], "mac() (in module ttnn)": [[205, "ttnn.mac"]], "manage_device() (in module ttnn)": [[206, "ttnn.manage_device"]], "matmul() (in module ttnn)": [[207, "ttnn.matmul"]], "max() (in module ttnn)": [[208, "ttnn.max"]], "max_bw() (in module ttnn)": [[209, "ttnn.max_bw"]], "max_pool2d() (in module ttnn)": [[210, "ttnn.max_pool2d"]], "maximum() (in module ttnn)": [[211, "ttnn.maximum"]], "mean() (in module ttnn)": [[212, "ttnn.mean"]], "min() (in module ttnn)": [[213, "ttnn.min"]], "min_bw() (in module ttnn)": [[214, "ttnn.min_bw"]], "minimum() (in module ttnn)": [[215, "ttnn.minimum"]], "mish() (in module ttnn)": [[216, "ttnn.mish"]], "preprocess_model() (in module ttnn.model_preprocessing)": [[217, "ttnn.model_preprocessing.preprocess_model"]], "preprocess_model_parameters() (in module ttnn.model_preprocessing)": [[218, "ttnn.model_preprocessing.preprocess_model_parameters"]], "moreh_sum() (in module ttnn)": [[219, "ttnn.moreh_sum"]], "mse_loss() (in module ttnn)": [[220, "ttnn.mse_loss"]], "mul_bw() (in module ttnn)": [[221, "ttnn.mul_bw"]], "multigammaln() (in module ttnn)": [[222, "ttnn.multigammaln"]], "multigammaln_bw() (in module ttnn)": [[223, "ttnn.multigammaln_bw"]], "multiply() (in module ttnn)": [[224, "ttnn.multiply"]], "ne() (in module ttnn)": [[225, "ttnn.ne"]], "ne_() (in module ttnn)": [[226, "ttnn.ne_"]], "neg() (in module ttnn)": [[227, "ttnn.neg"]], "neg_bw() (in module ttnn)": [[228, "ttnn.neg_bw"]], "nextafter() (in module ttnn)": [[229, "ttnn.nextafter"]], "nez() (in module ttnn)": [[230, "ttnn.nez"]], "nonzero() (in module ttnn)": [[231, "ttnn.nonzero"]], "normalize_global() (in module ttnn)": [[232, "ttnn.normalize_global"]], "normalize_hw() (in module ttnn)": [[233, "ttnn.normalize_hw"]], "ones() (in module ttnn)": [[234, "ttnn.ones"]], "ones_like() (in module ttnn)": [[235, "ttnn.ones_like"]], "open_device() (in module ttnn)": [[236, "ttnn.open_device"]], "outer() (in module ttnn)": [[237, "ttnn.outer"]], "pad() (in module ttnn)": [[238, "ttnn.pad"]], "pad_to_tile_shape() (in module ttnn)": [[239, "ttnn.pad_to_tile_shape"]], "permute() (in module ttnn)": [[240, "ttnn.permute"]], "polar() (in module ttnn)": [[241, "ttnn.polar"]], "polar_bw() (in module ttnn)": [[242, "ttnn.polar_bw"]], "polygamma() (in module ttnn)": [[243, "ttnn.polygamma"]], "polygamma_bw() (in module ttnn)": [[244, "ttnn.polygamma_bw"]], "polyval() (in module ttnn)": [[245, "ttnn.polyval"]], "pow() (in module ttnn)": [[246, "ttnn.pow"]], "pow_bw() (in module ttnn)": [[247, "ttnn.pow_bw"]], "prelu() (in module ttnn)": [[248, "ttnn.prelu"]], "prod() (in module ttnn)": [[249, "ttnn.prod"]], "prod_bw() (in module ttnn)": [[250, "ttnn.prod_bw"]], "rad2deg() (in module ttnn)": [[251, "ttnn.rad2deg"]], "rad2deg_bw() (in module ttnn)": [[252, "ttnn.rad2deg_bw"]], "rdiv() (in module ttnn)": [[253, "ttnn.rdiv"]], "rdiv_bw() (in module ttnn)": [[254, "ttnn.rdiv_bw"]], "real() (in module ttnn)": [[255, "ttnn.real"]], "real_bw() (in module ttnn)": [[256, "ttnn.real_bw"]], "reallocate() (in module ttnn)": [[257, "ttnn.reallocate"]], "reciprocal() (in module ttnn)": [[258, "ttnn.reciprocal"]], "reciprocal_bw() (in module ttnn)": [[259, "ttnn.reciprocal_bw"]], "reduce_scatter() (in module ttnn)": [[260, "ttnn.reduce_scatter"]], "register_post_operation_hook() (in module ttnn)": [[261, "ttnn.register_post_operation_hook"]], "register_pre_operation_hook() (in module ttnn)": [[262, "ttnn.register_pre_operation_hook"]], "reglu() (in module ttnn)": [[263, "ttnn.reglu"]], "relu() (in module ttnn)": [[264, "ttnn.relu"]], "relu6() (in module ttnn)": [[265, "ttnn.relu6"]], "relu6_bw() (in module ttnn)": [[266, "ttnn.relu6_bw"]], "relu_bw() (in module ttnn)": [[267, "ttnn.relu_bw"]], "relu_max() (in module ttnn)": [[268, "ttnn.relu_max"]], "relu_min() (in module ttnn)": [[269, "ttnn.relu_min"]], "remainder() (in module ttnn)": [[270, "ttnn.remainder"]], "remainder_bw() (in module ttnn)": [[271, "ttnn.remainder_bw"]], "repeat() (in module ttnn)": [[272, "ttnn.repeat"]], "repeat_bw() (in module ttnn)": [[273, "ttnn.repeat_bw"]], "repeat_interleave() (in module ttnn)": [[274, "ttnn.repeat_interleave"]], "reshape() (in module ttnn)": [[275, "ttnn.reshape"]], "rms_norm() (in module ttnn)": [[276, "ttnn.rms_norm"]], "round() (in module ttnn)": [[277, "ttnn.round"]], "round_bw() (in module ttnn)": [[278, "ttnn.round_bw"]], "rpow() (in module ttnn)": [[279, "ttnn.rpow"]], "rpow_bw() (in module ttnn)": [[280, "ttnn.rpow_bw"]], "rsqrt() (in module ttnn)": [[281, "ttnn.rsqrt"]], "rsqrt_bw() (in module ttnn)": [[282, "ttnn.rsqrt_bw"]], "rsub() (in module ttnn)": [[283, "ttnn.rsub"]], "rsub_bw() (in module ttnn)": [[284, "ttnn.rsub_bw"]], "scatter() (in module ttnn)": [[285, "ttnn.scatter"]], "selu() (in module ttnn)": [[286, "ttnn.selu"]], "selu_bw() (in module ttnn)": [[287, "ttnn.selu_bw"]], "set_printoptions() (in module ttnn)": [[288, "ttnn.set_printoptions"]], "sigmoid() (in module ttnn)": [[289, "ttnn.sigmoid"]], "sigmoid_accurate() (in module ttnn)": [[290, "ttnn.sigmoid_accurate"]], "sigmoid_bw() (in module ttnn)": [[291, "ttnn.sigmoid_bw"]], "sign() (in module ttnn)": [[292, "ttnn.sign"]], "sign_bw() (in module ttnn)": [[293, "ttnn.sign_bw"]], "signbit() (in module ttnn)": [[294, "ttnn.signbit"]], "silu() (in module ttnn)": [[295, "ttnn.silu"]], "silu_bw() (in module ttnn)": [[296, "ttnn.silu_bw"]], "sin() (in module ttnn)": [[297, "ttnn.sin"]], "sin_bw() (in module ttnn)": [[298, "ttnn.sin_bw"]], "sinh() (in module ttnn)": [[299, "ttnn.sinh"]], "sinh_bw() (in module ttnn)": [[300, "ttnn.sinh_bw"]], "slice() (in module ttnn)": [[301, "ttnn.slice"]], "softmax() (in module ttnn)": [[302, "ttnn.softmax"]], "softplus() (in module ttnn)": [[303, "ttnn.softplus"]], "softplus_bw() (in module ttnn)": [[304, "ttnn.softplus_bw"]], "softshrink() (in module ttnn)": [[305, "ttnn.softshrink"]], "softshrink_bw() (in module ttnn)": [[306, "ttnn.softshrink_bw"]], "softsign() (in module ttnn)": [[307, "ttnn.softsign"]], "softsign_bw() (in module ttnn)": [[308, "ttnn.softsign_bw"]], "sqrt() (in module ttnn)": [[309, "ttnn.sqrt"]], "sqrt_bw() (in module ttnn)": [[310, "ttnn.sqrt_bw"]], "square() (in module ttnn)": [[311, "ttnn.square"]], "square_bw() (in module ttnn)": [[312, "ttnn.square_bw"]], "squared_difference() (in module ttnn)": [[313, "ttnn.squared_difference"]], "squared_difference_bw() (in module ttnn)": [[314, "ttnn.squared_difference_bw"]], "std() (in module ttnn)": [[315, "ttnn.std"]], "sub_bw() (in module ttnn)": [[316, "ttnn.sub_bw"]], "subalpha() (in module ttnn)": [[317, "ttnn.subalpha"]], "subalpha_bw() (in module ttnn)": [[318, "ttnn.subalpha_bw"]], "subtract() (in module ttnn)": [[319, "ttnn.subtract"]], "sum() (in module ttnn)": [[320, "ttnn.sum"]], "swiglu() (in module ttnn)": [[321, "ttnn.swiglu"]], "swish() (in module ttnn)": [[322, "ttnn.swish"]], "synchronize_device() (in module ttnn)": [[323, "ttnn.synchronize_device"]], "tan() (in module ttnn)": [[324, "ttnn.tan"]], "tan_bw() (in module ttnn)": [[325, "ttnn.tan_bw"]], "tanh() (in module ttnn)": [[326, "ttnn.tanh"]], "tanh_bw() (in module ttnn)": [[327, "ttnn.tanh_bw"]], "tanhshrink() (in module ttnn)": [[328, "ttnn.tanhshrink"]], "tanhshrink_bw() (in module ttnn)": [[329, "ttnn.tanhshrink_bw"]], "threshold() (in module ttnn)": [[330, "ttnn.threshold"]], "threshold_bw() (in module ttnn)": [[331, "ttnn.threshold_bw"]], "tilize() (in module ttnn)": [[332, "ttnn.tilize"]], "tilize_with_val_padding() (in module ttnn)": [[333, "ttnn.tilize_with_val_padding"]], "to_device() (in module ttnn)": [[334, "ttnn.to_device"]], "to_layout() (in module ttnn)": [[335, "ttnn.to_layout"]], "to_memory_config() (in module ttnn)": [[336, "ttnn.to_memory_config"]], "to_torch() (in module ttnn)": [[337, "ttnn.to_torch"]], "topk() (in module ttnn)": [[338, "ttnn.topk"]], "attention_softmax() (in module ttnn.transformer)": [[339, "ttnn.transformer.attention_softmax"]], "attention_softmax_() (in module ttnn.transformer)": [[340, "ttnn.transformer.attention_softmax_"]], "concatenate_heads() (in module ttnn.transformer)": [[341, "ttnn.transformer.concatenate_heads"]], "scaled_dot_product_attention() (in module ttnn.transformer)": [[342, "ttnn.transformer.scaled_dot_product_attention"]], "scaled_dot_product_attention_decode() (in module ttnn.transformer)": [[343, "ttnn.transformer.scaled_dot_product_attention_decode"]], "split_query_key_value_and_split_heads() (in module ttnn.transformer)": [[344, "ttnn.transformer.split_query_key_value_and_split_heads"]], "tril() (in module ttnn)": [[345, "ttnn.tril"]], "triu() (in module ttnn)": [[346, "ttnn.triu"]], "trunc() (in module ttnn)": [[347, "ttnn.trunc"]], "trunc_bw() (in module ttnn)": [[348, "ttnn.trunc_bw"]], "unary_chain() (in module ttnn)": [[349, "ttnn.unary_chain"]], "untilize() (in module ttnn)": [[350, "ttnn.untilize"]], "untilize_with_halo_v2() (in module ttnn)": [[351, "ttnn.untilize_with_halo_v2"]], "untilize_with_unpadding() (in module ttnn)": [[352, "ttnn.untilize_with_unpadding"]], "upsample() (in module ttnn)": [[353, "ttnn.upsample"]], "var() (in module ttnn)": [[354, "ttnn.var"]], "where() (in module ttnn)": [[355, "ttnn.where"]], "where_bw() (in module ttnn)": [[356, "ttnn.where_bw"]], "xlogy() (in module ttnn)": [[357, "ttnn.xlogy"]], "xlogy_bw() (in module ttnn)": [[358, "ttnn.xlogy_bw"]], "zeros() (in module ttnn)": [[359, "ttnn.zeros"]], "zeros_like() (in module ttnn)": [[360, "ttnn.zeros_like"]], "memoryconfig (class in ttnn)": [[365, "ttnn.MemoryConfig"]], "tensor (class in ttnn)": [[365, "ttnn.Tensor"]], "__init__() (ttnn.memoryconfig method)": [[365, "ttnn.MemoryConfig.__init__"]], "__init__() (ttnn.tensor method)": [[365, "ttnn.Tensor.__init__"]], "buffer() (ttnn.tensor method)": [[365, "ttnn.Tensor.buffer"]], "device() (ttnn.tensor method)": [[365, "ttnn.Tensor.device"]], "get_dtype() (ttnn.tensor method)": [[365, "ttnn.Tensor.get_dtype"]], "get_layout() (ttnn.tensor method)": [[365, "ttnn.Tensor.get_layout"]], "pad() (ttnn.tensor method)": [[365, "ttnn.Tensor.pad"]], "pad_to_tile() (ttnn.tensor method)": [[365, "ttnn.Tensor.pad_to_tile"]], "storage_type() (ttnn.tensor method)": [[365, "ttnn.Tensor.storage_type"]], "to() (ttnn.tensor method)": [[365, "ttnn.Tensor.to"]], "unpad() (ttnn.tensor method)": [[365, "ttnn.Tensor.unpad"]], "unpad_from_tile() (ttnn.tensor method)": [[365, "ttnn.Tensor.unpad_from_tile"]], "adaptiveavgpool2d (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.AdaptiveAvgPool2d"]], "addandnorm() (in module tt_lib.fused_ops.add_and_norm)": [[366, "tt_lib.fused_ops.add_and_norm.AddAndNorm"]], "batchnorm2d (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.BatchNorm2d"]], "bcastopdim (class in ttnn)": [[366, "ttnn.BcastOpDim"]], "bcastopmath (class in ttnn)": [[366, "ttnn.BcastOpMath"]], "conv2d (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.Conv2d"]], "groupnorm (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.GroupNorm"]], "layernorm (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.LayerNorm"]], "layernorm() (in module tt_lib.fused_ops.layernorm)": [[366, "tt_lib.fused_ops.layernorm.Layernorm"]], "linear() (in module tt_lib.fused_ops.linear)": [[366, "tt_lib.fused_ops.linear.Linear"]], "maxpool2d (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.MaxPool2d"]], "binary_bitwise_and (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.binary_bitwise_and"]], "binary_bitwise_left_shift (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.binary_bitwise_left_shift"]], "binary_bitwise_or (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.binary_bitwise_or"]], "binary_bitwise_right_shift (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.binary_bitwise_right_shift"]], "binary_bitwise_xor (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.binary_bitwise_xor"]], "binary_fmod (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.binary_fmod"]], "bitwise_not (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.bitwise_not"]], "ceil (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.ceil"]], "chunk() (in module tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.chunk"]], "concat() (in module tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.concat"]], "conv2d() (in module tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.conv2d"]], "cpu() (in module ttnn.tensor)": [[366, "ttnn.Tensor.cpu"]], "floor (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.floor"]], "full() (in module tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.full"]], "group_norm() (in module tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.group_norm"]], "group_norm() (in module ttnn.operations.moreh)": [[366, "ttnn.operations.moreh.group_norm"]], "group_norm_backward() (in module ttnn.operations.moreh)": [[366, "ttnn.operations.moreh.group_norm_backward"]], "interpolate() (in module tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.interpolate"]], "layer_norm() (in module tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.layer_norm"]], "logsoftmax() (in module ttnn.operations.moreh)": [[366, "ttnn.operations.moreh.logsoftmax"]], "logsoftmax_backward() (in module ttnn.operations.moreh)": [[366, "ttnn.operations.moreh.logsoftmax_backward"]], "mean() (in module ttnn.operations.moreh)": [[366, "ttnn.operations.moreh.mean"]], "mean_backward() (in module ttnn.operations.moreh)": [[366, "ttnn.operations.moreh.mean_backward"]], "norm() (in module ttnn.operations.moreh)": [[366, "ttnn.operations.moreh.norm"]], "norm_backward() (in module ttnn.operations.moreh)": [[366, "ttnn.operations.moreh.norm_backward"]], "pad() (in module tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.pad"]], "repeat() (in module tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.repeat"]], "repeat_interleave() (in module tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.repeat_interleave"]], "reshape() (in module tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.reshape"]], "silu() (in module tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.silu"]], "softmax() (in module tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.softmax"]], "softmax() (in module ttnn.operations.moreh)": [[366, "ttnn.operations.moreh.softmax"]], "softmax_backward() (in module ttnn.operations.moreh)": [[366, "ttnn.operations.moreh.softmax_backward"]], "softmin() (in module ttnn.operations.moreh)": [[366, "ttnn.operations.moreh.softmin"]], "softmin_backward() (in module ttnn.operations.moreh)": [[366, "ttnn.operations.moreh.softmin_backward"]], "tensor_slice() (in module tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.tensor_slice"]], "torch_argmax (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.torch_argmax"]], "torch_argmin (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.torch_argmin"]], "trunc (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.trunc"]], "unary_bitwise_and (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.unary_bitwise_and"]], "unary_bitwise_left_shift (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.unary_bitwise_left_shift"]], "unary_bitwise_or (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.unary_bitwise_or"]], "unary_bitwise_right_shift (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.unary_bitwise_right_shift"]], "unary_bitwise_xor (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.unary_bitwise_xor"]], "unary_fmod (class in tt_lib.fallback_ops)": [[366, "tt_lib.fallback_ops.unary_fmod"]], "shape (class in ttnn)": [[371, "ttnn.Shape"]], "rank (ttnn.shape property)": [[371, "ttnn.Shape.rank"]], "to_rank() (ttnn.shape method)": [[371, "ttnn.Shape.to_rank"]], "with_tile_padding() (ttnn.shape method)": [[371, "ttnn.Shape.with_tile_padding"]]}})