[
  {
    "Name": "to",
    "Input Size": "[(1, 1, 100, 128)]",
    "Output Size": "[(1, 1, 100, 128)]",
    "Attributes": "Tensor[(1, 1, 100, 128)], torch.bool",
    "Count": 1
  },
  {
    "Name": "to",
    "Input Size": "[(1, 1, 100, 800)]",
    "Output Size": "[(1, 1, 100, 800)]",
    "Attributes": "Tensor[(1, 1, 100, 800)], torch.bool",
    "Count": 1
  },
  {
    "Name": "to",
    "Input Size": "[(1, 1, 100, 800)]",
    "Output Size": "[(1, 1, 100, 800)]",
    "Attributes": "Tensor[(1, 1, 100, 800)], torch.float32",
    "Count": 1
  },
  {
    "Name": "to",
    "Input Size": "[(1, 1, 200, 255)]",
    "Output Size": "[(1, 1, 200, 255)]",
    "Attributes": "Tensor[(1, 1, 200, 255)], torch.bool",
    "Count": 1
  },
  {
    "Name": "to",
    "Input Size": "[(1, 1, 25, 32)]",
    "Output Size": "[(1, 1, 25, 32)]",
    "Attributes": "Tensor[(1, 1, 25, 32)], torch.bool",
    "Count": 1
  },
  {
    "Name": "to",
    "Input Size": "[(1, 1, 50, 64)]",
    "Output Size": "[(1, 1, 50, 64)]",
    "Attributes": "Tensor[(1, 1, 50, 64)], torch.bool",
    "Count": 1
  },
  {
    "Name": "to",
    "Input Size": "[(1, 1, 800, 800)]",
    "Output Size": "[(1, 1, 800, 800)]",
    "Attributes": "Tensor[(1, 1, 800, 800)], torch.bool",
    "Count": 1
  },
  {
    "Name": "to",
    "Input Size": "[(1, 1, 800, 800)]",
    "Output Size": "[(1, 1, 800, 800)]",
    "Attributes": "Tensor[(1, 1, 800, 800)], torch.float32",
    "Count": 1
  },
  {
    "Name": "to",
    "Input Size": "[(1, 256, 100, 128)]",
    "Output Size": "[(1, 256, 100, 128)]",
    "Attributes": "Tensor[(1, 256, 100, 128)], torch.float32",
    "Count": 1
  },
  {
    "Name": "to",
    "Input Size": "[(1, 256, 200, 255)]",
    "Output Size": "[(1, 256, 200, 255)]",
    "Attributes": "Tensor[(1, 256, 200, 255)], torch.float32",
    "Count": 1
  },
  {
    "Name": "to",
    "Input Size": "[(1, 256, 25, 32)]",
    "Output Size": "[(1, 256, 25, 32)]",
    "Attributes": "Tensor[(1, 256, 25, 32)], torch.float32",
    "Count": 1
  },
  {
    "Name": "to",
    "Input Size": "[(1, 256, 50, 64)]",
    "Output Size": "[(1, 256, 50, 64)]",
    "Attributes": "Tensor[(1, 256, 50, 64)], torch.float32",
    "Count": 1
  }
]
